; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2d3d456de7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5, i32 %6, i32 %7) local_unnamed_addr !dbg !5 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %10 = and i32 %9, 127, !dbg !8
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !9
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.z;", "=r"() #1, !dbg !10
  %13 = add i32 %12, 1, !dbg !11
  %14 = mul i32 %13, %11, !dbg !12
  %15 = icmp slt i32 %14, 14080, !dbg !13
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !14
  %17 = shl i32 %16, 10, !dbg !15
  %18 = or i32 %17, %10, !dbg !16
  %19 = or i32 %18, 128, !dbg !16
  %20 = or i32 %18, 256, !dbg !16
  %21 = or i32 %18, 384, !dbg !16
  %22 = or i32 %18, 512, !dbg !16
  %23 = or i32 %18, 640, !dbg !16
  %24 = or i32 %18, 768, !dbg !16
  %25 = or i32 %18, 896, !dbg !16
  %26 = icmp slt i32 %18, %7, !dbg !17
  %27 = icmp slt i32 %19, %7, !dbg !17
  %28 = icmp slt i32 %20, %7, !dbg !17
  %29 = icmp slt i32 %21, %7, !dbg !17
  %30 = icmp slt i32 %22, %7, !dbg !17
  %31 = icmp slt i32 %23, %7, !dbg !17
  %32 = icmp slt i32 %24, %7, !dbg !17
  %33 = icmp slt i32 %25, %7, !dbg !17
  %34 = srem i32 %14, 640, !dbg !18
  %35 = mul i32 %18, 14080, !dbg !19
  %36 = mul i32 %19, 14080, !dbg !19
  %37 = mul i32 %20, 14080, !dbg !19
  %38 = mul i32 %21, 14080, !dbg !19
  %39 = mul i32 %22, 14080, !dbg !19
  %40 = mul i32 %23, 14080, !dbg !19
  %41 = mul i32 %24, 14080, !dbg !19
  %42 = mul i32 %25, 14080, !dbg !19
  %43 = add i32 %35, %14, !dbg !20
  %44 = add i32 %14, %36, !dbg !20
  %45 = add i32 %14, %37, !dbg !20
  %46 = add i32 %14, %38, !dbg !20
  %47 = add i32 %14, %39, !dbg !20
  %48 = add i32 %14, %40, !dbg !20
  %49 = add i32 %14, %41, !dbg !20
  %50 = add i32 %14, %42, !dbg !20
  %51 = sext i32 %43 to i64, !dbg !21
  %52 = getelementptr half, ptr addrspace(1) %0, i64 %51, !dbg !21
  %53 = sext i32 %44 to i64, !dbg !21
  %54 = getelementptr half, ptr addrspace(1) %0, i64 %53, !dbg !21
  %55 = sext i32 %45 to i64, !dbg !21
  %56 = getelementptr half, ptr addrspace(1) %0, i64 %55, !dbg !21
  %57 = sext i32 %46 to i64, !dbg !21
  %58 = getelementptr half, ptr addrspace(1) %0, i64 %57, !dbg !21
  %59 = sext i32 %47 to i64, !dbg !21
  %60 = getelementptr half, ptr addrspace(1) %0, i64 %59, !dbg !21
  %61 = sext i32 %48 to i64, !dbg !21
  %62 = getelementptr half, ptr addrspace(1) %0, i64 %61, !dbg !21
  %63 = sext i32 %49 to i64, !dbg !21
  %64 = getelementptr half, ptr addrspace(1) %0, i64 %63, !dbg !21
  %65 = sext i32 %50 to i64, !dbg !21
  %66 = getelementptr half, ptr addrspace(1) %0, i64 %65, !dbg !21
  %67 = and i1 %15, %26, !dbg !22
  %68 = and i1 %27, %15, !dbg !22
  %69 = and i1 %28, %15, !dbg !22
  %70 = and i1 %29, %15, !dbg !22
  %71 = and i1 %30, %15, !dbg !22
  %72 = and i1 %31, %15, !dbg !22
  %73 = and i1 %32, %15, !dbg !22
  %74 = and i1 %33, %15, !dbg !22
  %75 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %52, i1 %67) #1, !dbg !23
  %76 = bitcast i16 %75 to half, !dbg !23
  %77 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %54, i1 %68) #1, !dbg !23
  %78 = bitcast i16 %77 to half, !dbg !23
  %79 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %56, i1 %69) #1, !dbg !23
  %80 = bitcast i16 %79 to half, !dbg !23
  %81 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %58, i1 %70) #1, !dbg !23
  %82 = bitcast i16 %81 to half, !dbg !23
  %83 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %60, i1 %71) #1, !dbg !23
  %84 = bitcast i16 %83 to half, !dbg !23
  %85 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %62, i1 %72) #1, !dbg !23
  %86 = bitcast i16 %85 to half, !dbg !23
  %87 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %64, i1 %73) #1, !dbg !23
  %88 = bitcast i16 %87 to half, !dbg !23
  %89 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %66, i1 %74) #1, !dbg !23
  %90 = bitcast i16 %89 to half, !dbg !23
  %91 = fpext half %76 to float, !dbg !24
  %92 = fpext half %78 to float, !dbg !24
  %93 = fpext half %80 to float, !dbg !24
  %94 = fpext half %82 to float, !dbg !24
  %95 = fpext half %84 to float, !dbg !24
  %96 = fpext half %86 to float, !dbg !24
  %97 = fpext half %88 to float, !dbg !24
  %98 = fpext half %90 to float, !dbg !24
  %99 = sext i32 %34 to i64, !dbg !25
  %100 = getelementptr half, ptr addrspace(1) %1, i64 %99, !dbg !25
  %101 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %100, i1 %15) #1, !dbg !26
  %102 = bitcast i16 %101 to half, !dbg !26
  %103 = fpext half %102 to float, !dbg !27
  %104 = mul i32 %5, %4, !dbg !28
  %105 = mul i32 %104, %14, !dbg !29
  %106 = add i32 %18, %105, !dbg !30
  %107 = add i32 %105, %19, !dbg !30
  %108 = add i32 %105, %20, !dbg !30
  %109 = add i32 %105, %21, !dbg !30
  %110 = add i32 %105, %22, !dbg !30
  %111 = add i32 %105, %23, !dbg !30
  %112 = add i32 %105, %24, !dbg !30
  %113 = add i32 %105, %25, !dbg !30
  %114 = sext i32 %106 to i64, !dbg !31
  %115 = getelementptr half, ptr addrspace(1) %2, i64 %114, !dbg !31
  %116 = sext i32 %107 to i64, !dbg !31
  %117 = getelementptr half, ptr addrspace(1) %2, i64 %116, !dbg !31
  %118 = sext i32 %108 to i64, !dbg !31
  %119 = getelementptr half, ptr addrspace(1) %2, i64 %118, !dbg !31
  %120 = sext i32 %109 to i64, !dbg !31
  %121 = getelementptr half, ptr addrspace(1) %2, i64 %120, !dbg !31
  %122 = sext i32 %110 to i64, !dbg !31
  %123 = getelementptr half, ptr addrspace(1) %2, i64 %122, !dbg !31
  %124 = sext i32 %111 to i64, !dbg !31
  %125 = getelementptr half, ptr addrspace(1) %2, i64 %124, !dbg !31
  %126 = sext i32 %112 to i64, !dbg !31
  %127 = getelementptr half, ptr addrspace(1) %2, i64 %126, !dbg !31
  %128 = sext i32 %113 to i64, !dbg !31
  %129 = getelementptr half, ptr addrspace(1) %2, i64 %128, !dbg !31
  %130 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %115, i1 %67) #1, !dbg !32
  %131 = bitcast i16 %130 to half, !dbg !32
  %132 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %117, i1 %68) #1, !dbg !32
  %133 = bitcast i16 %132 to half, !dbg !32
  %134 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %119, i1 %69) #1, !dbg !32
  %135 = bitcast i16 %134 to half, !dbg !32
  %136 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %121, i1 %70) #1, !dbg !32
  %137 = bitcast i16 %136 to half, !dbg !32
  %138 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %123, i1 %71) #1, !dbg !32
  %139 = bitcast i16 %138 to half, !dbg !32
  %140 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %125, i1 %72) #1, !dbg !32
  %141 = bitcast i16 %140 to half, !dbg !32
  %142 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %127, i1 %73) #1, !dbg !32
  %143 = bitcast i16 %142 to half, !dbg !32
  %144 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %129, i1 %74) #1, !dbg !32
  %145 = bitcast i16 %144 to half, !dbg !32
  %146 = fpext half %131 to float, !dbg !33
  %147 = fpext half %133 to float, !dbg !33
  %148 = fpext half %135 to float, !dbg !33
  %149 = fpext half %137 to float, !dbg !33
  %150 = fpext half %139 to float, !dbg !33
  %151 = fpext half %141 to float, !dbg !33
  %152 = fpext half %143 to float, !dbg !33
  %153 = fpext half %145 to float, !dbg !33
  %154 = fadd float %91, %103, !dbg !34
  %155 = fadd float %92, %103, !dbg !34
  %156 = fadd float %93, %103, !dbg !34
  %157 = fadd float %94, %103, !dbg !34
  %158 = fadd float %95, %103, !dbg !34
  %159 = fadd float %96, %103, !dbg !34
  %160 = fadd float %97, %103, !dbg !34
  %161 = fadd float %98, %103, !dbg !34
  %162 = fadd float %154, %146, !dbg !35
  %163 = fadd float %155, %147, !dbg !35
  %164 = fadd float %156, %148, !dbg !35
  %165 = fadd float %157, %149, !dbg !35
  %166 = fadd float %158, %150, !dbg !35
  %167 = fadd float %159, %151, !dbg !35
  %168 = fadd float %160, %152, !dbg !35
  %169 = fadd float %161, %153, !dbg !35
  %170 = getelementptr half, ptr addrspace(1) %3, i64 %114, !dbg !36
  %171 = getelementptr half, ptr addrspace(1) %3, i64 %116, !dbg !36
  %172 = getelementptr half, ptr addrspace(1) %3, i64 %118, !dbg !36
  %173 = getelementptr half, ptr addrspace(1) %3, i64 %120, !dbg !36
  %174 = getelementptr half, ptr addrspace(1) %3, i64 %122, !dbg !36
  %175 = getelementptr half, ptr addrspace(1) %3, i64 %124, !dbg !36
  %176 = getelementptr half, ptr addrspace(1) %3, i64 %126, !dbg !36
  %177 = getelementptr half, ptr addrspace(1) %3, i64 %128, !dbg !36
  %178 = fptrunc float %162 to half, !dbg !37
  %179 = fptrunc float %163 to half, !dbg !37
  %180 = fptrunc float %164 to half, !dbg !37
  %181 = fptrunc float %165 to half, !dbg !37
  %182 = fptrunc float %166 to half, !dbg !37
  %183 = fptrunc float %167 to half, !dbg !37
  %184 = fptrunc float %168 to half, !dbg !37
  %185 = fptrunc float %169 to half, !dbg !37
  %186 = bitcast half %178 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %186, ptr addrspace(1) %170, i1 %67) #1, !dbg !37
  %187 = bitcast half %179 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %187, ptr addrspace(1) %171, i1 %68) #1, !dbg !37
  %188 = bitcast half %180 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %188, ptr addrspace(1) %172, i1 %69) #1, !dbg !37
  %189 = bitcast half %181 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %189, ptr addrspace(1) %173, i1 %70) #1, !dbg !37
  %190 = bitcast half %182 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %190, ptr addrspace(1) %174, i1 %71) #1, !dbg !37
  %191 = bitcast half %183 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %191, ptr addrspace(1) %175, i1 %72) #1, !dbg !37
  %192 = bitcast half %184 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %192, ptr addrspace(1) %176, i1 %73) #1, !dbg !37
  %193 = bitcast half %185 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %193, ptr addrspace(1) %177, i1 %74) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "ccbzo6emgken5gonniacp77wxptgxousgbm5wb4fvxtfppggfsrq.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/cb")
!3 = !{ptr @triton__0d1d2d3d456de7, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3d456de7, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3d456de7", linkageName: "triton__0d1d2d3d456de7", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 26, column: 44, scope: !5)
!9 = !DILocation(line: 22, column: 28, scope: !5)
!10 = !DILocation(line: 22, column: 48, scope: !5)
!11 = !DILocation(line: 22, column: 53, scope: !5)
!12 = !DILocation(line: 22, column: 34, scope: !5)
!13 = !DILocation(line: 24, column: 21, scope: !5)
!14 = !DILocation(line: 25, column: 28, scope: !5)
!15 = !DILocation(line: 25, column: 33, scope: !5)
!16 = !DILocation(line: 26, column: 23, scope: !5)
!17 = !DILocation(line: 27, column: 21, scope: !5)
!18 = !DILocation(line: 30, column: 18, scope: !5)
!19 = !DILocation(line: 31, column: 42, scope: !5)
!20 = !DILocation(line: 31, column: 36, scope: !5)
!21 = !DILocation(line: 31, column: 30, scope: !5)
!22 = !DILocation(line: 31, column: 56, scope: !5)
!23 = !DILocation(line: 31, column: 48, scope: !5)
!24 = !DILocation(line: 31, column: 96, scope: !5)
!25 = !DILocation(line: 32, column: 30, scope: !5)
!26 = !DILocation(line: 32, column: 35, scope: !5)
!27 = !DILocation(line: 32, column: 75, scope: !5)
!28 = !DILocation(line: 33, column: 40, scope: !5)
!29 = !DILocation(line: 33, column: 44, scope: !5)
!30 = !DILocation(line: 33, column: 36, scope: !5)
!31 = !DILocation(line: 33, column: 30, scope: !5)
!32 = !DILocation(line: 33, column: 50, scope: !5)
!33 = !DILocation(line: 33, column: 98, scope: !5)
!34 = !DILocation(line: 34, column: 18, scope: !5)
!35 = !DILocation(line: 35, column: 18, scope: !5)
!36 = !DILocation(line: 36, column: 25, scope: !5)
!37 = !DILocation(line: 36, column: 51, scope: !5)
!38 = !DILocation(line: 36, column: 4, scope: !5)
