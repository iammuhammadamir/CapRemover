; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d234de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr !dbg !5 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %7 = shl i32 %6, 3, !dbg !8
  %8 = and i32 %7, 1016, !dbg !8
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %10 = shl i32 %9, 10, !dbg !10
  %11 = or i32 %10, %8, !dbg !11
  %12 = or i32 %11, 1, !dbg !11
  %13 = or i32 %11, 2, !dbg !11
  %14 = or i32 %11, 3, !dbg !11
  %15 = or i32 %11, 4, !dbg !11
  %16 = or i32 %11, 5, !dbg !11
  %17 = or i32 %11, 6, !dbg !11
  %18 = or i32 %11, 7, !dbg !11
  %19 = sdiv i32 %11, 29440, !dbg !12
  %20 = srem i32 %19, 8, !dbg !13
  %.frozen = freeze i32 %11
  %21 = sdiv i32 %.frozen, 1280, !dbg !14
  %22 = srem i32 %21, 23, !dbg !15
  %23 = mul i32 %21, 1280
  %.decomposed = sub i32 %.frozen, %23
  %24 = srem i32 %12, 1280, !dbg !16
  %25 = srem i32 %13, 1280, !dbg !16
  %26 = srem i32 %14, 1280, !dbg !16
  %27 = srem i32 %15, 1280, !dbg !16
  %28 = srem i32 %16, 1280, !dbg !16
  %29 = srem i32 %17, 1280, !dbg !16
  %30 = srem i32 %18, 1280, !dbg !16
  %31 = sdiv i32 %11, 235520, !dbg !17
  %32 = sitofp i32 %20 to float, !dbg !18
  %33 = sitofp i32 %2 to float, !dbg !19
  %34 = fmul float %33, 1.250000e-01, !dbg !19
  %35 = fmul float %34, %32, !dbg !20
  %36 = fptosi float %35 to i64, !dbg !21
  %37 = sitofp i32 %22 to float, !dbg !22
  %38 = sitofp i32 %3 to float, !dbg !23
  %39 = fmul float %38, 0x3FA642C860000000, !dbg !23
  %40 = fmul float %39, %37, !dbg !24
  %41 = fptosi float %40 to i64, !dbg !25
  %42 = sext i32 %3 to i64, !dbg !26
  %43 = mul i64 %36, %42, !dbg !26
  %44 = mul i32 %3, %2, !dbg !27
  %45 = mul i32 %.decomposed, %44, !dbg !28
  %46 = mul i32 %44, %24, !dbg !28
  %47 = mul i32 %44, %25, !dbg !28
  %48 = mul i32 %44, %26, !dbg !28
  %49 = mul i32 %44, %27, !dbg !28
  %50 = mul i32 %44, %28, !dbg !28
  %51 = mul i32 %44, %29, !dbg !28
  %52 = mul i32 %44, %30, !dbg !28
  %53 = sext i32 %45 to i64, !dbg !29
  %54 = sext i32 %46 to i64, !dbg !29
  %55 = sext i32 %47 to i64, !dbg !29
  %56 = sext i32 %48 to i64, !dbg !29
  %57 = sext i32 %49 to i64, !dbg !29
  %58 = sext i32 %50 to i64, !dbg !29
  %59 = sext i32 %51 to i64, !dbg !29
  %60 = sext i32 %52 to i64, !dbg !29
  %61 = mul i32 %44, 1280, !dbg !30
  %62 = mul i32 %61, %31, !dbg !31
  %63 = sext i32 %62 to i64, !dbg !32
  %64 = getelementptr half, ptr addrspace(1) %0, i64 %43, !dbg !33
  %65 = getelementptr half, ptr addrspace(1) %64, i64 %41, !dbg !33
  %66 = getelementptr half, ptr addrspace(1) %65, i64 %53, !dbg !33
  %67 = getelementptr half, ptr addrspace(1) %66, i64 %63, !dbg !33
  %68 = getelementptr half, ptr addrspace(1) %65, i64 %54, !dbg !33
  %69 = getelementptr half, ptr addrspace(1) %68, i64 %63, !dbg !33
  %70 = getelementptr half, ptr addrspace(1) %65, i64 %55, !dbg !33
  %71 = getelementptr half, ptr addrspace(1) %70, i64 %63, !dbg !33
  %72 = getelementptr half, ptr addrspace(1) %65, i64 %56, !dbg !33
  %73 = getelementptr half, ptr addrspace(1) %72, i64 %63, !dbg !33
  %74 = getelementptr half, ptr addrspace(1) %65, i64 %57, !dbg !33
  %75 = getelementptr half, ptr addrspace(1) %74, i64 %63, !dbg !33
  %76 = getelementptr half, ptr addrspace(1) %65, i64 %58, !dbg !33
  %77 = getelementptr half, ptr addrspace(1) %76, i64 %63, !dbg !33
  %78 = getelementptr half, ptr addrspace(1) %65, i64 %59, !dbg !33
  %79 = getelementptr half, ptr addrspace(1) %78, i64 %63, !dbg !33
  %80 = getelementptr half, ptr addrspace(1) %65, i64 %60, !dbg !33
  %81 = getelementptr half, ptr addrspace(1) %80, i64 %63, !dbg !33
  %82 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %67, i1 true) #1, !dbg !34
  %83 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %69, i1 true) #1, !dbg !34
  %84 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %71, i1 true) #1, !dbg !34
  %85 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %73, i1 true) #1, !dbg !34
  %86 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %75, i1 true) #1, !dbg !34
  %87 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %77, i1 true) #1, !dbg !34
  %88 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %79, i1 true) #1, !dbg !34
  %89 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %81, i1 true) #1, !dbg !34
  %90 = sext i32 %11 to i64, !dbg !35
  %91 = getelementptr half, ptr addrspace(1) %1, i64 %90, !dbg !35
  %92 = insertelement <2 x i16> undef, i16 %82, i64 0, !dbg !36
  %93 = insertelement <2 x i16> %92, i16 %83, i64 1, !dbg !36
  %94 = bitcast <2 x i16> %93 to i32, !dbg !36
  %95 = insertelement <2 x i16> undef, i16 %84, i64 0, !dbg !36
  %96 = insertelement <2 x i16> %95, i16 %85, i64 1, !dbg !36
  %97 = bitcast <2 x i16> %96 to i32, !dbg !36
  %98 = insertelement <2 x i16> undef, i16 %86, i64 0, !dbg !36
  %99 = insertelement <2 x i16> %98, i16 %87, i64 1, !dbg !36
  %100 = bitcast <2 x i16> %99 to i32, !dbg !36
  %101 = insertelement <2 x i16> undef, i16 %88, i64 0, !dbg !36
  %102 = insertelement <2 x i16> %101, i16 %89, i64 1, !dbg !36
  %103 = bitcast <2 x i16> %102 to i32, !dbg !36
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %94, i32 %97, i32 %100, i32 %103, ptr addrspace(1) %91, i1 true) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cp673lhy53oajer3dw2fsjzzwhu2v2cjo2cnsti2cbekek2ccblq.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/p6")
!3 = !{ptr @triton__0d1d234de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d234de, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "triton__0d1d234de", linkageName: "triton__0d1d234de", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 23, column: 36, scope: !5)
!9 = !DILocation(line: 22, column: 28, scope: !5)
!10 = !DILocation(line: 22, column: 33, scope: !5)
!11 = !DILocation(line: 23, column: 23, scope: !5)
!12 = !DILocation(line: 25, column: 20, scope: !5)
!13 = !DILocation(line: 25, column: 29, scope: !5)
!14 = !DILocation(line: 26, column: 20, scope: !5)
!15 = !DILocation(line: 26, column: 28, scope: !5)
!16 = !DILocation(line: 27, column: 18, scope: !5)
!17 = !DILocation(line: 28, column: 20, scope: !5)
!18 = !DILocation(line: 31, column: 19, scope: !5)
!19 = !DILocation(line: 37, column: 17, scope: !5)
!20 = !DILocation(line: 39, column: 18, scope: !5)
!21 = !DILocation(line: 40, column: 20, scope: !5)
!22 = !DILocation(line: 42, column: 21, scope: !5)
!23 = !DILocation(line: 46, column: 19, scope: !5)
!24 = !DILocation(line: 48, column: 20, scope: !5)
!25 = !DILocation(line: 49, column: 21, scope: !5)
!26 = !DILocation(line: 50, column: 44, scope: !5)
!27 = !DILocation(line: 50, column: 58, scope: !5)
!28 = !DILocation(line: 50, column: 62, scope: !5)
!29 = !DILocation(line: 50, column: 54, scope: !5)
!30 = !DILocation(line: 50, column: 78, scope: !5)
!31 = !DILocation(line: 50, column: 82, scope: !5)
!32 = !DILocation(line: 50, column: 69, scope: !5)
!33 = !DILocation(line: 50, column: 31, scope: !5)
!34 = !DILocation(line: 50, column: 88, scope: !5)
!35 = !DILocation(line: 53, column: 25, scope: !5)
!36 = !DILocation(line: 53, column: 37, scope: !5)
!37 = !DILocation(line: 53, column: 4, scope: !5)
