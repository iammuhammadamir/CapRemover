; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 3, !dbg !10
  %7 = and i32 %6, 1016, !dbg !10
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !11
  %9 = shl i32 %8, 10, !dbg !12
  %10 = or i32 %9, %7, !dbg !13
  %11 = icmp slt i32 %10, %3, !dbg !14
  %.frozen = freeze i32 %10
  %12 = sdiv i32 %.frozen, 2560, !dbg !15
  %13 = mul i32 %12, 2560
  %.decomposed = sub i32 %.frozen, %13
  %14 = mul i32 %12, 5120, !dbg !16
  %15 = add i32 %14, %.decomposed, !dbg !17
  %16 = sext i32 %15 to i64, !dbg !18
  %17 = getelementptr half, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %17, i1 %11) #4, !dbg !19
  %19 = sext i32 %.decomposed to i64, !dbg !20
  %20 = getelementptr half, ptr addrspace(1) %1, i64 %19, !dbg !20
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %20, i1 %11) #4, !dbg !21
  %22 = add nsw i32 %.decomposed, 2560, !dbg !22
  %23 = add i32 %22, %14, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr half, ptr addrspace(1) %0, i64 %24, !dbg !24
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %25, i1 %11) #4, !dbg !25
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !25
  %28 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !25
  %29 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !25
  %30 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !25
  %extelt.offset8 = lshr i32 %27, 16, !dbg !25
  %extelt.offset9 = lshr i32 %28, 16, !dbg !25
  %extelt.offset10 = lshr i32 %29, 16, !dbg !25
  %extelt.offset11 = lshr i32 %30, 16, !dbg !25
  %31 = zext nneg i32 %22 to i64, !dbg !26
  %32 = getelementptr half, ptr addrspace(1) %1, i64 %31, !dbg !26
  %33 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %32, i1 %11) #4, !dbg !27
  %34 = extractvalue { i32, i32, i32, i32 } %33, 0, !dbg !27
  %35 = extractvalue { i32, i32, i32, i32 } %33, 1, !dbg !27
  %36 = extractvalue { i32, i32, i32, i32 } %33, 2, !dbg !27
  %37 = extractvalue { i32, i32, i32, i32 } %33, 3, !dbg !27
  %extelt.offset12 = lshr i32 %34, 16, !dbg !27
  %extelt.offset13 = lshr i32 %35, 16, !dbg !27
  %extelt.offset14 = lshr i32 %36, 16, !dbg !27
  %extelt.offset15 = lshr i32 %37, 16, !dbg !27
  %38 = insertelement <2 x i32> poison, i32 %27, i64 0, !dbg !25
  %39 = insertelement <2 x i32> %38, i32 %extelt.offset8, i64 1, !dbg !25
  %40 = trunc <2 x i32> %39 to <2 x i16>, !dbg !25
  %41 = bitcast <2 x i16> %40 to <2 x half>, !dbg !25
  %42 = fpext <2 x half> %41 to <2 x float>, !dbg !28
  %43 = insertelement <2 x i32> poison, i32 %34, i64 0, !dbg !27
  %44 = insertelement <2 x i32> %43, i32 %extelt.offset12, i64 1, !dbg !27
  %45 = trunc <2 x i32> %44 to <2 x i16>, !dbg !27
  %46 = bitcast <2 x i16> %45 to <2 x half>, !dbg !27
  %47 = fpext <2 x half> %46 to <2 x float>, !dbg !29
  %48 = fadd <2 x float> %42, %47, !dbg !30
  %49 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !25
  %50 = insertelement <2 x i32> %49, i32 %extelt.offset9, i64 1, !dbg !25
  %51 = trunc <2 x i32> %50 to <2 x i16>, !dbg !25
  %52 = bitcast <2 x i16> %51 to <2 x half>, !dbg !25
  %53 = fpext <2 x half> %52 to <2 x float>, !dbg !28
  %54 = insertelement <2 x i32> poison, i32 %35, i64 0, !dbg !27
  %55 = insertelement <2 x i32> %54, i32 %extelt.offset13, i64 1, !dbg !27
  %56 = trunc <2 x i32> %55 to <2 x i16>, !dbg !27
  %57 = bitcast <2 x i16> %56 to <2 x half>, !dbg !27
  %58 = fpext <2 x half> %57 to <2 x float>, !dbg !29
  %59 = fadd <2 x float> %53, %58, !dbg !30
  %60 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !25
  %61 = insertelement <2 x i32> %60, i32 %extelt.offset10, i64 1, !dbg !25
  %62 = trunc <2 x i32> %61 to <2 x i16>, !dbg !25
  %63 = bitcast <2 x i16> %62 to <2 x half>, !dbg !25
  %64 = fpext <2 x half> %63 to <2 x float>, !dbg !28
  %65 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !27
  %66 = insertelement <2 x i32> %65, i32 %extelt.offset14, i64 1, !dbg !27
  %67 = trunc <2 x i32> %66 to <2 x i16>, !dbg !27
  %68 = bitcast <2 x i16> %67 to <2 x half>, !dbg !27
  %69 = fpext <2 x half> %68 to <2 x float>, !dbg !29
  %70 = fadd <2 x float> %64, %69, !dbg !30
  %71 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !25
  %72 = insertelement <2 x i32> %71, i32 %extelt.offset11, i64 1, !dbg !25
  %73 = trunc <2 x i32> %72 to <2 x i16>, !dbg !25
  %74 = bitcast <2 x i16> %73 to <2 x half>, !dbg !25
  %75 = fpext <2 x half> %74 to <2 x float>, !dbg !28
  %76 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !27
  %77 = insertelement <2 x i32> %76, i32 %extelt.offset15, i64 1, !dbg !27
  %78 = trunc <2 x i32> %77 to <2 x i16>, !dbg !27
  %79 = bitcast <2 x i16> %78 to <2 x half>, !dbg !27
  %80 = fpext <2 x half> %79 to <2 x float>, !dbg !29
  %81 = fadd <2 x float> %75, %80, !dbg !30
  %82 = extractelement <2 x float> %48, i64 0, !dbg !31
  %83 = fmul float %82, 0x3FE6A09E60000000, !dbg !31
  %84 = extractelement <2 x float> %48, i64 1, !dbg !31
  %85 = fmul float %84, 0x3FE6A09E60000000, !dbg !31
  %86 = extractelement <2 x float> %59, i64 0, !dbg !31
  %87 = fmul float %86, 0x3FE6A09E60000000, !dbg !31
  %88 = extractelement <2 x float> %59, i64 1, !dbg !31
  %89 = fmul float %88, 0x3FE6A09E60000000, !dbg !31
  %90 = extractelement <2 x float> %70, i64 0, !dbg !31
  %91 = fmul float %90, 0x3FE6A09E60000000, !dbg !31
  %92 = extractelement <2 x float> %70, i64 1, !dbg !31
  %93 = fmul float %92, 0x3FE6A09E60000000, !dbg !31
  %94 = extractelement <2 x float> %81, i64 0, !dbg !31
  %95 = fmul float %94, 0x3FE6A09E60000000, !dbg !31
  %96 = extractelement <2 x float> %81, i64 1, !dbg !31
  %97 = fmul float %96, 0x3FE6A09E60000000, !dbg !31
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i = icmp eq i32 %98, 0, !dbg !32
  %99 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #4, !dbg !32
  %100 = tail call float @llvm.nvvm.fabs.f(float %83) #4, !dbg !32
  %.0.i = select i1 %.not.i, float %100, float %99, !dbg !32
  %101 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !32
  br i1 %101, label %__nv_fabsf.exit1.i, label %103, !dbg !32

__nv_fabsf.exit1.i:                               ; preds = %4
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i = icmp eq i32 %102, 0, !dbg !32
  %.01.i = select i1 %.not1.i, float %100, float %99, !dbg !32
  br label %__internal_fmad.exit.i, !dbg !32

103:                                              ; preds = %4
  %104 = fmul float %83, %83, !dbg !32
  br label %__internal_fmad.exit.i, !dbg !32

__internal_fmad.exit.i:                           ; preds = %103, %__nv_fabsf.exit1.i
  %105 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %103 ], !dbg !32
  %106 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %103 ], !dbg !32
  %107 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %103 ], !dbg !32
  %108 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %103 ], !dbg !32
  %109 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %103 ], !dbg !32
  %110 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %103 ], !dbg !32
  %111 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %103 ], !dbg !32
  %112 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %104, %103 ], !dbg !32
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i = icmp eq i32 %113, 0, !dbg !32
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %111, float %112, float %110) #4, !dbg !32
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %111, float %112, float %110) #4, !dbg !32
  %.02.i = select i1 %.not2.i, float %115, float %114, !dbg !32
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i = icmp eq i32 %116, 0, !dbg !32
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %112, float %109) #4, !dbg !32
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %112, float %109) #4, !dbg !32
  %.03.i = select i1 %.not3.i, float %118, float %117, !dbg !32
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i = icmp eq i32 %119, 0, !dbg !32
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %112, float %108) #4, !dbg !32
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %112, float %108) #4, !dbg !32
  %.04.i = select i1 %.not4.i, float %121, float %120, !dbg !32
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i = icmp eq i32 %122, 0, !dbg !32
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %112, float %107) #4, !dbg !32
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %112, float %107) #4, !dbg !32
  %.05.i = select i1 %.not5.i, float %124, float %123, !dbg !32
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i = icmp eq i32 %125, 0, !dbg !32
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %112, float %106) #4, !dbg !32
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %112, float %106) #4, !dbg !32
  %.06.i = select i1 %.not6.i, float %127, float %126, !dbg !32
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i = icmp eq i32 %128, 0, !dbg !32
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %112, float %105) #4, !dbg !32
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %112, float %105) #4, !dbg !32
  %.07.i = select i1 %.not7.i, float %130, float %129, !dbg !32
  %131 = fneg float %112, !dbg !32
  %132 = select i1 %101, float %131, float %83, !dbg !32
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i = icmp eq i32 %133, 0, !dbg !32
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %132, float %132) #4, !dbg !32
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %132, float %132) #4, !dbg !32
  %.08.i = select i1 %.not8.i, float %135, float %134, !dbg !32
  br i1 %101, label %136, label %__nv_erff.exit, !dbg !32

136:                                              ; preds = %__internal_fmad.exit.i
  %137 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #4, !dbg !32
  %138 = fsub float 1.000000e+00, %137, !dbg !32
  %139 = bitcast float %138 to i32, !dbg !32
  %140 = bitcast float %83 to i32, !dbg !32
  %141 = and i32 %140, -2147483648, !dbg !32
  %142 = or i32 %141, %139, !dbg !32
  %143 = bitcast i32 %142 to float, !dbg !32
  br label %__nv_erff.exit, !dbg !32

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %136
  %r.0.i = phi float [ %143, %136 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !32
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i16 = icmp eq i32 %144, 0, !dbg !32
  %145 = tail call float @llvm.nvvm.fabs.ftz.f(float %85) #4, !dbg !32
  %146 = tail call float @llvm.nvvm.fabs.f(float %85) #4, !dbg !32
  %.0.i17 = select i1 %.not.i16, float %146, float %145, !dbg !32
  %147 = fcmp oge float %.0.i17, 0x3FF00C1FC0000000, !dbg !32
  br i1 %147, label %__nv_fabsf.exit1.i34, label %149, !dbg !32

__nv_fabsf.exit1.i34:                             ; preds = %__nv_erff.exit
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i35 = icmp eq i32 %148, 0, !dbg !32
  %.01.i36 = select i1 %.not1.i35, float %146, float %145, !dbg !32
  br label %__internal_fmad.exit.i18, !dbg !32

149:                                              ; preds = %__nv_erff.exit
  %150 = fmul float %85, %85, !dbg !32
  br label %__internal_fmad.exit.i18, !dbg !32

__internal_fmad.exit.i18:                         ; preds = %149, %__nv_fabsf.exit1.i34
  %151 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i34 ], [ 0x3FC06EBA60000000, %149 ], !dbg !32
  %152 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i34 ], [ 0xBFD8127580000000, %149 ], !dbg !32
  %153 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i34 ], [ 0x3FBCE315E0000000, %149 ], !dbg !32
  %154 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i34 ], [ 0xBF9B837CE0000000, %149 ], !dbg !32
  %155 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i34 ], [ 0x3F755ABD40000000, %149 ], !dbg !32
  %156 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i34 ], [ 0xBF4AE9A400000000, %149 ], !dbg !32
  %157 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i34 ], [ 0x3F163D2D40000000, %149 ], !dbg !32
  %158 = phi float [ %.01.i36, %__nv_fabsf.exit1.i34 ], [ %150, %149 ], !dbg !32
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i19 = icmp eq i32 %159, 0, !dbg !32
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %157, float %158, float %156) #4, !dbg !32
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %157, float %158, float %156) #4, !dbg !32
  %.02.i20 = select i1 %.not2.i19, float %161, float %160, !dbg !32
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i21 = icmp eq i32 %162, 0, !dbg !32
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i20, float %158, float %155) #4, !dbg !32
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i20, float %158, float %155) #4, !dbg !32
  %.03.i22 = select i1 %.not3.i21, float %164, float %163, !dbg !32
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i23 = icmp eq i32 %165, 0, !dbg !32
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i22, float %158, float %154) #4, !dbg !32
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i22, float %158, float %154) #4, !dbg !32
  %.04.i24 = select i1 %.not4.i23, float %167, float %166, !dbg !32
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i25 = icmp eq i32 %168, 0, !dbg !32
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i24, float %158, float %153) #4, !dbg !32
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i24, float %158, float %153) #4, !dbg !32
  %.05.i26 = select i1 %.not5.i25, float %170, float %169, !dbg !32
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i27 = icmp eq i32 %171, 0, !dbg !32
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i26, float %158, float %152) #4, !dbg !32
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i26, float %158, float %152) #4, !dbg !32
  %.06.i28 = select i1 %.not6.i27, float %173, float %172, !dbg !32
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i29 = icmp eq i32 %174, 0, !dbg !32
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i28, float %158, float %151) #4, !dbg !32
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i28, float %158, float %151) #4, !dbg !32
  %.07.i30 = select i1 %.not7.i29, float %176, float %175, !dbg !32
  %177 = fneg float %158, !dbg !32
  %178 = select i1 %147, float %177, float %85, !dbg !32
  %179 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i31 = icmp eq i32 %179, 0, !dbg !32
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i30, float %178, float %178) #4, !dbg !32
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i30, float %178, float %178) #4, !dbg !32
  %.08.i32 = select i1 %.not8.i31, float %181, float %180, !dbg !32
  br i1 %147, label %182, label %__nv_erff.exit37, !dbg !32

182:                                              ; preds = %__internal_fmad.exit.i18
  %183 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i32) #4, !dbg !32
  %184 = fsub float 1.000000e+00, %183, !dbg !32
  %185 = bitcast float %184 to i32, !dbg !32
  %186 = bitcast float %85 to i32, !dbg !32
  %187 = and i32 %186, -2147483648, !dbg !32
  %188 = or i32 %187, %185, !dbg !32
  %189 = bitcast i32 %188 to float, !dbg !32
  br label %__nv_erff.exit37, !dbg !32

__nv_erff.exit37:                                 ; preds = %__internal_fmad.exit.i18, %182
  %r.0.i33 = phi float [ %189, %182 ], [ %.08.i32, %__internal_fmad.exit.i18 ], !dbg !32
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i38 = icmp eq i32 %190, 0, !dbg !32
  %191 = tail call float @llvm.nvvm.fabs.ftz.f(float %87) #4, !dbg !32
  %192 = tail call float @llvm.nvvm.fabs.f(float %87) #4, !dbg !32
  %.0.i39 = select i1 %.not.i38, float %192, float %191, !dbg !32
  %193 = fcmp oge float %.0.i39, 0x3FF00C1FC0000000, !dbg !32
  br i1 %193, label %__nv_fabsf.exit1.i56, label %195, !dbg !32

__nv_fabsf.exit1.i56:                             ; preds = %__nv_erff.exit37
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i57 = icmp eq i32 %194, 0, !dbg !32
  %.01.i58 = select i1 %.not1.i57, float %192, float %191, !dbg !32
  br label %__internal_fmad.exit.i40, !dbg !32

195:                                              ; preds = %__nv_erff.exit37
  %196 = fmul float %87, %87, !dbg !32
  br label %__internal_fmad.exit.i40, !dbg !32

__internal_fmad.exit.i40:                         ; preds = %195, %__nv_fabsf.exit1.i56
  %197 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i56 ], [ 0x3FC06EBA60000000, %195 ], !dbg !32
  %198 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i56 ], [ 0xBFD8127580000000, %195 ], !dbg !32
  %199 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i56 ], [ 0x3FBCE315E0000000, %195 ], !dbg !32
  %200 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i56 ], [ 0xBF9B837CE0000000, %195 ], !dbg !32
  %201 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i56 ], [ 0x3F755ABD40000000, %195 ], !dbg !32
  %202 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i56 ], [ 0xBF4AE9A400000000, %195 ], !dbg !32
  %203 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i56 ], [ 0x3F163D2D40000000, %195 ], !dbg !32
  %204 = phi float [ %.01.i58, %__nv_fabsf.exit1.i56 ], [ %196, %195 ], !dbg !32
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i41 = icmp eq i32 %205, 0, !dbg !32
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %203, float %204, float %202) #4, !dbg !32
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %203, float %204, float %202) #4, !dbg !32
  %.02.i42 = select i1 %.not2.i41, float %207, float %206, !dbg !32
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i43 = icmp eq i32 %208, 0, !dbg !32
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i42, float %204, float %201) #4, !dbg !32
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i42, float %204, float %201) #4, !dbg !32
  %.03.i44 = select i1 %.not3.i43, float %210, float %209, !dbg !32
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i45 = icmp eq i32 %211, 0, !dbg !32
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i44, float %204, float %200) #4, !dbg !32
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i44, float %204, float %200) #4, !dbg !32
  %.04.i46 = select i1 %.not4.i45, float %213, float %212, !dbg !32
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i47 = icmp eq i32 %214, 0, !dbg !32
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i46, float %204, float %199) #4, !dbg !32
  %216 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i46, float %204, float %199) #4, !dbg !32
  %.05.i48 = select i1 %.not5.i47, float %216, float %215, !dbg !32
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i49 = icmp eq i32 %217, 0, !dbg !32
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i48, float %204, float %198) #4, !dbg !32
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i48, float %204, float %198) #4, !dbg !32
  %.06.i50 = select i1 %.not6.i49, float %219, float %218, !dbg !32
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i51 = icmp eq i32 %220, 0, !dbg !32
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i50, float %204, float %197) #4, !dbg !32
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i50, float %204, float %197) #4, !dbg !32
  %.07.i52 = select i1 %.not7.i51, float %222, float %221, !dbg !32
  %223 = fneg float %204, !dbg !32
  %224 = select i1 %193, float %223, float %87, !dbg !32
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i53 = icmp eq i32 %225, 0, !dbg !32
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i52, float %224, float %224) #4, !dbg !32
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i52, float %224, float %224) #4, !dbg !32
  %.08.i54 = select i1 %.not8.i53, float %227, float %226, !dbg !32
  br i1 %193, label %228, label %__nv_erff.exit59, !dbg !32

228:                                              ; preds = %__internal_fmad.exit.i40
  %229 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i54) #4, !dbg !32
  %230 = fsub float 1.000000e+00, %229, !dbg !32
  %231 = bitcast float %230 to i32, !dbg !32
  %232 = bitcast float %87 to i32, !dbg !32
  %233 = and i32 %232, -2147483648, !dbg !32
  %234 = or i32 %233, %231, !dbg !32
  %235 = bitcast i32 %234 to float, !dbg !32
  br label %__nv_erff.exit59, !dbg !32

__nv_erff.exit59:                                 ; preds = %__internal_fmad.exit.i40, %228
  %r.0.i55 = phi float [ %235, %228 ], [ %.08.i54, %__internal_fmad.exit.i40 ], !dbg !32
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i60 = icmp eq i32 %236, 0, !dbg !32
  %237 = tail call float @llvm.nvvm.fabs.ftz.f(float %89) #4, !dbg !32
  %238 = tail call float @llvm.nvvm.fabs.f(float %89) #4, !dbg !32
  %.0.i61 = select i1 %.not.i60, float %238, float %237, !dbg !32
  %239 = fcmp oge float %.0.i61, 0x3FF00C1FC0000000, !dbg !32
  br i1 %239, label %__nv_fabsf.exit1.i78, label %241, !dbg !32

__nv_fabsf.exit1.i78:                             ; preds = %__nv_erff.exit59
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i79 = icmp eq i32 %240, 0, !dbg !32
  %.01.i80 = select i1 %.not1.i79, float %238, float %237, !dbg !32
  br label %__internal_fmad.exit.i62, !dbg !32

241:                                              ; preds = %__nv_erff.exit59
  %242 = fmul float %89, %89, !dbg !32
  br label %__internal_fmad.exit.i62, !dbg !32

__internal_fmad.exit.i62:                         ; preds = %241, %__nv_fabsf.exit1.i78
  %243 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i78 ], [ 0x3FC06EBA60000000, %241 ], !dbg !32
  %244 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i78 ], [ 0xBFD8127580000000, %241 ], !dbg !32
  %245 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i78 ], [ 0x3FBCE315E0000000, %241 ], !dbg !32
  %246 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i78 ], [ 0xBF9B837CE0000000, %241 ], !dbg !32
  %247 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i78 ], [ 0x3F755ABD40000000, %241 ], !dbg !32
  %248 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i78 ], [ 0xBF4AE9A400000000, %241 ], !dbg !32
  %249 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i78 ], [ 0x3F163D2D40000000, %241 ], !dbg !32
  %250 = phi float [ %.01.i80, %__nv_fabsf.exit1.i78 ], [ %242, %241 ], !dbg !32
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i63 = icmp eq i32 %251, 0, !dbg !32
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %249, float %250, float %248) #4, !dbg !32
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %249, float %250, float %248) #4, !dbg !32
  %.02.i64 = select i1 %.not2.i63, float %253, float %252, !dbg !32
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i65 = icmp eq i32 %254, 0, !dbg !32
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i64, float %250, float %247) #4, !dbg !32
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i64, float %250, float %247) #4, !dbg !32
  %.03.i66 = select i1 %.not3.i65, float %256, float %255, !dbg !32
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i67 = icmp eq i32 %257, 0, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i66, float %250, float %246) #4, !dbg !32
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i66, float %250, float %246) #4, !dbg !32
  %.04.i68 = select i1 %.not4.i67, float %259, float %258, !dbg !32
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i69 = icmp eq i32 %260, 0, !dbg !32
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i68, float %250, float %245) #4, !dbg !32
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i68, float %250, float %245) #4, !dbg !32
  %.05.i70 = select i1 %.not5.i69, float %262, float %261, !dbg !32
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i71 = icmp eq i32 %263, 0, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i70, float %250, float %244) #4, !dbg !32
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i70, float %250, float %244) #4, !dbg !32
  %.06.i72 = select i1 %.not6.i71, float %265, float %264, !dbg !32
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i73 = icmp eq i32 %266, 0, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i72, float %250, float %243) #4, !dbg !32
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i72, float %250, float %243) #4, !dbg !32
  %.07.i74 = select i1 %.not7.i73, float %268, float %267, !dbg !32
  %269 = fneg float %250, !dbg !32
  %270 = select i1 %239, float %269, float %89, !dbg !32
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i75 = icmp eq i32 %271, 0, !dbg !32
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i74, float %270, float %270) #4, !dbg !32
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i74, float %270, float %270) #4, !dbg !32
  %.08.i76 = select i1 %.not8.i75, float %273, float %272, !dbg !32
  br i1 %239, label %274, label %__nv_erff.exit81, !dbg !32

274:                                              ; preds = %__internal_fmad.exit.i62
  %275 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i76) #4, !dbg !32
  %276 = fsub float 1.000000e+00, %275, !dbg !32
  %277 = bitcast float %276 to i32, !dbg !32
  %278 = bitcast float %89 to i32, !dbg !32
  %279 = and i32 %278, -2147483648, !dbg !32
  %280 = or i32 %279, %277, !dbg !32
  %281 = bitcast i32 %280 to float, !dbg !32
  br label %__nv_erff.exit81, !dbg !32

__nv_erff.exit81:                                 ; preds = %__internal_fmad.exit.i62, %274
  %r.0.i77 = phi float [ %281, %274 ], [ %.08.i76, %__internal_fmad.exit.i62 ], !dbg !32
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i82 = icmp eq i32 %282, 0, !dbg !32
  %283 = tail call float @llvm.nvvm.fabs.ftz.f(float %91) #4, !dbg !32
  %284 = tail call float @llvm.nvvm.fabs.f(float %91) #4, !dbg !32
  %.0.i83 = select i1 %.not.i82, float %284, float %283, !dbg !32
  %285 = fcmp oge float %.0.i83, 0x3FF00C1FC0000000, !dbg !32
  br i1 %285, label %__nv_fabsf.exit1.i100, label %287, !dbg !32

__nv_fabsf.exit1.i100:                            ; preds = %__nv_erff.exit81
  %286 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i101 = icmp eq i32 %286, 0, !dbg !32
  %.01.i102 = select i1 %.not1.i101, float %284, float %283, !dbg !32
  br label %__internal_fmad.exit.i84, !dbg !32

287:                                              ; preds = %__nv_erff.exit81
  %288 = fmul float %91, %91, !dbg !32
  br label %__internal_fmad.exit.i84, !dbg !32

__internal_fmad.exit.i84:                         ; preds = %287, %__nv_fabsf.exit1.i100
  %289 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i100 ], [ 0x3FC06EBA60000000, %287 ], !dbg !32
  %290 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i100 ], [ 0xBFD8127580000000, %287 ], !dbg !32
  %291 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i100 ], [ 0x3FBCE315E0000000, %287 ], !dbg !32
  %292 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i100 ], [ 0xBF9B837CE0000000, %287 ], !dbg !32
  %293 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i100 ], [ 0x3F755ABD40000000, %287 ], !dbg !32
  %294 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i100 ], [ 0xBF4AE9A400000000, %287 ], !dbg !32
  %295 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i100 ], [ 0x3F163D2D40000000, %287 ], !dbg !32
  %296 = phi float [ %.01.i102, %__nv_fabsf.exit1.i100 ], [ %288, %287 ], !dbg !32
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i85 = icmp eq i32 %297, 0, !dbg !32
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %295, float %296, float %294) #4, !dbg !32
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %295, float %296, float %294) #4, !dbg !32
  %.02.i86 = select i1 %.not2.i85, float %299, float %298, !dbg !32
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i87 = icmp eq i32 %300, 0, !dbg !32
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i86, float %296, float %293) #4, !dbg !32
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i86, float %296, float %293) #4, !dbg !32
  %.03.i88 = select i1 %.not3.i87, float %302, float %301, !dbg !32
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i89 = icmp eq i32 %303, 0, !dbg !32
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i88, float %296, float %292) #4, !dbg !32
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i88, float %296, float %292) #4, !dbg !32
  %.04.i90 = select i1 %.not4.i89, float %305, float %304, !dbg !32
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i91 = icmp eq i32 %306, 0, !dbg !32
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i90, float %296, float %291) #4, !dbg !32
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i90, float %296, float %291) #4, !dbg !32
  %.05.i92 = select i1 %.not5.i91, float %308, float %307, !dbg !32
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i93 = icmp eq i32 %309, 0, !dbg !32
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i92, float %296, float %290) #4, !dbg !32
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i92, float %296, float %290) #4, !dbg !32
  %.06.i94 = select i1 %.not6.i93, float %311, float %310, !dbg !32
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i95 = icmp eq i32 %312, 0, !dbg !32
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i94, float %296, float %289) #4, !dbg !32
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i94, float %296, float %289) #4, !dbg !32
  %.07.i96 = select i1 %.not7.i95, float %314, float %313, !dbg !32
  %315 = fneg float %296, !dbg !32
  %316 = select i1 %285, float %315, float %91, !dbg !32
  %317 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i97 = icmp eq i32 %317, 0, !dbg !32
  %318 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i96, float %316, float %316) #4, !dbg !32
  %319 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i96, float %316, float %316) #4, !dbg !32
  %.08.i98 = select i1 %.not8.i97, float %319, float %318, !dbg !32
  br i1 %285, label %320, label %__nv_erff.exit103, !dbg !32

320:                                              ; preds = %__internal_fmad.exit.i84
  %321 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i98) #4, !dbg !32
  %322 = fsub float 1.000000e+00, %321, !dbg !32
  %323 = bitcast float %322 to i32, !dbg !32
  %324 = bitcast float %91 to i32, !dbg !32
  %325 = and i32 %324, -2147483648, !dbg !32
  %326 = or i32 %325, %323, !dbg !32
  %327 = bitcast i32 %326 to float, !dbg !32
  br label %__nv_erff.exit103, !dbg !32

__nv_erff.exit103:                                ; preds = %__internal_fmad.exit.i84, %320
  %r.0.i99 = phi float [ %327, %320 ], [ %.08.i98, %__internal_fmad.exit.i84 ], !dbg !32
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i104 = icmp eq i32 %328, 0, !dbg !32
  %329 = tail call float @llvm.nvvm.fabs.ftz.f(float %93) #4, !dbg !32
  %330 = tail call float @llvm.nvvm.fabs.f(float %93) #4, !dbg !32
  %.0.i105 = select i1 %.not.i104, float %330, float %329, !dbg !32
  %331 = fcmp oge float %.0.i105, 0x3FF00C1FC0000000, !dbg !32
  br i1 %331, label %__nv_fabsf.exit1.i122, label %333, !dbg !32

__nv_fabsf.exit1.i122:                            ; preds = %__nv_erff.exit103
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i123 = icmp eq i32 %332, 0, !dbg !32
  %.01.i124 = select i1 %.not1.i123, float %330, float %329, !dbg !32
  br label %__internal_fmad.exit.i106, !dbg !32

333:                                              ; preds = %__nv_erff.exit103
  %334 = fmul float %93, %93, !dbg !32
  br label %__internal_fmad.exit.i106, !dbg !32

__internal_fmad.exit.i106:                        ; preds = %333, %__nv_fabsf.exit1.i122
  %335 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i122 ], [ 0x3FC06EBA60000000, %333 ], !dbg !32
  %336 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i122 ], [ 0xBFD8127580000000, %333 ], !dbg !32
  %337 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i122 ], [ 0x3FBCE315E0000000, %333 ], !dbg !32
  %338 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i122 ], [ 0xBF9B837CE0000000, %333 ], !dbg !32
  %339 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i122 ], [ 0x3F755ABD40000000, %333 ], !dbg !32
  %340 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i122 ], [ 0xBF4AE9A400000000, %333 ], !dbg !32
  %341 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i122 ], [ 0x3F163D2D40000000, %333 ], !dbg !32
  %342 = phi float [ %.01.i124, %__nv_fabsf.exit1.i122 ], [ %334, %333 ], !dbg !32
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i107 = icmp eq i32 %343, 0, !dbg !32
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %341, float %342, float %340) #4, !dbg !32
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %341, float %342, float %340) #4, !dbg !32
  %.02.i108 = select i1 %.not2.i107, float %345, float %344, !dbg !32
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i109 = icmp eq i32 %346, 0, !dbg !32
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i108, float %342, float %339) #4, !dbg !32
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i108, float %342, float %339) #4, !dbg !32
  %.03.i110 = select i1 %.not3.i109, float %348, float %347, !dbg !32
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i111 = icmp eq i32 %349, 0, !dbg !32
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i110, float %342, float %338) #4, !dbg !32
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i110, float %342, float %338) #4, !dbg !32
  %.04.i112 = select i1 %.not4.i111, float %351, float %350, !dbg !32
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i113 = icmp eq i32 %352, 0, !dbg !32
  %353 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i112, float %342, float %337) #4, !dbg !32
  %354 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i112, float %342, float %337) #4, !dbg !32
  %.05.i114 = select i1 %.not5.i113, float %354, float %353, !dbg !32
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i115 = icmp eq i32 %355, 0, !dbg !32
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i114, float %342, float %336) #4, !dbg !32
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i114, float %342, float %336) #4, !dbg !32
  %.06.i116 = select i1 %.not6.i115, float %357, float %356, !dbg !32
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i117 = icmp eq i32 %358, 0, !dbg !32
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i116, float %342, float %335) #4, !dbg !32
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i116, float %342, float %335) #4, !dbg !32
  %.07.i118 = select i1 %.not7.i117, float %360, float %359, !dbg !32
  %361 = fneg float %342, !dbg !32
  %362 = select i1 %331, float %361, float %93, !dbg !32
  %363 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i119 = icmp eq i32 %363, 0, !dbg !32
  %364 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i118, float %362, float %362) #4, !dbg !32
  %365 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i118, float %362, float %362) #4, !dbg !32
  %.08.i120 = select i1 %.not8.i119, float %365, float %364, !dbg !32
  br i1 %331, label %366, label %__nv_erff.exit125, !dbg !32

366:                                              ; preds = %__internal_fmad.exit.i106
  %367 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i120) #4, !dbg !32
  %368 = fsub float 1.000000e+00, %367, !dbg !32
  %369 = bitcast float %368 to i32, !dbg !32
  %370 = bitcast float %93 to i32, !dbg !32
  %371 = and i32 %370, -2147483648, !dbg !32
  %372 = or i32 %371, %369, !dbg !32
  %373 = bitcast i32 %372 to float, !dbg !32
  br label %__nv_erff.exit125, !dbg !32

__nv_erff.exit125:                                ; preds = %__internal_fmad.exit.i106, %366
  %r.0.i121 = phi float [ %373, %366 ], [ %.08.i120, %__internal_fmad.exit.i106 ], !dbg !32
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i126 = icmp eq i32 %374, 0, !dbg !32
  %375 = tail call float @llvm.nvvm.fabs.ftz.f(float %95) #4, !dbg !32
  %376 = tail call float @llvm.nvvm.fabs.f(float %95) #4, !dbg !32
  %.0.i127 = select i1 %.not.i126, float %376, float %375, !dbg !32
  %377 = fcmp oge float %.0.i127, 0x3FF00C1FC0000000, !dbg !32
  br i1 %377, label %__nv_fabsf.exit1.i144, label %379, !dbg !32

__nv_fabsf.exit1.i144:                            ; preds = %__nv_erff.exit125
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i145 = icmp eq i32 %378, 0, !dbg !32
  %.01.i146 = select i1 %.not1.i145, float %376, float %375, !dbg !32
  br label %__internal_fmad.exit.i128, !dbg !32

379:                                              ; preds = %__nv_erff.exit125
  %380 = fmul float %95, %95, !dbg !32
  br label %__internal_fmad.exit.i128, !dbg !32

__internal_fmad.exit.i128:                        ; preds = %379, %__nv_fabsf.exit1.i144
  %381 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i144 ], [ 0x3FC06EBA60000000, %379 ], !dbg !32
  %382 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i144 ], [ 0xBFD8127580000000, %379 ], !dbg !32
  %383 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i144 ], [ 0x3FBCE315E0000000, %379 ], !dbg !32
  %384 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i144 ], [ 0xBF9B837CE0000000, %379 ], !dbg !32
  %385 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i144 ], [ 0x3F755ABD40000000, %379 ], !dbg !32
  %386 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i144 ], [ 0xBF4AE9A400000000, %379 ], !dbg !32
  %387 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i144 ], [ 0x3F163D2D40000000, %379 ], !dbg !32
  %388 = phi float [ %.01.i146, %__nv_fabsf.exit1.i144 ], [ %380, %379 ], !dbg !32
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i129 = icmp eq i32 %389, 0, !dbg !32
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %387, float %388, float %386) #4, !dbg !32
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %387, float %388, float %386) #4, !dbg !32
  %.02.i130 = select i1 %.not2.i129, float %391, float %390, !dbg !32
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i131 = icmp eq i32 %392, 0, !dbg !32
  %393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i130, float %388, float %385) #4, !dbg !32
  %394 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i130, float %388, float %385) #4, !dbg !32
  %.03.i132 = select i1 %.not3.i131, float %394, float %393, !dbg !32
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i133 = icmp eq i32 %395, 0, !dbg !32
  %396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i132, float %388, float %384) #4, !dbg !32
  %397 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i132, float %388, float %384) #4, !dbg !32
  %.04.i134 = select i1 %.not4.i133, float %397, float %396, !dbg !32
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i135 = icmp eq i32 %398, 0, !dbg !32
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i134, float %388, float %383) #4, !dbg !32
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i134, float %388, float %383) #4, !dbg !32
  %.05.i136 = select i1 %.not5.i135, float %400, float %399, !dbg !32
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i137 = icmp eq i32 %401, 0, !dbg !32
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i136, float %388, float %382) #4, !dbg !32
  %403 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i136, float %388, float %382) #4, !dbg !32
  %.06.i138 = select i1 %.not6.i137, float %403, float %402, !dbg !32
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i139 = icmp eq i32 %404, 0, !dbg !32
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i138, float %388, float %381) #4, !dbg !32
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i138, float %388, float %381) #4, !dbg !32
  %.07.i140 = select i1 %.not7.i139, float %406, float %405, !dbg !32
  %407 = fneg float %388, !dbg !32
  %408 = select i1 %377, float %407, float %95, !dbg !32
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i141 = icmp eq i32 %409, 0, !dbg !32
  %410 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i140, float %408, float %408) #4, !dbg !32
  %411 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i140, float %408, float %408) #4, !dbg !32
  %.08.i142 = select i1 %.not8.i141, float %411, float %410, !dbg !32
  br i1 %377, label %412, label %__nv_erff.exit147, !dbg !32

412:                                              ; preds = %__internal_fmad.exit.i128
  %413 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i142) #4, !dbg !32
  %414 = fsub float 1.000000e+00, %413, !dbg !32
  %415 = bitcast float %414 to i32, !dbg !32
  %416 = bitcast float %95 to i32, !dbg !32
  %417 = and i32 %416, -2147483648, !dbg !32
  %418 = or i32 %417, %415, !dbg !32
  %419 = bitcast i32 %418 to float, !dbg !32
  br label %__nv_erff.exit147, !dbg !32

__nv_erff.exit147:                                ; preds = %__internal_fmad.exit.i128, %412
  %r.0.i143 = phi float [ %419, %412 ], [ %.08.i142, %__internal_fmad.exit.i128 ], !dbg !32
  %420 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i148 = icmp eq i32 %420, 0, !dbg !32
  %421 = tail call float @llvm.nvvm.fabs.ftz.f(float %97) #4, !dbg !32
  %422 = tail call float @llvm.nvvm.fabs.f(float %97) #4, !dbg !32
  %.0.i149 = select i1 %.not.i148, float %422, float %421, !dbg !32
  %423 = fcmp oge float %.0.i149, 0x3FF00C1FC0000000, !dbg !32
  br i1 %423, label %__nv_fabsf.exit1.i166, label %425, !dbg !32

__nv_fabsf.exit1.i166:                            ; preds = %__nv_erff.exit147
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not1.i167 = icmp eq i32 %424, 0, !dbg !32
  %.01.i168 = select i1 %.not1.i167, float %422, float %421, !dbg !32
  br label %__internal_fmad.exit.i150, !dbg !32

425:                                              ; preds = %__nv_erff.exit147
  %426 = fmul float %97, %97, !dbg !32
  br label %__internal_fmad.exit.i150, !dbg !32

__internal_fmad.exit.i150:                        ; preds = %425, %__nv_fabsf.exit1.i166
  %427 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i166 ], [ 0x3FC06EBA60000000, %425 ], !dbg !32
  %428 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i166 ], [ 0xBFD8127580000000, %425 ], !dbg !32
  %429 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i166 ], [ 0x3FBCE315E0000000, %425 ], !dbg !32
  %430 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i166 ], [ 0xBF9B837CE0000000, %425 ], !dbg !32
  %431 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i166 ], [ 0x3F755ABD40000000, %425 ], !dbg !32
  %432 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i166 ], [ 0xBF4AE9A400000000, %425 ], !dbg !32
  %433 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i166 ], [ 0x3F163D2D40000000, %425 ], !dbg !32
  %434 = phi float [ %.01.i168, %__nv_fabsf.exit1.i166 ], [ %426, %425 ], !dbg !32
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not2.i151 = icmp eq i32 %435, 0, !dbg !32
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %433, float %434, float %432) #4, !dbg !32
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %433, float %434, float %432) #4, !dbg !32
  %.02.i152 = select i1 %.not2.i151, float %437, float %436, !dbg !32
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not3.i153 = icmp eq i32 %438, 0, !dbg !32
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i152, float %434, float %431) #4, !dbg !32
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i152, float %434, float %431) #4, !dbg !32
  %.03.i154 = select i1 %.not3.i153, float %440, float %439, !dbg !32
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not4.i155 = icmp eq i32 %441, 0, !dbg !32
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i154, float %434, float %430) #4, !dbg !32
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i154, float %434, float %430) #4, !dbg !32
  %.04.i156 = select i1 %.not4.i155, float %443, float %442, !dbg !32
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not5.i157 = icmp eq i32 %444, 0, !dbg !32
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i156, float %434, float %429) #4, !dbg !32
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i156, float %434, float %429) #4, !dbg !32
  %.05.i158 = select i1 %.not5.i157, float %446, float %445, !dbg !32
  %447 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not6.i159 = icmp eq i32 %447, 0, !dbg !32
  %448 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i158, float %434, float %428) #4, !dbg !32
  %449 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i158, float %434, float %428) #4, !dbg !32
  %.06.i160 = select i1 %.not6.i159, float %449, float %448, !dbg !32
  %450 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not7.i161 = icmp eq i32 %450, 0, !dbg !32
  %451 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i160, float %434, float %427) #4, !dbg !32
  %452 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i160, float %434, float %427) #4, !dbg !32
  %.07.i162 = select i1 %.not7.i161, float %452, float %451, !dbg !32
  %453 = fneg float %434, !dbg !32
  %454 = select i1 %423, float %453, float %97, !dbg !32
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not8.i163 = icmp eq i32 %455, 0, !dbg !32
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i162, float %454, float %454) #4, !dbg !32
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i162, float %454, float %454) #4, !dbg !32
  %.08.i164 = select i1 %.not8.i163, float %457, float %456, !dbg !32
  br i1 %423, label %458, label %__nv_erff.exit169, !dbg !32

458:                                              ; preds = %__internal_fmad.exit.i150
  %459 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i164) #4, !dbg !32
  %460 = fsub float 1.000000e+00, %459, !dbg !32
  %461 = bitcast float %460 to i32, !dbg !32
  %462 = bitcast float %97 to i32, !dbg !32
  %463 = and i32 %462, -2147483648, !dbg !32
  %464 = or i32 %463, %461, !dbg !32
  %465 = bitcast i32 %464 to float, !dbg !32
  br label %__nv_erff.exit169, !dbg !32

__nv_erff.exit169:                                ; preds = %__internal_fmad.exit.i150, %458
  %r.0.i165 = phi float [ %465, %458 ], [ %.08.i164, %__internal_fmad.exit.i150 ], !dbg !32
  %466 = fmul <2 x float> %81, <float 5.000000e-01, float 5.000000e-01>, !dbg !33
  %467 = fmul <2 x float> %70, <float 5.000000e-01, float 5.000000e-01>, !dbg !33
  %468 = fmul <2 x float> %59, <float 5.000000e-01, float 5.000000e-01>, !dbg !33
  %469 = fmul <2 x float> %48, <float 5.000000e-01, float 5.000000e-01>, !dbg !33
  %470 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !19
  %extelt.offset3 = lshr i32 %470, 16, !dbg !19
  %471 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !21
  %extelt.offset7 = lshr i32 %471, 16, !dbg !21
  %472 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !19
  %extelt.offset2 = lshr i32 %472, 16, !dbg !19
  %473 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !21
  %extelt.offset6 = lshr i32 %473, 16, !dbg !21
  %474 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !19
  %extelt.offset1 = lshr i32 %474, 16, !dbg !19
  %475 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !21
  %extelt.offset5 = lshr i32 %475, 16, !dbg !21
  %476 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !19
  %extelt.offset = lshr i32 %476, 16, !dbg !19
  %477 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !21
  %extelt.offset4 = lshr i32 %477, 16, !dbg !21
  %478 = insertelement <2 x float> poison, float %r.0.i, i64 0, !dbg !34
  %479 = insertelement <2 x float> %478, float %r.0.i33, i64 1, !dbg !34
  %480 = fadd <2 x float> %479, <float 1.000000e+00, float 1.000000e+00>, !dbg !34
  %481 = insertelement <2 x float> poison, float %r.0.i55, i64 0, !dbg !34
  %482 = insertelement <2 x float> %481, float %r.0.i77, i64 1, !dbg !34
  %483 = fadd <2 x float> %482, <float 1.000000e+00, float 1.000000e+00>, !dbg !34
  %484 = insertelement <2 x float> poison, float %r.0.i99, i64 0, !dbg !34
  %485 = insertelement <2 x float> %484, float %r.0.i121, i64 1, !dbg !34
  %486 = fadd <2 x float> %485, <float 1.000000e+00, float 1.000000e+00>, !dbg !34
  %487 = insertelement <2 x float> poison, float %r.0.i143, i64 0, !dbg !34
  %488 = insertelement <2 x float> %487, float %r.0.i165, i64 1, !dbg !34
  %489 = fadd <2 x float> %488, <float 1.000000e+00, float 1.000000e+00>, !dbg !34
  %490 = sext i32 %10 to i64, !dbg !35
  %491 = getelementptr half, ptr addrspace(1) %2, i64 %490, !dbg !35
  %492 = insertelement <2 x i32> poison, i32 %476, i64 0, !dbg !19
  %493 = insertelement <2 x i32> %492, i32 %extelt.offset, i64 1, !dbg !19
  %494 = trunc <2 x i32> %493 to <2 x i16>, !dbg !19
  %495 = bitcast <2 x i16> %494 to <2 x half>, !dbg !19
  %496 = fpext <2 x half> %495 to <2 x float>, !dbg !36
  %497 = insertelement <2 x i32> poison, i32 %477, i64 0, !dbg !21
  %498 = insertelement <2 x i32> %497, i32 %extelt.offset4, i64 1, !dbg !21
  %499 = trunc <2 x i32> %498 to <2 x i16>, !dbg !21
  %500 = bitcast <2 x i16> %499 to <2 x half>, !dbg !21
  %501 = fpext <2 x half> %500 to <2 x float>, !dbg !37
  %502 = fadd <2 x float> %496, %501, !dbg !38
  %503 = fmul <2 x float> %469, %480, !dbg !39
  %504 = fmul <2 x float> %502, %503, !dbg !40
  %505 = fptrunc <2 x float> %504 to <2 x half>, !dbg !41
  %506 = insertelement <2 x i32> poison, i32 %474, i64 0, !dbg !19
  %507 = insertelement <2 x i32> %506, i32 %extelt.offset1, i64 1, !dbg !19
  %508 = trunc <2 x i32> %507 to <2 x i16>, !dbg !19
  %509 = bitcast <2 x i16> %508 to <2 x half>, !dbg !19
  %510 = fpext <2 x half> %509 to <2 x float>, !dbg !36
  %511 = insertelement <2 x i32> poison, i32 %475, i64 0, !dbg !21
  %512 = insertelement <2 x i32> %511, i32 %extelt.offset5, i64 1, !dbg !21
  %513 = trunc <2 x i32> %512 to <2 x i16>, !dbg !21
  %514 = bitcast <2 x i16> %513 to <2 x half>, !dbg !21
  %515 = fpext <2 x half> %514 to <2 x float>, !dbg !37
  %516 = fadd <2 x float> %510, %515, !dbg !38
  %517 = fmul <2 x float> %468, %483, !dbg !39
  %518 = fmul <2 x float> %516, %517, !dbg !40
  %519 = fptrunc <2 x float> %518 to <2 x half>, !dbg !41
  %520 = insertelement <2 x i32> poison, i32 %472, i64 0, !dbg !19
  %521 = insertelement <2 x i32> %520, i32 %extelt.offset2, i64 1, !dbg !19
  %522 = trunc <2 x i32> %521 to <2 x i16>, !dbg !19
  %523 = bitcast <2 x i16> %522 to <2 x half>, !dbg !19
  %524 = fpext <2 x half> %523 to <2 x float>, !dbg !36
  %525 = insertelement <2 x i32> poison, i32 %473, i64 0, !dbg !21
  %526 = insertelement <2 x i32> %525, i32 %extelt.offset6, i64 1, !dbg !21
  %527 = trunc <2 x i32> %526 to <2 x i16>, !dbg !21
  %528 = bitcast <2 x i16> %527 to <2 x half>, !dbg !21
  %529 = fpext <2 x half> %528 to <2 x float>, !dbg !37
  %530 = fadd <2 x float> %524, %529, !dbg !38
  %531 = fmul <2 x float> %467, %486, !dbg !39
  %532 = fmul <2 x float> %530, %531, !dbg !40
  %533 = fptrunc <2 x float> %532 to <2 x half>, !dbg !41
  %534 = insertelement <2 x i32> poison, i32 %470, i64 0, !dbg !19
  %535 = insertelement <2 x i32> %534, i32 %extelt.offset3, i64 1, !dbg !19
  %536 = trunc <2 x i32> %535 to <2 x i16>, !dbg !19
  %537 = bitcast <2 x i16> %536 to <2 x half>, !dbg !19
  %538 = fpext <2 x half> %537 to <2 x float>, !dbg !36
  %539 = insertelement <2 x i32> poison, i32 %471, i64 0, !dbg !21
  %540 = insertelement <2 x i32> %539, i32 %extelt.offset7, i64 1, !dbg !21
  %541 = trunc <2 x i32> %540 to <2 x i16>, !dbg !21
  %542 = bitcast <2 x i16> %541 to <2 x half>, !dbg !21
  %543 = fpext <2 x half> %542 to <2 x float>, !dbg !37
  %544 = fadd <2 x float> %538, %543, !dbg !38
  %545 = fmul <2 x float> %466, %489, !dbg !39
  %546 = fmul <2 x float> %544, %545, !dbg !40
  %547 = fptrunc <2 x float> %546 to <2 x half>, !dbg !41
  %548 = bitcast <2 x half> %505 to i32, !dbg !41
  %549 = bitcast <2 x half> %519 to i32, !dbg !41
  %550 = bitcast <2 x half> %533 to i32, !dbg !41
  %551 = bitcast <2 x half> %547 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %548, i32 %549, i32 %550, i32 %551, ptr addrspace(1) %491, i1 %11) #4, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_erff(float %a) local_unnamed_addr #1 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #4
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #4
  %.0 = select i1 %.not, float %2, float %1
  %3 = fcmp oge float %.0, 0x3FF00C1FC0000000
  br i1 %3, label %__nv_fabsf.exit1, label %5

__nv_fabsf.exit1:                                 ; preds = %__nv_fabsf.exit
  %4 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not1 = icmp eq i32 %4, 0
  %.01 = select i1 %.not1, float %2, float %1
  br label %__internal_fmad.exit

5:                                                ; preds = %__nv_fabsf.exit
  %6 = fmul float %a, %a
  br label %__internal_fmad.exit

__internal_fmad.exit:                             ; preds = %5, %__nv_fabsf.exit1
  %7 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1 ], [ 0x3FC06EBA60000000, %5 ]
  %8 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1 ], [ 0xBFD8127580000000, %5 ]
  %9 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1 ], [ 0x3FBCE315E0000000, %5 ]
  %10 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1 ], [ 0xBF9B837CE0000000, %5 ]
  %11 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1 ], [ 0x3F755ABD40000000, %5 ]
  %12 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1 ], [ 0xBF4AE9A400000000, %5 ]
  %13 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1 ], [ 0x3F163D2D40000000, %5 ]
  %14 = phi float [ %.01, %__nv_fabsf.exit1 ], [ %6, %5 ]
  %15 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not2 = icmp eq i32 %15, 0
  %16 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %13, float %14, float %12) #4
  %17 = tail call float @llvm.nvvm.fma.rn.f(float %13, float %14, float %12) #4
  %.02 = select i1 %.not2, float %17, float %16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not3 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02, float %14, float %11) #4
  %20 = tail call float @llvm.nvvm.fma.rn.f(float %.02, float %14, float %11) #4
  %.03 = select i1 %.not3, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not4 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03, float %14, float %10) #4
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.03, float %14, float %10) #4
  %.04 = select i1 %.not4, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not5 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %14, float %9) #4
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %14, float %9) #4
  %.05 = select i1 %.not5, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not6 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %14, float %8) #4
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %14, float %8) #4
  %.06 = select i1 %.not6, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not7 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %14, float %7) #4
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %14, float %7) #4
  %.07 = select i1 %.not7, float %32, float %31
  %33 = fneg float %14
  %34 = select i1 %3, float %33, float %a
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not8 = icmp eq i32 %35, 0
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07, float %34, float %34) #4
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %.07, float %34, float %34) #4
  %.08 = select i1 %.not8, float %37, float %36
  br i1 %3, label %38, label %46

38:                                               ; preds = %__internal_fmad.exit
  %39 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08) #4
  %40 = fsub float 1.000000e+00, %39
  %41 = bitcast float %40 to i32
  %42 = bitcast float %a to i32
  %43 = and i32 %42, -2147483648
  %44 = or i32 %43, %41
  %45 = bitcast i32 %44 to float
  br label %46

46:                                               ; preds = %38, %__internal_fmad.exit
  %r.0 = phi float [ %45, %38 ], [ %.08, %__internal_fmad.exit ]
  ret float %r.0
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "c7bdo5ofjtuvi6swnyhgmapmqwfqljswwf5cmockqah2wia2fs4o.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/7b")
!4 = !{ptr @triton__0d1d2d3de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3de", linkageName: "triton__0d1d2d3de", scope: !3, file: !3, line: 20, type: !8, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 36, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 21, column: 33, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 20, scope: !7)
!16 = !DILocation(line: 27, column: 41, scope: !7)
!17 = !DILocation(line: 27, column: 36, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 47, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 37, scope: !7)
!23 = !DILocation(line: 29, column: 43, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 54, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 42, scope: !7)
!28 = !DILocation(line: 29, column: 64, scope: !7)
!29 = !DILocation(line: 30, column: 82, scope: !7)
!30 = !DILocation(line: 32, column: 18, scope: !7)
!31 = !DILocation(line: 37, column: 19, scope: !7)
!32 = !DILocation(line: 38, column: 26, scope: !7)
!33 = !DILocation(line: 35, column: 18, scope: !7)
!34 = !DILocation(line: 40, column: 20, scope: !7)
!35 = !DILocation(line: 44, column: 25, scope: !7)
!36 = !DILocation(line: 27, column: 57, scope: !7)
!37 = !DILocation(line: 28, column: 75, scope: !7)
!38 = !DILocation(line: 31, column: 18, scope: !7)
!39 = !DILocation(line: 41, column: 19, scope: !7)
!40 = !DILocation(line: 43, column: 19, scope: !7)
!41 = !DILocation(line: 44, column: 37, scope: !7)
!42 = !DILocation(line: 44, column: 4, scope: !7)
