; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2d3d4de5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !5 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %8 = shl i32 %7, 2, !dbg !8
  %9 = and i32 %8, 508, !dbg !8
  %10 = or i32 %9, 1, !dbg !8
  %11 = or i32 %9, 2, !dbg !8
  %12 = or i32 %9, 3, !dbg !8
  %13 = or i32 %9, 513, !dbg !8
  %14 = or i32 %9, 514, !dbg !8
  %15 = or i32 %9, 515, !dbg !8
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !9
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.z;", "=r"() #1, !dbg !10
  %18 = add i32 %17, 1, !dbg !11
  %19 = mul i32 %18, %16, !dbg !12
  %20 = icmp slt i32 %19, 7040, !dbg !13
  %21 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !14
  %22 = shl i32 %21, 10, !dbg !15
  %23 = or i32 %22, %9, !dbg !16
  %24 = or i32 %22, %10, !dbg !16
  %25 = or i32 %22, %11, !dbg !16
  %26 = or i32 %22, %12, !dbg !16
  %27 = or i32 %23, 512, !dbg !16
  %28 = or i32 %22, %13, !dbg !16
  %29 = or i32 %22, %14, !dbg !16
  %30 = or i32 %22, %15, !dbg !16
  %31 = icmp slt i32 %23, 2700, !dbg !17
  %32 = icmp slt i32 %27, 2700, !dbg !17
  %33 = srem i32 %19, 320, !dbg !18
  %34 = mul i32 %23, 7040, !dbg !19
  %35 = mul i32 %24, 7040, !dbg !19
  %36 = mul i32 %25, 7040, !dbg !19
  %37 = mul i32 %26, 7040, !dbg !19
  %38 = mul i32 %27, 7040, !dbg !19
  %39 = mul i32 %28, 7040, !dbg !19
  %40 = mul i32 %29, 7040, !dbg !19
  %41 = mul i32 %30, 7040, !dbg !19
  %42 = add i32 %34, %19, !dbg !20
  %43 = add i32 %35, %19, !dbg !20
  %44 = add i32 %36, %19, !dbg !20
  %45 = add i32 %37, %19, !dbg !20
  %46 = add i32 %19, %38, !dbg !20
  %47 = add i32 %39, %19, !dbg !20
  %48 = add i32 %40, %19, !dbg !20
  %49 = add i32 %41, %19, !dbg !20
  %50 = sext i32 %42 to i64, !dbg !21
  %51 = getelementptr half, ptr addrspace(1) %0, i64 %50, !dbg !21
  %52 = sext i32 %43 to i64, !dbg !21
  %53 = getelementptr half, ptr addrspace(1) %0, i64 %52, !dbg !21
  %54 = sext i32 %44 to i64, !dbg !21
  %55 = getelementptr half, ptr addrspace(1) %0, i64 %54, !dbg !21
  %56 = sext i32 %45 to i64, !dbg !21
  %57 = getelementptr half, ptr addrspace(1) %0, i64 %56, !dbg !21
  %58 = sext i32 %46 to i64, !dbg !21
  %59 = getelementptr half, ptr addrspace(1) %0, i64 %58, !dbg !21
  %60 = sext i32 %47 to i64, !dbg !21
  %61 = getelementptr half, ptr addrspace(1) %0, i64 %60, !dbg !21
  %62 = sext i32 %48 to i64, !dbg !21
  %63 = getelementptr half, ptr addrspace(1) %0, i64 %62, !dbg !21
  %64 = sext i32 %49 to i64, !dbg !21
  %65 = getelementptr half, ptr addrspace(1) %0, i64 %64, !dbg !21
  %66 = and i1 %20, %31, !dbg !22
  %67 = and i1 %32, %20, !dbg !22
  %68 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %51, i1 %66) #1, !dbg !23
  %69 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %53, i1 %66) #1, !dbg !23
  %70 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %55, i1 %66) #1, !dbg !23
  %71 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %57, i1 %66) #1, !dbg !23
  %72 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %59, i1 %67) #1, !dbg !23
  %73 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %61, i1 %67) #1, !dbg !23
  %74 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %63, i1 %67) #1, !dbg !23
  %75 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %65, i1 %67) #1, !dbg !23
  %76 = sext i32 %33 to i64, !dbg !24
  %77 = getelementptr half, ptr addrspace(1) %1, i64 %76, !dbg !24
  %78 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %77, i1 %20) #1, !dbg !25
  %79 = bitcast i16 %78 to half, !dbg !25
  %80 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %77, i1 %20) #1, !dbg !25
  %81 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %77, i1 %20) #1, !dbg !25
  %82 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %77, i1 %20) #1, !dbg !25
  %83 = fpext half %79 to float, !dbg !26
  %84 = mul i32 %19, 2700, !dbg !27
  %85 = add i32 %23, %84, !dbg !28
  %86 = add i32 %84, %27, !dbg !28
  %87 = sext i32 %85 to i64, !dbg !29
  %88 = getelementptr half, ptr addrspace(1) %2, i64 %87, !dbg !29
  %89 = sext i32 %86 to i64, !dbg !29
  %90 = getelementptr half, ptr addrspace(1) %2, i64 %89, !dbg !29
  %91 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %88, i1 %66) #1, !dbg !30
  %92 = extractvalue { i32, i32 } %91, 0, !dbg !30
  %93 = extractvalue { i32, i32 } %91, 1, !dbg !30
  %extelt.offset = lshr i32 %92, 16, !dbg !30
  %extelt.offset1 = lshr i32 %93, 16, !dbg !30
  %94 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %90, i1 %67) #1, !dbg !30
  %95 = extractvalue { i32, i32 } %94, 0, !dbg !30
  %96 = extractvalue { i32, i32 } %94, 1, !dbg !30
  %extelt.offset2 = lshr i32 %95, 16, !dbg !30
  %extelt.offset3 = lshr i32 %96, 16, !dbg !30
  %97 = getelementptr half, ptr addrspace(1) %3, i64 %87, !dbg !31
  %98 = getelementptr half, ptr addrspace(1) %3, i64 %89, !dbg !31
  %99 = insertelement <2 x i16> poison, i16 %68, i64 0, !dbg !23
  %100 = insertelement <2 x i16> %99, i16 %69, i64 1, !dbg !23
  %101 = bitcast <2 x i16> %100 to <2 x half>, !dbg !23
  %102 = fpext <2 x half> %101 to <2 x float>, !dbg !32
  %103 = insertelement <2 x i32> poison, i32 %92, i64 0, !dbg !30
  %104 = insertelement <2 x i32> %103, i32 %extelt.offset, i64 1, !dbg !30
  %105 = trunc <2 x i32> %104 to <2 x i16>, !dbg !30
  %106 = bitcast <2 x i16> %105 to <2 x half>, !dbg !30
  %107 = fpext <2 x half> %106 to <2 x float>, !dbg !33
  %108 = insertelement <2 x float> poison, float %83, i64 0, !dbg !34
  %109 = shufflevector <2 x float> %108, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !34
  %110 = fadd <2 x float> %109, %102, !dbg !34
  %111 = fadd <2 x float> %110, %107, !dbg !35
  %112 = fptrunc <2 x float> %111 to <2 x half>, !dbg !36
  %113 = insertelement <2 x i16> poison, i16 %70, i64 0, !dbg !23
  %114 = insertelement <2 x i16> %113, i16 %71, i64 1, !dbg !23
  %115 = bitcast <2 x i16> %114 to <2 x half>, !dbg !23
  %116 = fpext <2 x half> %115 to <2 x float>, !dbg !32
  %117 = insertelement <2 x i32> poison, i32 %93, i64 0, !dbg !30
  %118 = insertelement <2 x i32> %117, i32 %extelt.offset1, i64 1, !dbg !30
  %119 = trunc <2 x i32> %118 to <2 x i16>, !dbg !30
  %120 = bitcast <2 x i16> %119 to <2 x half>, !dbg !30
  %121 = fpext <2 x half> %120 to <2 x float>, !dbg !33
  %122 = fadd <2 x float> %109, %116, !dbg !34
  %123 = fadd <2 x float> %122, %121, !dbg !35
  %124 = fptrunc <2 x float> %123 to <2 x half>, !dbg !36
  %125 = insertelement <2 x i16> poison, i16 %72, i64 0, !dbg !23
  %126 = insertelement <2 x i16> %125, i16 %73, i64 1, !dbg !23
  %127 = bitcast <2 x i16> %126 to <2 x half>, !dbg !23
  %128 = fpext <2 x half> %127 to <2 x float>, !dbg !32
  %129 = insertelement <2 x i32> poison, i32 %95, i64 0, !dbg !30
  %130 = insertelement <2 x i32> %129, i32 %extelt.offset2, i64 1, !dbg !30
  %131 = trunc <2 x i32> %130 to <2 x i16>, !dbg !30
  %132 = bitcast <2 x i16> %131 to <2 x half>, !dbg !30
  %133 = fpext <2 x half> %132 to <2 x float>, !dbg !33
  %134 = fadd <2 x float> %109, %128, !dbg !34
  %135 = fadd <2 x float> %134, %133, !dbg !35
  %136 = fptrunc <2 x float> %135 to <2 x half>, !dbg !36
  %137 = insertelement <2 x i16> poison, i16 %74, i64 0, !dbg !23
  %138 = insertelement <2 x i16> %137, i16 %75, i64 1, !dbg !23
  %139 = bitcast <2 x i16> %138 to <2 x half>, !dbg !23
  %140 = fpext <2 x half> %139 to <2 x float>, !dbg !32
  %141 = insertelement <2 x i32> poison, i32 %96, i64 0, !dbg !30
  %142 = insertelement <2 x i32> %141, i32 %extelt.offset3, i64 1, !dbg !30
  %143 = trunc <2 x i32> %142 to <2 x i16>, !dbg !30
  %144 = bitcast <2 x i16> %143 to <2 x half>, !dbg !30
  %145 = fpext <2 x half> %144 to <2 x float>, !dbg !33
  %146 = fadd <2 x float> %109, %140, !dbg !34
  %147 = fadd <2 x float> %146, %145, !dbg !35
  %148 = fptrunc <2 x float> %147 to <2 x half>, !dbg !36
  %149 = bitcast <2 x half> %112 to i32, !dbg !36
  %150 = bitcast <2 x half> %124 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %149, i32 %150, ptr addrspace(1) %97, i1 %66) #1, !dbg !36
  %151 = bitcast <2 x half> %136 to i32, !dbg !36
  %152 = bitcast <2 x half> %148 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %151, i32 %152, ptr addrspace(1) %98, i1 %67) #1, !dbg !36
  ret void, !dbg !37
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cx7ckqfutqse3ilr2z62el5q32t7bwenw24l2vqyqcz2dwwtd4wo.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/x7")
!3 = !{ptr @triton__0d1d2d3d4de5, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3d4de5, !"maxntidx", i32 128}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3d4de5", linkageName: "triton__0d1d2d3d4de5", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 27, column: 44, scope: !5)
!9 = !DILocation(line: 23, column: 28, scope: !5)
!10 = !DILocation(line: 23, column: 48, scope: !5)
!11 = !DILocation(line: 23, column: 53, scope: !5)
!12 = !DILocation(line: 23, column: 34, scope: !5)
!13 = !DILocation(line: 25, column: 21, scope: !5)
!14 = !DILocation(line: 26, column: 28, scope: !5)
!15 = !DILocation(line: 26, column: 33, scope: !5)
!16 = !DILocation(line: 27, column: 23, scope: !5)
!17 = !DILocation(line: 28, column: 21, scope: !5)
!18 = !DILocation(line: 31, column: 18, scope: !5)
!19 = !DILocation(line: 32, column: 41, scope: !5)
!20 = !DILocation(line: 32, column: 36, scope: !5)
!21 = !DILocation(line: 32, column: 30, scope: !5)
!22 = !DILocation(line: 32, column: 55, scope: !5)
!23 = !DILocation(line: 32, column: 47, scope: !5)
!24 = !DILocation(line: 33, column: 30, scope: !5)
!25 = !DILocation(line: 33, column: 35, scope: !5)
!26 = !DILocation(line: 33, column: 75, scope: !5)
!27 = !DILocation(line: 34, column: 41, scope: !5)
!28 = !DILocation(line: 34, column: 36, scope: !5)
!29 = !DILocation(line: 34, column: 30, scope: !5)
!30 = !DILocation(line: 34, column: 47, scope: !5)
!31 = !DILocation(line: 37, column: 25, scope: !5)
!32 = !DILocation(line: 32, column: 95, scope: !5)
!33 = !DILocation(line: 34, column: 95, scope: !5)
!34 = !DILocation(line: 35, column: 18, scope: !5)
!35 = !DILocation(line: 36, column: 18, scope: !5)
!36 = !DILocation(line: 37, column: 48, scope: !5)
!37 = !DILocation(line: 37, column: 4, scope: !5)
