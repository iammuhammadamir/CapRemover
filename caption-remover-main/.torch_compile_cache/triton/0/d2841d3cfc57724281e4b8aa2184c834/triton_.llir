; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton__0d1d2de(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %5 = and i32 %4, 127, !dbg !10
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !11
  %7 = shl i32 %6, 7, !dbg !12
  %8 = or i32 %7, %5, !dbg !13
  %9 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %0, i1 true) #5, !dbg !14
  %10 = sitofp i64 %9 to float, !dbg !15
  %11 = sitofp i32 %8 to float, !dbg !16
  %12 = fmul float %11, 0xC0226BB1C0000000, !dbg !17
  %13 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %12, float 1.600000e+02) #5, !dbg !18
  %14 = fmul float %13, 0x3FF7154760000000, !dbg !19
  %15 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %14) #5, !dbg !19
  %16 = fmul float %15, %10, !dbg !20
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !21
  %17 = fmul float %16, 0x3FE45F3060000000, !dbg !21
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not.i = icmp eq i32 %18, 0, !dbg !21
  %19 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %17) #5, !dbg !21
  %20 = tail call i32 @llvm.nvvm.f2i.rn(float %17) #5, !dbg !21
  %.01.i = select i1 %.not.i, i32 %20, i32 %19, !dbg !21
  %21 = sitofp i32 %.01.i to float, !dbg !21
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not15.i = icmp eq i32 %22, 0, !dbg !21
  %23 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBFF921FB40000000, float %16) #5, !dbg !21
  %24 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBFF921FB40000000, float %16) #5, !dbg !21
  %.02.i = select i1 %.not15.i, float %24, float %23, !dbg !21
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not16.i = icmp eq i32 %25, 0, !dbg !21
  %26 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBE74442D00000000, float %.02.i) #5, !dbg !21
  %27 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBE74442D00000000, float %.02.i) #5, !dbg !21
  %.03.i = select i1 %.not16.i, float %27, float %26, !dbg !21
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not17.i = icmp eq i32 %28, 0, !dbg !21
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %21, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !21
  %30 = tail call float @llvm.nvvm.fma.rn.f(float %21, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !21
  %.04.i = select i1 %.not17.i, float %30, float %29, !dbg !21
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not18.i = icmp eq i32 %31, 0, !dbg !21
  %32 = tail call float @llvm.nvvm.fabs.ftz.f(float %16) #5, !dbg !21
  %33 = tail call float @llvm.nvvm.fabs.f(float %16) #5, !dbg !21
  %.06.i = select i1 %.not18.i, float %33, float %32, !dbg !21
  %34 = fcmp ult float %.06.i, 1.056150e+05, !dbg !21
  br i1 %34, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !21

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not19.i = icmp eq i32 %35, 0, !dbg !21
  %.07.i = select i1 %.not19.i, float %33, float %32, !dbg !21
  %36 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !21
  br i1 %36, label %__nv_fmul_rn.exit.i.i.i, label %40, !dbg !21

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not27.i = icmp eq i32 %37, 0, !dbg !21
  %38 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %16, float 0.000000e+00) #5, !dbg !21
  %39 = tail call float @llvm.nvvm.mul.rn.f(float %16, float 0.000000e+00) #5, !dbg !21
  %.08.i = select i1 %.not27.i, float %39, float %38, !dbg !21
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !21

40:                                               ; preds = %__nv_isinff.exit.i.i.i
  %41 = bitcast float %16 to i32, !dbg !21
  %42 = lshr i32 %41, 23, !dbg !21
  %43 = and i32 %42, 224, !dbg !21
  %44 = add nsw i32 %43, -128, !dbg !21
  %45 = shl i32 %41, 8, !dbg !21
  %46 = or i32 %45, -2147483648, !dbg !21
  %47 = lshr exact i32 %44, 5, !dbg !21
  br label %48, !dbg !21

48:                                               ; preds = %40, %48
  %iq.i.i.i.0.i55 = phi i32 [ 0, %40 ], [ %56, %48 ]
  %hi.i.i.i.0.i54 = phi i32 [ 0, %40 ], [ %54, %48 ]
  %49 = zext nneg i32 %iq.i.i.i.0.i55 to i64, !dbg !21
  %50 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %49, !dbg !21
  %51 = load i32, ptr addrspace(1) %50, align 4, !dbg !21
  %52 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %51, i32 %46, i32 %hi.i.i.i.0.i54) #6, !dbg !21, !srcloc !22
  %53 = extractvalue { i32, i32 } %52, 0, !dbg !21
  %54 = extractvalue { i32, i32 } %52, 1, !dbg !21
  %55 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %49, !dbg !21
  store i32 %53, ptr %55, align 4, !dbg !21
  %56 = add nuw nsw i32 %iq.i.i.i.0.i55, 1, !dbg !21
  %57 = icmp ult i32 %iq.i.i.i.0.i55, 5, !dbg !21
  br i1 %57, label %48, label %58, !dbg !21, !llvm.loop !23

58:                                               ; preds = %48
  %59 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 6, !dbg !21
  store i32 %54, ptr %59, align 4, !dbg !21
  %60 = and i32 %42, 31, !dbg !21
  %61 = sub nsw i32 6, %47, !dbg !21
  %62 = sext i32 %61 to i64, !dbg !21
  %63 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %62, !dbg !21
  %64 = load i32, ptr %63, align 4, !dbg !21
  %65 = sub nsw i32 5, %47, !dbg !21
  %66 = sext i32 %65 to i64, !dbg !21
  %67 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %66, !dbg !21
  %68 = load i32, ptr %67, align 4, !dbg !21
  %.not20.i = icmp eq i32 %60, 0, !dbg !21
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %69, !dbg !21

69:                                               ; preds = %58
  %70 = sub nsw i32 4, %47, !dbg !21
  %71 = sub nuw nsw i32 32, %60, !dbg !21
  %72 = shl i32 %64, %60, !dbg !21
  %73 = lshr i32 %68, %71, !dbg !21
  %74 = add i32 %73, %72, !dbg !21
  %75 = shl i32 %68, %60, !dbg !21
  %76 = sext i32 %70 to i64, !dbg !21
  %77 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %76, !dbg !21
  %78 = load i32, ptr %77, align 4, !dbg !21
  %79 = lshr i32 %78, %71, !dbg !21
  %80 = add i32 %79, %75, !dbg !21
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !21

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %69, %58
  %hi.i.i.i.1.i = phi i32 [ %74, %69 ], [ %64, %58 ], !dbg !21
  %lo.i.i.i.0.i = phi i32 [ %80, %69 ], [ %68, %58 ], !dbg !21
  %81 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !21
  %82 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !21
  %83 = shl i32 %lo.i.i.i.0.i, 2, !dbg !21
  %84 = lshr i32 %82, 31, !dbg !21
  %85 = add nuw nsw i32 %84, %81, !dbg !21
  %86 = sub nsw i32 0, %85, !dbg !21
  %.not2123.i = icmp slt i32 %41, 0, !dbg !21
  %spec.select.i = select i1 %.not2123.i, i32 %86, i32 %85, !dbg !21
  %87 = xor i32 %82, %41, !dbg !21
  %.lobit.i = ashr i32 %82, 31, !dbg !21
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %82, !dbg !21
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %83, !dbg !21
  %88 = zext i32 %hi.i.i.i.2.i to i64, !dbg !21
  %89 = shl nuw i64 %88, 32, !dbg !21
  %90 = zext i32 %lo.i.i.i.1.i to i64, !dbg !21
  %91 = or i64 %89, %90, !dbg !21
  %92 = sitofp i64 %91 to double, !dbg !21
  %93 = fmul double %92, 0x3BF921FB54442D19, !dbg !21
  %94 = fptrunc double %93 to float, !dbg !21
  %95 = fneg float %94, !dbg !21
  %.not2526.i = icmp slt i32 %87, 0, !dbg !21
  %r.i.i.i.0.i = select i1 %.not2526.i, float %95, float %94, !dbg !21
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !21

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !21
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !21
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not28.i = icmp eq i32 %96, 0, !dbg !21
  %97 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !21
  %98 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !21
  %.011.i = select i1 %.not28.i, float %98, float %97, !dbg !21
  %99 = and i32 %i.i.1.i, 1, !dbg !21
  %.not29.i = icmp eq i32 %99, 0, !dbg !21
  %100 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !21
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not30.i = icmp eq i32 %101, 0, !dbg !21
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %100, float 0.000000e+00) #5, !dbg !21
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %100, float 0.000000e+00) #5, !dbg !21
  %.012.i = select i1 %.not30.i, float %103, float %102, !dbg !21
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !21

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not31.i = icmp eq i32 %104, 0, !dbg !21
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !21
  %106 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !21
  %.013.i = select i1 %.not31.i, float %106, float %105, !dbg !21
  br label %__internal_fmad.exit2.i.i.i, !dbg !21

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %107 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !21
  %108 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !21
  %109 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !21
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not32.i = icmp eq i32 %110, 0, !dbg !21
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %109, float %.011.i, float %108) #5, !dbg !21
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %109, float %.011.i, float %108) #5, !dbg !21
  %.010.i = select i1 %.not32.i, float %112, float %111, !dbg !21
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not33.i = icmp eq i32 %113, 0, !dbg !21
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %107) #5, !dbg !21
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %107) #5, !dbg !21
  %.09.i = select i1 %.not33.i, float %115, float %114, !dbg !21
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not34.i = icmp eq i32 %116, 0, !dbg !21
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %100) #5, !dbg !21
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %100) #5, !dbg !21
  %.05.i = select i1 %.not34.i, float %118, float %117, !dbg !21
  %119 = and i32 %i.i.1.i, 2, !dbg !21
  %.not35.i = icmp eq i32 %119, 0, !dbg !21
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !21

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !21
  %.not36.i = icmp eq i32 %120, 0, !dbg !21
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !21
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !21
  %.0.i = select i1 %.not36.i, float %122, float %121, !dbg !21
  br label %__nv_sinf.exit, !dbg !21

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !21
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !21
  %123 = add i32 %8, -160, !dbg !25
  %124 = sitofp i32 %123 to float, !dbg !26
  %125 = fmul float %124, 0xC0226BB1C0000000, !dbg !27
  %126 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %125, float 1.600000e+02) #5, !dbg !28
  %127 = fmul float %126, 0x3FF7154760000000, !dbg !29
  %128 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %127) #5, !dbg !29
  %129 = fmul float %128, %10, !dbg !30
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !31
  %130 = fmul float %129, 0x3FE45F3060000000, !dbg !31
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not.i2 = icmp eq i32 %131, 0, !dbg !31
  %132 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %130) #5, !dbg !31
  %133 = tail call i32 @llvm.nvvm.f2i.rn(float %130) #5, !dbg !31
  %.01.i3 = select i1 %.not.i2, i32 %133, i32 %132, !dbg !31
  %134 = sitofp i32 %.01.i3 to float, !dbg !31
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not15.i4 = icmp eq i32 %135, 0, !dbg !31
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float 0xBFF921FB40000000, float %129) #5, !dbg !31
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %134, float 0xBFF921FB40000000, float %129) #5, !dbg !31
  %.02.i5 = select i1 %.not15.i4, float %137, float %136, !dbg !31
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not16.i6 = icmp eq i32 %138, 0, !dbg !31
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !31
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %134, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !31
  %.03.i7 = select i1 %.not16.i6, float %140, float %139, !dbg !31
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not17.i8 = icmp eq i32 %141, 0, !dbg !31
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !31
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %134, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !31
  %.04.i9 = select i1 %.not17.i8, float %143, float %142, !dbg !31
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not18.i10 = icmp eq i32 %144, 0, !dbg !31
  %145 = tail call float @llvm.nvvm.fabs.ftz.f(float %129) #5, !dbg !31
  %146 = tail call float @llvm.nvvm.fabs.f(float %129) #5, !dbg !31
  %.06.i11 = select i1 %.not18.i10, float %146, float %145, !dbg !31
  %147 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !31
  br i1 %147, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !31

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not19.i13 = icmp eq i32 %148, 0, !dbg !31
  %.07.i14 = select i1 %.not19.i13, float %146, float %145, !dbg !31
  %149 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !31
  br i1 %149, label %__nv_fmul_rn.exit.i.i.i51, label %153, !dbg !31

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not27.i52 = icmp eq i32 %150, 0, !dbg !31
  %151 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %129, float 0.000000e+00) #5, !dbg !31
  %152 = tail call float @llvm.nvvm.mul.rn.f(float %129, float 0.000000e+00) #5, !dbg !31
  %.08.i53 = select i1 %.not27.i52, float %152, float %151, !dbg !31
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !31

153:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %154 = bitcast float %129 to i32, !dbg !31
  %155 = lshr i32 %154, 23, !dbg !31
  %156 = and i32 %155, 224, !dbg !31
  %157 = add nsw i32 %156, -128, !dbg !31
  %158 = shl i32 %154, 8, !dbg !31
  %159 = or i32 %158, -2147483648, !dbg !31
  %160 = lshr exact i32 %157, 5, !dbg !31
  br label %161, !dbg !31

161:                                              ; preds = %153, %161
  %iq.i.i.i.0.i1657 = phi i32 [ 0, %153 ], [ %169, %161 ]
  %hi.i.i.i.0.i1556 = phi i32 [ 0, %153 ], [ %167, %161 ]
  %162 = zext nneg i32 %iq.i.i.i.0.i1657 to i64, !dbg !31
  %163 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %162, !dbg !31
  %164 = load i32, ptr addrspace(1) %163, align 4, !dbg !31
  %165 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %164, i32 %159, i32 %hi.i.i.i.0.i1556) #6, !dbg !31, !srcloc !22
  %166 = extractvalue { i32, i32 } %165, 0, !dbg !31
  %167 = extractvalue { i32, i32 } %165, 1, !dbg !31
  %168 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %162, !dbg !31
  store i32 %166, ptr %168, align 4, !dbg !31
  %169 = add nuw nsw i32 %iq.i.i.i.0.i1657, 1, !dbg !31
  %170 = icmp ult i32 %iq.i.i.i.0.i1657, 5, !dbg !31
  br i1 %170, label %161, label %171, !dbg !31, !llvm.loop !32

171:                                              ; preds = %161
  %172 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 6, !dbg !31
  store i32 %167, ptr %172, align 4, !dbg !31
  %173 = and i32 %155, 31, !dbg !31
  %174 = sub nsw i32 6, %160, !dbg !31
  %175 = sext i32 %174 to i64, !dbg !31
  %176 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %175, !dbg !31
  %177 = load i32, ptr %176, align 4, !dbg !31
  %178 = sub nsw i32 5, %160, !dbg !31
  %179 = sext i32 %178 to i64, !dbg !31
  %180 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %179, !dbg !31
  %181 = load i32, ptr %180, align 4, !dbg !31
  %.not20.i17 = icmp eq i32 %173, 0, !dbg !31
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %182, !dbg !31

182:                                              ; preds = %171
  %183 = sub nsw i32 4, %160, !dbg !31
  %184 = sub nuw nsw i32 32, %173, !dbg !31
  %185 = shl i32 %177, %173, !dbg !31
  %186 = lshr i32 %181, %184, !dbg !31
  %187 = add i32 %186, %185, !dbg !31
  %188 = shl i32 %181, %173, !dbg !31
  %189 = sext i32 %183 to i64, !dbg !31
  %190 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %189, !dbg !31
  %191 = load i32, ptr %190, align 4, !dbg !31
  %192 = lshr i32 %191, %184, !dbg !31
  %193 = add i32 %192, %188, !dbg !31
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !31

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %182, %171
  %hi.i.i.i.1.i19 = phi i32 [ %187, %182 ], [ %177, %171 ], !dbg !31
  %lo.i.i.i.0.i20 = phi i32 [ %193, %182 ], [ %181, %171 ], !dbg !31
  %194 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !31
  %195 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !31
  %196 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !31
  %197 = lshr i32 %195, 31, !dbg !31
  %198 = add nuw nsw i32 %197, %194, !dbg !31
  %199 = sub nsw i32 0, %198, !dbg !31
  %.not2123.i21 = icmp slt i32 %154, 0, !dbg !31
  %spec.select.i22 = select i1 %.not2123.i21, i32 %199, i32 %198, !dbg !31
  %200 = xor i32 %195, %154, !dbg !31
  %.lobit.i23 = ashr i32 %195, 31, !dbg !31
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %195, !dbg !31
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %196, !dbg !31
  %201 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !31
  %202 = shl nuw i64 %201, 32, !dbg !31
  %203 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !31
  %204 = or i64 %202, %203, !dbg !31
  %205 = sitofp i64 %204 to double, !dbg !31
  %206 = fmul double %205, 0x3BF921FB54442D19, !dbg !31
  %207 = fptrunc double %206 to float, !dbg !31
  %208 = fneg float %207, !dbg !31
  %.not2526.i27 = icmp slt i32 %200, 0, !dbg !31
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %208, float %207, !dbg !31
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !31

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !31
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !31
  %209 = add i32 %i.i.1.i30, 1, !dbg !31
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not28.i32 = icmp eq i32 %210, 0, !dbg !31
  %211 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !31
  %212 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !31
  %.011.i33 = select i1 %.not28.i32, float %212, float %211, !dbg !31
  %213 = and i32 %i.i.1.i30, 1, !dbg !31
  %.not29.not.i = icmp eq i32 %213, 0, !dbg !31
  %214 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !31
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not30.i34 = icmp eq i32 %215, 0, !dbg !31
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %214, float 0.000000e+00) #5, !dbg !31
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %214, float 0.000000e+00) #5, !dbg !31
  %.012.i35 = select i1 %.not30.i34, float %217, float %216, !dbg !31
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !31

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not31.i49 = icmp eq i32 %218, 0, !dbg !31
  %219 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !31
  %220 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !31
  %.013.i50 = select i1 %.not31.i49, float %220, float %219, !dbg !31
  br label %__internal_fmad.exit2.i.i.i36, !dbg !31

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %221 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !31
  %222 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !31
  %223 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !31
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not32.i37 = icmp eq i32 %224, 0, !dbg !31
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %223, float %.011.i33, float %222) #5, !dbg !31
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %223, float %.011.i33, float %222) #5, !dbg !31
  %.010.i38 = select i1 %.not32.i37, float %226, float %225, !dbg !31
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not33.i39 = icmp eq i32 %227, 0, !dbg !31
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %221) #5, !dbg !31
  %229 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %221) #5, !dbg !31
  %.09.i40 = select i1 %.not33.i39, float %229, float %228, !dbg !31
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not34.i41 = icmp eq i32 %230, 0, !dbg !31
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %214) #5, !dbg !31
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %214) #5, !dbg !31
  %.05.i42 = select i1 %.not34.i41, float %232, float %231, !dbg !31
  %233 = and i32 %209, 2, !dbg !31
  %.not35.i43 = icmp eq i32 %233, 0, !dbg !31
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !31

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !31
  %.not36.i45 = icmp eq i32 %234, 0, !dbg !31
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #5, !dbg !31
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #5, !dbg !31
  %.0.i46 = select i1 %.not36.i45, float %236, float %235, !dbg !31
  br label %__nv_cosf.exit, !dbg !31

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !31
  %237 = icmp sgt i32 %8, 159, !dbg !33
  %238 = icmp slt i32 %8, 160, !dbg !34
  %239 = icmp slt i32 %8, 320, !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !31
  %240 = select i1 %237, float %z.i.i.0.i47, float 0.000000e+00, !dbg !36
  %241 = select i1 %238, float %z.i.i.0.i, float %240, !dbg !37
  %242 = sext i32 %8 to i64, !dbg !38
  %243 = getelementptr float, ptr addrspace(1) %1, i64 %242, !dbg !38
  %244 = bitcast float %241 to i32, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %244, ptr addrspace(1) %243, i1 %239) #5, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_sinf(float %a) local_unnamed_addr #1 {
__nv_float2int_rn.exit.i.i:
  %result.i.i.i = alloca [7 x i32], align 4
  %0 = fmul float %a, 0x3FE45F3060000000
  %1 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not = icmp eq i32 %1, 0
  %2 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %0) #5
  %3 = tail call i32 @llvm.nvvm.f2i.rn(float %0) #5
  %.01 = select i1 %.not, i32 %3, i32 %2
  %4 = sitofp i32 %.01 to float
  %5 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not15 = icmp eq i32 %5, 0
  %6 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4, float 0xBFF921FB40000000, float %a) #5
  %7 = tail call float @llvm.nvvm.fma.rn.f(float %4, float 0xBFF921FB40000000, float %a) #5
  %.02 = select i1 %.not15, float %7, float %6
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not16 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4, float 0xBE74442D00000000, float %.02) #5
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %4, float 0xBE74442D00000000, float %.02) #5
  %.03 = select i1 %.not16, float %10, float %9
  %11 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not17 = icmp eq i32 %11, 0
  %12 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4, float 0xBCF84698A0000000, float %.03) #5
  %13 = tail call float @llvm.nvvm.fma.rn.f(float %4, float 0xBCF84698A0000000, float %.03) #5
  %.04 = select i1 %.not17, float %13, float %12
  %14 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not18 = icmp eq i32 %14, 0
  %15 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #5
  %16 = tail call float @llvm.nvvm.fabs.f(float %a) #5
  %.06 = select i1 %.not18, float %16, float %15
  %17 = fcmp ult float %.06, 1.056150e+05
  br i1 %17, label %__internal_trig_reduction_kernel.exit.i, label %__nv_isinff.exit.i.i

__nv_isinff.exit.i.i:                             ; preds = %__nv_float2int_rn.exit.i.i
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not19 = icmp eq i32 %18, 0
  %.07 = select i1 %.not19, float %16, float %15
  %19 = fcmp oeq float %.07, 0x7FF0000000000000
  br i1 %19, label %__nv_fmul_rn.exit.i.i, label %23

__nv_fmul_rn.exit.i.i:                            ; preds = %__nv_isinff.exit.i.i
  %20 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not27 = icmp eq i32 %20, 0
  %21 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %a, float 0.000000e+00) #5
  %22 = tail call float @llvm.nvvm.mul.rn.f(float %a, float 0.000000e+00) #5
  %.08 = select i1 %.not27, float %22, float %21
  br label %__internal_trig_reduction_kernel.exit.i

23:                                               ; preds = %__nv_isinff.exit.i.i
  %24 = bitcast float %a to i32
  %25 = lshr i32 %24, 23
  %26 = and i32 %25, 224
  %27 = add nsw i32 %26, -128
  %28 = shl i32 %24, 8
  %29 = or i32 %28, -2147483648
  %30 = lshr exact i32 %27, 5
  br label %31

31:                                               ; preds = %23, %31
  %iq.i.i.i.038 = phi i32 [ 0, %23 ], [ %39, %31 ]
  %hi.i.i.i.037 = phi i32 [ 0, %23 ], [ %37, %31 ]
  %32 = zext nneg i32 %iq.i.i.i.038 to i64
  %33 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %32
  %34 = load i32, ptr addrspace(1) %33, align 4
  %35 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %34, i32 %29, i32 %hi.i.i.i.037) #6, !srcloc !22
  %36 = extractvalue { i32, i32 } %35, 0
  %37 = extractvalue { i32, i32 } %35, 1
  %38 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %32
  store i32 %36, ptr %38, align 4
  %39 = add nuw nsw i32 %iq.i.i.i.038, 1
  %40 = icmp ult i32 %iq.i.i.i.038, 5
  br i1 %40, label %31, label %41, !llvm.loop !41

41:                                               ; preds = %31
  %42 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 6
  store i32 %37, ptr %42, align 4
  %43 = and i32 %25, 31
  %44 = sub nsw i32 6, %30
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %45
  %47 = load i32, ptr %46, align 4
  %48 = sub nsw i32 5, %30
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %49
  %51 = load i32, ptr %50, align 4
  %.not20 = icmp eq i32 %43, 0
  br i1 %.not20, label %__internal_trig_reduction_slowpath.exit.i.i, label %52

52:                                               ; preds = %41
  %53 = sub nsw i32 4, %30
  %54 = sub nuw nsw i32 32, %43
  %55 = shl i32 %47, %43
  %56 = lshr i32 %51, %54
  %57 = add i32 %56, %55
  %58 = shl i32 %51, %43
  %59 = sext i32 %53 to i64
  %60 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4
  %62 = lshr i32 %61, %54
  %63 = add i32 %62, %58
  br label %__internal_trig_reduction_slowpath.exit.i.i

__internal_trig_reduction_slowpath.exit.i.i:      ; preds = %52, %41
  %hi.i.i.i.1 = phi i32 [ %57, %52 ], [ %47, %41 ]
  %lo.i.i.i.0 = phi i32 [ %63, %52 ], [ %51, %41 ]
  %64 = lshr i32 %hi.i.i.i.1, 30
  %65 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1, i32 %lo.i.i.i.0, i32 2)
  %66 = shl i32 %lo.i.i.i.0, 2
  %67 = lshr i32 %65, 31
  %68 = add nuw nsw i32 %67, %64
  %69 = sub nsw i32 0, %68
  %.not2123 = icmp slt i32 %24, 0
  %spec.select = select i1 %.not2123, i32 %69, i32 %68
  %70 = xor i32 %65, %24
  %.lobit = ashr i32 %65, 31
  %hi.i.i.i.2 = xor i32 %.lobit, %65
  %lo.i.i.i.1 = xor i32 %.lobit, %66
  %71 = zext i32 %hi.i.i.i.2 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %lo.i.i.i.1 to i64
  %74 = or i64 %72, %73
  %75 = sitofp i64 %74 to double
  %76 = fmul double %75, 0x3BF921FB54442D19
  %77 = fptrunc double %76 to float
  %78 = fneg float %77
  %.not2526 = icmp slt i32 %70, 0
  %r.i.i.i.0 = select i1 %.not2526, float %78, float %77
  br label %__internal_trig_reduction_kernel.exit.i

__internal_trig_reduction_kernel.exit.i:          ; preds = %__nv_fmul_rn.exit.i.i, %__internal_trig_reduction_slowpath.exit.i.i, %__nv_float2int_rn.exit.i.i
  %i.i.1 = phi i32 [ %.01, %__nv_float2int_rn.exit.i.i ], [ 0, %__nv_fmul_rn.exit.i.i ], [ %spec.select, %__internal_trig_reduction_slowpath.exit.i.i ]
  %t.i.i.1 = phi float [ %.04, %__nv_float2int_rn.exit.i.i ], [ %.08, %__nv_fmul_rn.exit.i.i ], [ %r.i.i.i.0, %__internal_trig_reduction_slowpath.exit.i.i ]
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not28 = icmp eq i32 %79, 0
  %80 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1, float %t.i.i.1) #5
  %81 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1, float %t.i.i.1) #5
  %.011 = select i1 %.not28, float %81, float %80
  %82 = and i32 %i.i.1, 1
  %.not29 = icmp eq i32 %82, 0
  %83 = select i1 %.not29, float %t.i.i.1, float 1.000000e+00
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not30 = icmp eq i32 %84, 0
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011, float %83, float 0.000000e+00) #5
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.011, float %83, float 0.000000e+00) #5
  %.012 = select i1 %.not30, float %86, float %85
  br i1 %.not29, label %__internal_fmad.exit2.i.i, label %__internal_fmad.exit1.i.i

__internal_fmad.exit1.i.i:                        ; preds = %__internal_trig_reduction_kernel.exit.i
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not31 = icmp eq i32 %87, 0
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011, float 0xBF56C0FDA0000000) #5
  %89 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011, float 0xBF56C0FDA0000000) #5
  %.013 = select i1 %.not31, float %89, float %88
  br label %__internal_fmad.exit2.i.i

__internal_fmad.exit2.i.i:                        ; preds = %__internal_trig_reduction_kernel.exit.i, %__internal_fmad.exit1.i.i
  %90 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i ]
  %91 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i ]
  %92 = phi float [ %.013, %__internal_fmad.exit1.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i ]
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not32 = icmp eq i32 %93, 0
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %92, float %.011, float %91) #5
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %92, float %.011, float %91) #5
  %.010 = select i1 %.not32, float %95, float %94
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not33 = icmp eq i32 %96, 0
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010, float %.011, float %90) #5
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.010, float %.011, float %90) #5
  %.09 = select i1 %.not33, float %98, float %97
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not34 = icmp eq i32 %99, 0
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09, float %.012, float %83) #5
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.09, float %.012, float %83) #5
  %.05 = select i1 %.not34, float %101, float %100
  %102 = and i32 %i.i.1, 2
  %.not35 = icmp eq i32 %102, 0
  br i1 %.not35, label %__internal_accurate_sinf.exit, label %__internal_fmad.exit5.i.i

__internal_fmad.exit5.i.i:                        ; preds = %__internal_fmad.exit2.i.i
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not36 = icmp eq i32 %103, 0
  %104 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float -1.000000e+00, float 0.000000e+00) #5
  %105 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float -1.000000e+00, float 0.000000e+00) #5
  %.0 = select i1 %.not36, float %105, float %104
  br label %__internal_accurate_sinf.exit

__internal_accurate_sinf.exit:                    ; preds = %__internal_fmad.exit2.i.i, %__internal_fmad.exit5.i.i
  %z.i.i.0 = phi float [ %.0, %__internal_fmad.exit5.i.i ], [ %.05, %__internal_fmad.exit2.i.i ]
  ret float %z.i.i.0
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: alwaysinline nounwind
define float @__nv_cosf(float %a) local_unnamed_addr #1 {
__nv_float2int_rn.exit.i.i:
  %result.i.i.i = alloca [7 x i32], align 4
  %0 = fmul float %a, 0x3FE45F3060000000
  %1 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not = icmp eq i32 %1, 0
  %2 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %0) #5
  %3 = tail call i32 @llvm.nvvm.f2i.rn(float %0) #5
  %.01 = select i1 %.not, i32 %3, i32 %2
  %4 = sitofp i32 %.01 to float
  %5 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not15 = icmp eq i32 %5, 0
  %6 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4, float 0xBFF921FB40000000, float %a) #5
  %7 = tail call float @llvm.nvvm.fma.rn.f(float %4, float 0xBFF921FB40000000, float %a) #5
  %.02 = select i1 %.not15, float %7, float %6
  %8 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not16 = icmp eq i32 %8, 0
  %9 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4, float 0xBE74442D00000000, float %.02) #5
  %10 = tail call float @llvm.nvvm.fma.rn.f(float %4, float 0xBE74442D00000000, float %.02) #5
  %.03 = select i1 %.not16, float %10, float %9
  %11 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not17 = icmp eq i32 %11, 0
  %12 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %4, float 0xBCF84698A0000000, float %.03) #5
  %13 = tail call float @llvm.nvvm.fma.rn.f(float %4, float 0xBCF84698A0000000, float %.03) #5
  %.04 = select i1 %.not17, float %13, float %12
  %14 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not18 = icmp eq i32 %14, 0
  %15 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #5
  %16 = tail call float @llvm.nvvm.fabs.f(float %a) #5
  %.06 = select i1 %.not18, float %16, float %15
  %17 = fcmp ult float %.06, 1.056150e+05
  br i1 %17, label %__internal_trig_reduction_kernel.exit.i, label %__nv_isinff.exit.i.i

__nv_isinff.exit.i.i:                             ; preds = %__nv_float2int_rn.exit.i.i
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not19 = icmp eq i32 %18, 0
  %.07 = select i1 %.not19, float %16, float %15
  %19 = fcmp oeq float %.07, 0x7FF0000000000000
  br i1 %19, label %__nv_fmul_rn.exit.i.i, label %23

__nv_fmul_rn.exit.i.i:                            ; preds = %__nv_isinff.exit.i.i
  %20 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not27 = icmp eq i32 %20, 0
  %21 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %a, float 0.000000e+00) #5
  %22 = tail call float @llvm.nvvm.mul.rn.f(float %a, float 0.000000e+00) #5
  %.08 = select i1 %.not27, float %22, float %21
  br label %__internal_trig_reduction_kernel.exit.i

23:                                               ; preds = %__nv_isinff.exit.i.i
  %24 = bitcast float %a to i32
  %25 = lshr i32 %24, 23
  %26 = and i32 %25, 224
  %27 = add nsw i32 %26, -128
  %28 = shl i32 %24, 8
  %29 = or i32 %28, -2147483648
  %30 = lshr exact i32 %27, 5
  br label %31

31:                                               ; preds = %23, %31
  %iq.i.i.i.038 = phi i32 [ 0, %23 ], [ %39, %31 ]
  %hi.i.i.i.037 = phi i32 [ 0, %23 ], [ %37, %31 ]
  %32 = zext nneg i32 %iq.i.i.i.038 to i64
  %33 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %32
  %34 = load i32, ptr addrspace(1) %33, align 4
  %35 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %34, i32 %29, i32 %hi.i.i.i.037) #6, !srcloc !22
  %36 = extractvalue { i32, i32 } %35, 0
  %37 = extractvalue { i32, i32 } %35, 1
  %38 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %32
  store i32 %36, ptr %38, align 4
  %39 = add nuw nsw i32 %iq.i.i.i.038, 1
  %40 = icmp ult i32 %iq.i.i.i.038, 5
  br i1 %40, label %31, label %41, !llvm.loop !41

41:                                               ; preds = %31
  %42 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 6
  store i32 %37, ptr %42, align 4
  %43 = and i32 %25, 31
  %44 = sub nsw i32 6, %30
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %45
  %47 = load i32, ptr %46, align 4
  %48 = sub nsw i32 5, %30
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %49
  %51 = load i32, ptr %50, align 4
  %.not20 = icmp eq i32 %43, 0
  br i1 %.not20, label %__internal_trig_reduction_slowpath.exit.i.i, label %52

52:                                               ; preds = %41
  %53 = sub nsw i32 4, %30
  %54 = sub nuw nsw i32 32, %43
  %55 = shl i32 %47, %43
  %56 = lshr i32 %51, %54
  %57 = add i32 %56, %55
  %58 = shl i32 %51, %43
  %59 = sext i32 %53 to i64
  %60 = getelementptr inbounds [7 x i32], ptr %result.i.i.i, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4
  %62 = lshr i32 %61, %54
  %63 = add i32 %62, %58
  br label %__internal_trig_reduction_slowpath.exit.i.i

__internal_trig_reduction_slowpath.exit.i.i:      ; preds = %52, %41
  %hi.i.i.i.1 = phi i32 [ %57, %52 ], [ %47, %41 ]
  %lo.i.i.i.0 = phi i32 [ %63, %52 ], [ %51, %41 ]
  %64 = lshr i32 %hi.i.i.i.1, 30
  %65 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1, i32 %lo.i.i.i.0, i32 2)
  %66 = shl i32 %lo.i.i.i.0, 2
  %67 = lshr i32 %65, 31
  %68 = add nuw nsw i32 %67, %64
  %69 = sub nsw i32 0, %68
  %.not2123 = icmp slt i32 %24, 0
  %spec.select = select i1 %.not2123, i32 %69, i32 %68
  %70 = xor i32 %65, %24
  %.lobit = ashr i32 %65, 31
  %hi.i.i.i.2 = xor i32 %.lobit, %65
  %lo.i.i.i.1 = xor i32 %.lobit, %66
  %71 = zext i32 %hi.i.i.i.2 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %lo.i.i.i.1 to i64
  %74 = or i64 %72, %73
  %75 = sitofp i64 %74 to double
  %76 = fmul double %75, 0x3BF921FB54442D19
  %77 = fptrunc double %76 to float
  %78 = fneg float %77
  %.not2526 = icmp slt i32 %70, 0
  %r.i.i.i.0 = select i1 %.not2526, float %78, float %77
  br label %__internal_trig_reduction_kernel.exit.i

__internal_trig_reduction_kernel.exit.i:          ; preds = %__nv_fmul_rn.exit.i.i, %__internal_trig_reduction_slowpath.exit.i.i, %__nv_float2int_rn.exit.i.i
  %i.i.1 = phi i32 [ %.01, %__nv_float2int_rn.exit.i.i ], [ 0, %__nv_fmul_rn.exit.i.i ], [ %spec.select, %__internal_trig_reduction_slowpath.exit.i.i ]
  %t.i.i.1 = phi float [ %.04, %__nv_float2int_rn.exit.i.i ], [ %.08, %__nv_fmul_rn.exit.i.i ], [ %r.i.i.i.0, %__internal_trig_reduction_slowpath.exit.i.i ]
  %79 = add i32 %i.i.1, 1
  %80 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not28 = icmp eq i32 %80, 0
  %81 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1, float %t.i.i.1) #5
  %82 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1, float %t.i.i.1) #5
  %.011 = select i1 %.not28, float %82, float %81
  %83 = and i32 %i.i.1, 1
  %.not29.not = icmp eq i32 %83, 0
  %84 = select i1 %.not29.not, float 1.000000e+00, float %t.i.i.1
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not30 = icmp eq i32 %85, 0
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011, float %84, float 0.000000e+00) #5
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.011, float %84, float 0.000000e+00) #5
  %.012 = select i1 %.not30, float %87, float %86
  br i1 %.not29.not, label %__internal_fmad.exit1.i.i, label %__internal_fmad.exit2.i.i

__internal_fmad.exit1.i.i:                        ; preds = %__internal_trig_reduction_kernel.exit.i
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not31 = icmp eq i32 %88, 0
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011, float 0xBF56C0FDA0000000) #5
  %90 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011, float 0xBF56C0FDA0000000) #5
  %.013 = select i1 %.not31, float %90, float %89
  br label %__internal_fmad.exit2.i.i

__internal_fmad.exit2.i.i:                        ; preds = %__internal_trig_reduction_kernel.exit.i, %__internal_fmad.exit1.i.i
  %91 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i ]
  %92 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i ]
  %93 = phi float [ %.013, %__internal_fmad.exit1.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i ]
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not32 = icmp eq i32 %94, 0
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float %.011, float %92) #5
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %93, float %.011, float %92) #5
  %.010 = select i1 %.not32, float %96, float %95
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not33 = icmp eq i32 %97, 0
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010, float %.011, float %91) #5
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.010, float %.011, float %91) #5
  %.09 = select i1 %.not33, float %99, float %98
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not34 = icmp eq i32 %100, 0
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09, float %.012, float %84) #5
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.09, float %.012, float %84) #5
  %.05 = select i1 %.not34, float %102, float %101
  %103 = and i32 %79, 2
  %.not35 = icmp eq i32 %103, 0
  br i1 %.not35, label %__internal_accurate_cosf.exit, label %__internal_fmad.exit5.i.i

__internal_fmad.exit5.i.i:                        ; preds = %__internal_fmad.exit2.i.i
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5
  %.not36 = icmp eq i32 %104, 0
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float -1.000000e+00, float 0.000000e+00) #5
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float -1.000000e+00, float 0.000000e+00) #5
  %.0 = select i1 %.not36, float %106, float %105
  br label %__internal_accurate_cosf.exit

__internal_accurate_cosf.exit:                    ; preds = %__internal_fmad.exit2.i.i, %__internal_fmad.exit5.i.i
  %z.i.i.0 = phi float [ %.0, %__internal_fmad.exit5.i.i ], [ %.05, %__internal_fmad.exit2.i.i ]
  ret float %z.i.i.0
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cn5box3d5vowkaia2xlofvnozec7vjlxq2zoj2gko6rn2dda4v5v.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/n5")
!4 = !{ptr @triton__0d1d2de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2de", linkageName: "triton__0d1d2de", scope: !3, file: !3, line: 20, type: !8, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 36, scope: !7)
!11 = !DILocation(line: 22, column: 28, scope: !7)
!12 = !DILocation(line: 22, column: 33, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 19, scope: !7)
!16 = !DILocation(line: 34, column: 19, scope: !7)
!17 = !DILocation(line: 40, column: 20, scope: !7)
!18 = !DILocation(line: 42, column: 20, scope: !7)
!19 = !DILocation(line: 43, column: 24, scope: !7)
!20 = !DILocation(line: 44, column: 19, scope: !7)
!21 = !DILocation(line: 46, column: 24, scope: !7)
!22 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.count", i32 1}
!25 = !DILocation(line: 52, column: 21, scope: !7)
!26 = !DILocation(line: 53, column: 21, scope: !7)
!27 = !DILocation(line: 56, column: 20, scope: !7)
!28 = !DILocation(line: 57, column: 20, scope: !7)
!29 = !DILocation(line: 58, column: 24, scope: !7)
!30 = !DILocation(line: 59, column: 19, scope: !7)
!31 = !DILocation(line: 61, column: 24, scope: !7)
!32 = distinct !{!32, !24}
!33 = !DILocation(line: 49, column: 20, scope: !7)
!34 = !DILocation(line: 32, column: 18, scope: !7)
!35 = !DILocation(line: 24, column: 21, scope: !7)
!36 = !DILocation(line: 63, column: 35, scope: !7)
!37 = !DILocation(line: 0, scope: !7)
!38 = !DILocation(line: 65, column: 25, scope: !7)
!39 = !DILocation(line: 65, column: 37, scope: !7)
!40 = !DILocation(line: 65, column: 4, scope: !7)
!41 = distinct !{!41, !24}
