; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2d3d4d5d67de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !5 {
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %10 = shl i32 %9, 1, !dbg !8
  %11 = and i32 %10, 510, !dbg !8
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %13 = shl i32 %12, 9, !dbg !10
  %14 = or i32 %13, %11, !dbg !11
  %15 = or i32 %14, 1, !dbg !11
  %16 = icmp slt i32 %14, %7, !dbg !12
  %17 = sdiv i32 %14, %6, !dbg !13
  %18 = sdiv i32 %15, %6, !dbg !13
  %19 = srem i32 %17, 320, !dbg !14
  %20 = srem i32 %18, 320, !dbg !14
  %21 = sext i32 %14 to i64, !dbg !15
  %22 = getelementptr half, ptr addrspace(1) %0, i64 %21, !dbg !15
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %16) #1, !dbg !16
  %extelt.offset = lshr i32 %23, 16, !dbg !16
  %24 = sext i32 %19 to i64, !dbg !17
  %25 = getelementptr half, ptr addrspace(1) %1, i64 %24, !dbg !17
  %26 = sext i32 %20 to i64, !dbg !17
  %27 = getelementptr half, ptr addrspace(1) %1, i64 %26, !dbg !17
  %28 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %25, i1 %16) #1, !dbg !18
  %29 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %27, i1 %16) #1, !dbg !18
  %30 = getelementptr half, ptr addrspace(1) %2, i64 %21, !dbg !19
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %16) #1, !dbg !20
  %extelt.offset1 = lshr i32 %31, 16, !dbg !20
  %32 = getelementptr half, ptr addrspace(1) %3, i64 %21, !dbg !21
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #1, !dbg !22
  %extelt.offset2 = lshr i32 %33, 16, !dbg !22
  %34 = getelementptr half, ptr addrspace(1) %4, i64 %24, !dbg !23
  %35 = getelementptr half, ptr addrspace(1) %4, i64 %26, !dbg !23
  %36 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %34, i1 %16) #1, !dbg !24
  %37 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %35, i1 %16) #1, !dbg !24
  %38 = getelementptr half, ptr addrspace(1) %5, i64 %21, !dbg !25
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %16) #1, !dbg !26
  %extelt.offset3 = lshr i32 %39, 16, !dbg !26
  %40 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !16
  %41 = insertelement <2 x i32> %40, i32 %extelt.offset, i64 1, !dbg !16
  %42 = trunc <2 x i32> %41 to <2 x i16>, !dbg !16
  %43 = bitcast <2 x i16> %42 to <2 x half>, !dbg !16
  %44 = fpext <2 x half> %43 to <2 x float>, !dbg !27
  %45 = insertelement <2 x i16> poison, i16 %28, i64 0, !dbg !18
  %46 = insertelement <2 x i16> %45, i16 %29, i64 1, !dbg !18
  %47 = bitcast <2 x i16> %46 to <2 x half>, !dbg !18
  %48 = fpext <2 x half> %47 to <2 x float>, !dbg !28
  %49 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !20
  %50 = insertelement <2 x i32> %49, i32 %extelt.offset1, i64 1, !dbg !20
  %51 = trunc <2 x i32> %50 to <2 x i16>, !dbg !20
  %52 = bitcast <2 x i16> %51 to <2 x half>, !dbg !20
  %53 = fpext <2 x half> %52 to <2 x float>, !dbg !29
  %54 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !22
  %55 = insertelement <2 x i32> %54, i32 %extelt.offset2, i64 1, !dbg !22
  %56 = trunc <2 x i32> %55 to <2 x i16>, !dbg !22
  %57 = bitcast <2 x i16> %56 to <2 x half>, !dbg !22
  %58 = fpext <2 x half> %57 to <2 x float>, !dbg !30
  %59 = insertelement <2 x i16> poison, i16 %36, i64 0, !dbg !24
  %60 = insertelement <2 x i16> %59, i16 %37, i64 1, !dbg !24
  %61 = bitcast <2 x i16> %60 to <2 x half>, !dbg !24
  %62 = fpext <2 x half> %61 to <2 x float>, !dbg !31
  %63 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !26
  %64 = insertelement <2 x i32> %63, i32 %extelt.offset3, i64 1, !dbg !26
  %65 = trunc <2 x i32> %64 to <2 x i16>, !dbg !26
  %66 = bitcast <2 x i16> %65 to <2 x half>, !dbg !26
  %67 = fpext <2 x half> %66 to <2 x float>, !dbg !32
  %68 = fadd <2 x float> %44, %48, !dbg !33
  %69 = fmul <2 x float> %53, <float 1.250000e-01, float 1.250000e-01>, !dbg !34
  %70 = fadd <2 x float> %68, %69, !dbg !35
  %71 = fadd <2 x float> %58, %62, !dbg !36
  %72 = fmul <2 x float> %67, <float 1.250000e-01, float 1.250000e-01>, !dbg !37
  %73 = fadd <2 x float> %71, %72, !dbg !38
  %74 = fadd <2 x float> %70, %73, !dbg !39
  %75 = fptrunc <2 x float> %74 to <2 x half>, !dbg !40
  %76 = bitcast <2 x half> %75 to i32, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %76, ptr addrspace(1) %22, i1 %16) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cfdwhvp54buwdscsgvd6dtyel2ojzi734ahnuedppzg33nmgkowi.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/fd")
!3 = !{ptr @triton__0d1d2d3d4d5d67de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3d4d5d67de, !"maxntidx", i32 256}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3d4d5d67de", linkageName: "triton__0d1d2d3d4d5d67de", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 22, column: 36, scope: !5)
!9 = !DILocation(line: 21, column: 28, scope: !5)
!10 = !DILocation(line: 21, column: 33, scope: !5)
!11 = !DILocation(line: 22, column: 23, scope: !5)
!12 = !DILocation(line: 23, column: 21, scope: !5)
!13 = !DILocation(line: 25, column: 20, scope: !5)
!14 = !DILocation(line: 25, column: 27, scope: !5)
!15 = !DILocation(line: 26, column: 34, scope: !5)
!16 = !DILocation(line: 26, column: 39, scope: !5)
!17 = !DILocation(line: 27, column: 30, scope: !5)
!18 = !DILocation(line: 27, column: 35, scope: !5)
!19 = !DILocation(line: 28, column: 30, scope: !5)
!20 = !DILocation(line: 28, column: 35, scope: !5)
!21 = !DILocation(line: 29, column: 30, scope: !5)
!22 = !DILocation(line: 29, column: 35, scope: !5)
!23 = !DILocation(line: 30, column: 30, scope: !5)
!24 = !DILocation(line: 30, column: 35, scope: !5)
!25 = !DILocation(line: 31, column: 31, scope: !5)
!26 = !DILocation(line: 31, column: 36, scope: !5)
!27 = !DILocation(line: 26, column: 79, scope: !5)
!28 = !DILocation(line: 27, column: 75, scope: !5)
!29 = !DILocation(line: 28, column: 75, scope: !5)
!30 = !DILocation(line: 29, column: 75, scope: !5)
!31 = !DILocation(line: 30, column: 75, scope: !5)
!32 = !DILocation(line: 31, column: 76, scope: !5)
!33 = !DILocation(line: 32, column: 18, scope: !5)
!34 = !DILocation(line: 34, column: 18, scope: !5)
!35 = !DILocation(line: 35, column: 18, scope: !5)
!36 = !DILocation(line: 36, column: 18, scope: !5)
!37 = !DILocation(line: 37, column: 20, scope: !5)
!38 = !DILocation(line: 38, column: 19, scope: !5)
!39 = !DILocation(line: 39, column: 19, scope: !5)
!40 = !DILocation(line: 42, column: 40, scope: !5)
!41 = !DILocation(line: 42, column: 4, scope: !5)
