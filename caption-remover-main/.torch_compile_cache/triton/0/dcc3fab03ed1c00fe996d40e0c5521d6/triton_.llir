; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = shl i32 %6, 3, !dbg !10
  %8 = and i32 %7, 1016, !dbg !10
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !11
  %10 = shl i32 %9, 10, !dbg !12
  %11 = or i32 %10, %8, !dbg !13
  %12 = icmp slt i32 %11, %4, !dbg !14
  %.frozen = freeze i32 %11
  %13 = sdiv i32 %.frozen, 1280, !dbg !15
  %14 = mul i32 %13, 1280
  %.decomposed = sub i32 %.frozen, %14
  %15 = mul i32 %13, 2560, !dbg !16
  %16 = add i32 %15, %.decomposed, !dbg !17
  %17 = sext i32 %16 to i64, !dbg !18
  %18 = getelementptr half, ptr addrspace(1) %0, i64 %17, !dbg !18
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 %12) #4, !dbg !19
  %20 = sext i32 %.decomposed to i64, !dbg !20
  %21 = getelementptr half, ptr addrspace(1) %1, i64 %20, !dbg !20
  %22 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 %12) #4, !dbg !21
  %23 = getelementptr half, ptr addrspace(1) %2, i64 %17, !dbg !22
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %23, i1 %12) #4, !dbg !23
  %25 = add nsw i32 %.decomposed, 1280, !dbg !24
  %26 = add i32 %25, %15, !dbg !25
  %27 = sext i32 %26 to i64, !dbg !26
  %28 = getelementptr half, ptr addrspace(1) %0, i64 %27, !dbg !26
  %29 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %12) #4, !dbg !27
  %30 = extractvalue { i32, i32, i32, i32 } %29, 0, !dbg !27
  %31 = extractvalue { i32, i32, i32, i32 } %29, 1, !dbg !27
  %32 = extractvalue { i32, i32, i32, i32 } %29, 2, !dbg !27
  %33 = extractvalue { i32, i32, i32, i32 } %29, 3, !dbg !27
  %extelt.offset12 = lshr i32 %30, 16, !dbg !27
  %extelt.offset13 = lshr i32 %31, 16, !dbg !27
  %extelt.offset14 = lshr i32 %32, 16, !dbg !27
  %extelt.offset15 = lshr i32 %33, 16, !dbg !27
  %34 = zext nneg i32 %25 to i64, !dbg !28
  %35 = getelementptr half, ptr addrspace(1) %1, i64 %34, !dbg !28
  %36 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %35, i1 %12) #4, !dbg !29
  %37 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !29
  %38 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !29
  %39 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !29
  %40 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !29
  %extelt.offset16 = lshr i32 %37, 16, !dbg !29
  %extelt.offset17 = lshr i32 %38, 16, !dbg !29
  %extelt.offset18 = lshr i32 %39, 16, !dbg !29
  %extelt.offset19 = lshr i32 %40, 16, !dbg !29
  %41 = getelementptr half, ptr addrspace(1) %2, i64 %27, !dbg !30
  %42 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %41, i1 %12) #4, !dbg !31
  %43 = extractvalue { i32, i32, i32, i32 } %42, 0, !dbg !31
  %44 = extractvalue { i32, i32, i32, i32 } %42, 1, !dbg !31
  %45 = extractvalue { i32, i32, i32, i32 } %42, 2, !dbg !31
  %46 = extractvalue { i32, i32, i32, i32 } %42, 3, !dbg !31
  %extelt.offset20 = lshr i32 %43, 16, !dbg !31
  %extelt.offset21 = lshr i32 %44, 16, !dbg !31
  %extelt.offset22 = lshr i32 %45, 16, !dbg !31
  %extelt.offset23 = lshr i32 %46, 16, !dbg !31
  %47 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !27
  %48 = insertelement <2 x i32> %47, i32 %extelt.offset12, i64 1, !dbg !27
  %49 = trunc <2 x i32> %48 to <2 x i16>, !dbg !27
  %50 = bitcast <2 x i16> %49 to <2 x half>, !dbg !27
  %51 = fpext <2 x half> %50 to <2 x float>, !dbg !32
  %52 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !29
  %53 = insertelement <2 x i32> %52, i32 %extelt.offset16, i64 1, !dbg !29
  %54 = trunc <2 x i32> %53 to <2 x i16>, !dbg !29
  %55 = bitcast <2 x i16> %54 to <2 x half>, !dbg !29
  %56 = fpext <2 x half> %55 to <2 x float>, !dbg !33
  %57 = insertelement <2 x i32> poison, i32 %43, i64 0, !dbg !31
  %58 = insertelement <2 x i32> %57, i32 %extelt.offset20, i64 1, !dbg !31
  %59 = trunc <2 x i32> %58 to <2 x i16>, !dbg !31
  %60 = bitcast <2 x i16> %59 to <2 x half>, !dbg !31
  %61 = fpext <2 x half> %60 to <2 x float>, !dbg !34
  %62 = fadd <2 x float> %51, %56, !dbg !35
  %63 = fmul <2 x float> %61, <float 1.250000e-01, float 1.250000e-01>, !dbg !36
  %64 = fadd <2 x float> %62, %63, !dbg !37
  %65 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !27
  %66 = insertelement <2 x i32> %65, i32 %extelt.offset13, i64 1, !dbg !27
  %67 = trunc <2 x i32> %66 to <2 x i16>, !dbg !27
  %68 = bitcast <2 x i16> %67 to <2 x half>, !dbg !27
  %69 = fpext <2 x half> %68 to <2 x float>, !dbg !32
  %70 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !29
  %71 = insertelement <2 x i32> %70, i32 %extelt.offset17, i64 1, !dbg !29
  %72 = trunc <2 x i32> %71 to <2 x i16>, !dbg !29
  %73 = bitcast <2 x i16> %72 to <2 x half>, !dbg !29
  %74 = fpext <2 x half> %73 to <2 x float>, !dbg !33
  %75 = insertelement <2 x i32> poison, i32 %44, i64 0, !dbg !31
  %76 = insertelement <2 x i32> %75, i32 %extelt.offset21, i64 1, !dbg !31
  %77 = trunc <2 x i32> %76 to <2 x i16>, !dbg !31
  %78 = bitcast <2 x i16> %77 to <2 x half>, !dbg !31
  %79 = fpext <2 x half> %78 to <2 x float>, !dbg !34
  %80 = fadd <2 x float> %69, %74, !dbg !35
  %81 = fmul <2 x float> %79, <float 1.250000e-01, float 1.250000e-01>, !dbg !36
  %82 = fadd <2 x float> %80, %81, !dbg !37
  %83 = insertelement <2 x i32> poison, i32 %32, i64 0, !dbg !27
  %84 = insertelement <2 x i32> %83, i32 %extelt.offset14, i64 1, !dbg !27
  %85 = trunc <2 x i32> %84 to <2 x i16>, !dbg !27
  %86 = bitcast <2 x i16> %85 to <2 x half>, !dbg !27
  %87 = fpext <2 x half> %86 to <2 x float>, !dbg !32
  %88 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !29
  %89 = insertelement <2 x i32> %88, i32 %extelt.offset18, i64 1, !dbg !29
  %90 = trunc <2 x i32> %89 to <2 x i16>, !dbg !29
  %91 = bitcast <2 x i16> %90 to <2 x half>, !dbg !29
  %92 = fpext <2 x half> %91 to <2 x float>, !dbg !33
  %93 = insertelement <2 x i32> poison, i32 %45, i64 0, !dbg !31
  %94 = insertelement <2 x i32> %93, i32 %extelt.offset22, i64 1, !dbg !31
  %95 = trunc <2 x i32> %94 to <2 x i16>, !dbg !31
  %96 = bitcast <2 x i16> %95 to <2 x half>, !dbg !31
  %97 = fpext <2 x half> %96 to <2 x float>, !dbg !34
  %98 = fadd <2 x float> %87, %92, !dbg !35
  %99 = fmul <2 x float> %97, <float 1.250000e-01, float 1.250000e-01>, !dbg !36
  %100 = fadd <2 x float> %98, %99, !dbg !37
  %101 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !27
  %102 = insertelement <2 x i32> %101, i32 %extelt.offset15, i64 1, !dbg !27
  %103 = trunc <2 x i32> %102 to <2 x i16>, !dbg !27
  %104 = bitcast <2 x i16> %103 to <2 x half>, !dbg !27
  %105 = fpext <2 x half> %104 to <2 x float>, !dbg !32
  %106 = insertelement <2 x i32> poison, i32 %40, i64 0, !dbg !29
  %107 = insertelement <2 x i32> %106, i32 %extelt.offset19, i64 1, !dbg !29
  %108 = trunc <2 x i32> %107 to <2 x i16>, !dbg !29
  %109 = bitcast <2 x i16> %108 to <2 x half>, !dbg !29
  %110 = fpext <2 x half> %109 to <2 x float>, !dbg !33
  %111 = insertelement <2 x i32> poison, i32 %46, i64 0, !dbg !31
  %112 = insertelement <2 x i32> %111, i32 %extelt.offset23, i64 1, !dbg !31
  %113 = trunc <2 x i32> %112 to <2 x i16>, !dbg !31
  %114 = bitcast <2 x i16> %113 to <2 x half>, !dbg !31
  %115 = fpext <2 x half> %114 to <2 x float>, !dbg !34
  %116 = fadd <2 x float> %105, %110, !dbg !35
  %117 = fmul <2 x float> %115, <float 1.250000e-01, float 1.250000e-01>, !dbg !36
  %118 = fadd <2 x float> %116, %117, !dbg !37
  %119 = extractelement <2 x float> %64, i64 0, !dbg !38
  %120 = fmul float %119, 0x3FE6A09E60000000, !dbg !38
  %121 = extractelement <2 x float> %64, i64 1, !dbg !38
  %122 = fmul float %121, 0x3FE6A09E60000000, !dbg !38
  %123 = extractelement <2 x float> %82, i64 0, !dbg !38
  %124 = fmul float %123, 0x3FE6A09E60000000, !dbg !38
  %125 = extractelement <2 x float> %82, i64 1, !dbg !38
  %126 = fmul float %125, 0x3FE6A09E60000000, !dbg !38
  %127 = extractelement <2 x float> %100, i64 0, !dbg !38
  %128 = fmul float %127, 0x3FE6A09E60000000, !dbg !38
  %129 = extractelement <2 x float> %100, i64 1, !dbg !38
  %130 = fmul float %129, 0x3FE6A09E60000000, !dbg !38
  %131 = extractelement <2 x float> %118, i64 0, !dbg !38
  %132 = fmul float %131, 0x3FE6A09E60000000, !dbg !38
  %133 = extractelement <2 x float> %118, i64 1, !dbg !38
  %134 = fmul float %133, 0x3FE6A09E60000000, !dbg !38
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i = icmp eq i32 %135, 0, !dbg !39
  %136 = tail call float @llvm.nvvm.fabs.ftz.f(float %120) #4, !dbg !39
  %137 = tail call float @llvm.nvvm.fabs.f(float %120) #4, !dbg !39
  %.0.i = select i1 %.not.i, float %137, float %136, !dbg !39
  %138 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !39
  br i1 %138, label %__nv_fabsf.exit1.i, label %140, !dbg !39

__nv_fabsf.exit1.i:                               ; preds = %5
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i = icmp eq i32 %139, 0, !dbg !39
  %.01.i = select i1 %.not1.i, float %137, float %136, !dbg !39
  br label %__internal_fmad.exit.i, !dbg !39

140:                                              ; preds = %5
  %141 = fmul float %120, %120, !dbg !39
  br label %__internal_fmad.exit.i, !dbg !39

__internal_fmad.exit.i:                           ; preds = %140, %__nv_fabsf.exit1.i
  %142 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %140 ], !dbg !39
  %143 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %140 ], !dbg !39
  %144 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %140 ], !dbg !39
  %145 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %140 ], !dbg !39
  %146 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %140 ], !dbg !39
  %147 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %140 ], !dbg !39
  %148 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %140 ], !dbg !39
  %149 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %141, %140 ], !dbg !39
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i = icmp eq i32 %150, 0, !dbg !39
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float %149, float %147) #4, !dbg !39
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %148, float %149, float %147) #4, !dbg !39
  %.02.i = select i1 %.not2.i, float %152, float %151, !dbg !39
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i = icmp eq i32 %153, 0, !dbg !39
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %149, float %146) #4, !dbg !39
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %149, float %146) #4, !dbg !39
  %.03.i = select i1 %.not3.i, float %155, float %154, !dbg !39
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i = icmp eq i32 %156, 0, !dbg !39
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %149, float %145) #4, !dbg !39
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %149, float %145) #4, !dbg !39
  %.04.i = select i1 %.not4.i, float %158, float %157, !dbg !39
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i = icmp eq i32 %159, 0, !dbg !39
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %149, float %144) #4, !dbg !39
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %149, float %144) #4, !dbg !39
  %.05.i = select i1 %.not5.i, float %161, float %160, !dbg !39
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i = icmp eq i32 %162, 0, !dbg !39
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %149, float %143) #4, !dbg !39
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %149, float %143) #4, !dbg !39
  %.06.i = select i1 %.not6.i, float %164, float %163, !dbg !39
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i = icmp eq i32 %165, 0, !dbg !39
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %149, float %142) #4, !dbg !39
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %149, float %142) #4, !dbg !39
  %.07.i = select i1 %.not7.i, float %167, float %166, !dbg !39
  %168 = fneg float %149, !dbg !39
  %169 = select i1 %138, float %168, float %120, !dbg !39
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i = icmp eq i32 %170, 0, !dbg !39
  %171 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %169, float %169) #4, !dbg !39
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %169, float %169) #4, !dbg !39
  %.08.i = select i1 %.not8.i, float %172, float %171, !dbg !39
  br i1 %138, label %173, label %__nv_erff.exit, !dbg !39

173:                                              ; preds = %__internal_fmad.exit.i
  %174 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #4, !dbg !39
  %175 = fsub float 1.000000e+00, %174, !dbg !39
  %176 = bitcast float %175 to i32, !dbg !39
  %177 = bitcast float %120 to i32, !dbg !39
  %178 = and i32 %177, -2147483648, !dbg !39
  %179 = or i32 %178, %176, !dbg !39
  %180 = bitcast i32 %179 to float, !dbg !39
  br label %__nv_erff.exit, !dbg !39

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %173
  %r.0.i = phi float [ %180, %173 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !39
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i24 = icmp eq i32 %181, 0, !dbg !39
  %182 = tail call float @llvm.nvvm.fabs.ftz.f(float %122) #4, !dbg !39
  %183 = tail call float @llvm.nvvm.fabs.f(float %122) #4, !dbg !39
  %.0.i25 = select i1 %.not.i24, float %183, float %182, !dbg !39
  %184 = fcmp oge float %.0.i25, 0x3FF00C1FC0000000, !dbg !39
  br i1 %184, label %__nv_fabsf.exit1.i42, label %186, !dbg !39

__nv_fabsf.exit1.i42:                             ; preds = %__nv_erff.exit
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i43 = icmp eq i32 %185, 0, !dbg !39
  %.01.i44 = select i1 %.not1.i43, float %183, float %182, !dbg !39
  br label %__internal_fmad.exit.i26, !dbg !39

186:                                              ; preds = %__nv_erff.exit
  %187 = fmul float %122, %122, !dbg !39
  br label %__internal_fmad.exit.i26, !dbg !39

__internal_fmad.exit.i26:                         ; preds = %186, %__nv_fabsf.exit1.i42
  %188 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i42 ], [ 0x3FC06EBA60000000, %186 ], !dbg !39
  %189 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i42 ], [ 0xBFD8127580000000, %186 ], !dbg !39
  %190 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i42 ], [ 0x3FBCE315E0000000, %186 ], !dbg !39
  %191 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i42 ], [ 0xBF9B837CE0000000, %186 ], !dbg !39
  %192 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i42 ], [ 0x3F755ABD40000000, %186 ], !dbg !39
  %193 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i42 ], [ 0xBF4AE9A400000000, %186 ], !dbg !39
  %194 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i42 ], [ 0x3F163D2D40000000, %186 ], !dbg !39
  %195 = phi float [ %.01.i44, %__nv_fabsf.exit1.i42 ], [ %187, %186 ], !dbg !39
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i27 = icmp eq i32 %196, 0, !dbg !39
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %194, float %195, float %193) #4, !dbg !39
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %194, float %195, float %193) #4, !dbg !39
  %.02.i28 = select i1 %.not2.i27, float %198, float %197, !dbg !39
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i29 = icmp eq i32 %199, 0, !dbg !39
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i28, float %195, float %192) #4, !dbg !39
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i28, float %195, float %192) #4, !dbg !39
  %.03.i30 = select i1 %.not3.i29, float %201, float %200, !dbg !39
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i31 = icmp eq i32 %202, 0, !dbg !39
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i30, float %195, float %191) #4, !dbg !39
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i30, float %195, float %191) #4, !dbg !39
  %.04.i32 = select i1 %.not4.i31, float %204, float %203, !dbg !39
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i33 = icmp eq i32 %205, 0, !dbg !39
  %206 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i32, float %195, float %190) #4, !dbg !39
  %207 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i32, float %195, float %190) #4, !dbg !39
  %.05.i34 = select i1 %.not5.i33, float %207, float %206, !dbg !39
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i35 = icmp eq i32 %208, 0, !dbg !39
  %209 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i34, float %195, float %189) #4, !dbg !39
  %210 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i34, float %195, float %189) #4, !dbg !39
  %.06.i36 = select i1 %.not6.i35, float %210, float %209, !dbg !39
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i37 = icmp eq i32 %211, 0, !dbg !39
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i36, float %195, float %188) #4, !dbg !39
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i36, float %195, float %188) #4, !dbg !39
  %.07.i38 = select i1 %.not7.i37, float %213, float %212, !dbg !39
  %214 = fneg float %195, !dbg !39
  %215 = select i1 %184, float %214, float %122, !dbg !39
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i39 = icmp eq i32 %216, 0, !dbg !39
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i38, float %215, float %215) #4, !dbg !39
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i38, float %215, float %215) #4, !dbg !39
  %.08.i40 = select i1 %.not8.i39, float %218, float %217, !dbg !39
  br i1 %184, label %219, label %__nv_erff.exit45, !dbg !39

219:                                              ; preds = %__internal_fmad.exit.i26
  %220 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i40) #4, !dbg !39
  %221 = fsub float 1.000000e+00, %220, !dbg !39
  %222 = bitcast float %221 to i32, !dbg !39
  %223 = bitcast float %122 to i32, !dbg !39
  %224 = and i32 %223, -2147483648, !dbg !39
  %225 = or i32 %224, %222, !dbg !39
  %226 = bitcast i32 %225 to float, !dbg !39
  br label %__nv_erff.exit45, !dbg !39

__nv_erff.exit45:                                 ; preds = %__internal_fmad.exit.i26, %219
  %r.0.i41 = phi float [ %226, %219 ], [ %.08.i40, %__internal_fmad.exit.i26 ], !dbg !39
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i46 = icmp eq i32 %227, 0, !dbg !39
  %228 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #4, !dbg !39
  %229 = tail call float @llvm.nvvm.fabs.f(float %124) #4, !dbg !39
  %.0.i47 = select i1 %.not.i46, float %229, float %228, !dbg !39
  %230 = fcmp oge float %.0.i47, 0x3FF00C1FC0000000, !dbg !39
  br i1 %230, label %__nv_fabsf.exit1.i64, label %232, !dbg !39

__nv_fabsf.exit1.i64:                             ; preds = %__nv_erff.exit45
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i65 = icmp eq i32 %231, 0, !dbg !39
  %.01.i66 = select i1 %.not1.i65, float %229, float %228, !dbg !39
  br label %__internal_fmad.exit.i48, !dbg !39

232:                                              ; preds = %__nv_erff.exit45
  %233 = fmul float %124, %124, !dbg !39
  br label %__internal_fmad.exit.i48, !dbg !39

__internal_fmad.exit.i48:                         ; preds = %232, %__nv_fabsf.exit1.i64
  %234 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i64 ], [ 0x3FC06EBA60000000, %232 ], !dbg !39
  %235 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i64 ], [ 0xBFD8127580000000, %232 ], !dbg !39
  %236 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i64 ], [ 0x3FBCE315E0000000, %232 ], !dbg !39
  %237 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i64 ], [ 0xBF9B837CE0000000, %232 ], !dbg !39
  %238 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i64 ], [ 0x3F755ABD40000000, %232 ], !dbg !39
  %239 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i64 ], [ 0xBF4AE9A400000000, %232 ], !dbg !39
  %240 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i64 ], [ 0x3F163D2D40000000, %232 ], !dbg !39
  %241 = phi float [ %.01.i66, %__nv_fabsf.exit1.i64 ], [ %233, %232 ], !dbg !39
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i49 = icmp eq i32 %242, 0, !dbg !39
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %240, float %241, float %239) #4, !dbg !39
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %240, float %241, float %239) #4, !dbg !39
  %.02.i50 = select i1 %.not2.i49, float %244, float %243, !dbg !39
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i51 = icmp eq i32 %245, 0, !dbg !39
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i50, float %241, float %238) #4, !dbg !39
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i50, float %241, float %238) #4, !dbg !39
  %.03.i52 = select i1 %.not3.i51, float %247, float %246, !dbg !39
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i53 = icmp eq i32 %248, 0, !dbg !39
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i52, float %241, float %237) #4, !dbg !39
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i52, float %241, float %237) #4, !dbg !39
  %.04.i54 = select i1 %.not4.i53, float %250, float %249, !dbg !39
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i55 = icmp eq i32 %251, 0, !dbg !39
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %241, float %236) #4, !dbg !39
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %241, float %236) #4, !dbg !39
  %.05.i56 = select i1 %.not5.i55, float %253, float %252, !dbg !39
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i57 = icmp eq i32 %254, 0, !dbg !39
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i56, float %241, float %235) #4, !dbg !39
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i56, float %241, float %235) #4, !dbg !39
  %.06.i58 = select i1 %.not6.i57, float %256, float %255, !dbg !39
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i59 = icmp eq i32 %257, 0, !dbg !39
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i58, float %241, float %234) #4, !dbg !39
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i58, float %241, float %234) #4, !dbg !39
  %.07.i60 = select i1 %.not7.i59, float %259, float %258, !dbg !39
  %260 = fneg float %241, !dbg !39
  %261 = select i1 %230, float %260, float %124, !dbg !39
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i61 = icmp eq i32 %262, 0, !dbg !39
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i60, float %261, float %261) #4, !dbg !39
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i60, float %261, float %261) #4, !dbg !39
  %.08.i62 = select i1 %.not8.i61, float %264, float %263, !dbg !39
  br i1 %230, label %265, label %__nv_erff.exit67, !dbg !39

265:                                              ; preds = %__internal_fmad.exit.i48
  %266 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i62) #4, !dbg !39
  %267 = fsub float 1.000000e+00, %266, !dbg !39
  %268 = bitcast float %267 to i32, !dbg !39
  %269 = bitcast float %124 to i32, !dbg !39
  %270 = and i32 %269, -2147483648, !dbg !39
  %271 = or i32 %270, %268, !dbg !39
  %272 = bitcast i32 %271 to float, !dbg !39
  br label %__nv_erff.exit67, !dbg !39

__nv_erff.exit67:                                 ; preds = %__internal_fmad.exit.i48, %265
  %r.0.i63 = phi float [ %272, %265 ], [ %.08.i62, %__internal_fmad.exit.i48 ], !dbg !39
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i68 = icmp eq i32 %273, 0, !dbg !39
  %274 = tail call float @llvm.nvvm.fabs.ftz.f(float %126) #4, !dbg !39
  %275 = tail call float @llvm.nvvm.fabs.f(float %126) #4, !dbg !39
  %.0.i69 = select i1 %.not.i68, float %275, float %274, !dbg !39
  %276 = fcmp oge float %.0.i69, 0x3FF00C1FC0000000, !dbg !39
  br i1 %276, label %__nv_fabsf.exit1.i86, label %278, !dbg !39

__nv_fabsf.exit1.i86:                             ; preds = %__nv_erff.exit67
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i87 = icmp eq i32 %277, 0, !dbg !39
  %.01.i88 = select i1 %.not1.i87, float %275, float %274, !dbg !39
  br label %__internal_fmad.exit.i70, !dbg !39

278:                                              ; preds = %__nv_erff.exit67
  %279 = fmul float %126, %126, !dbg !39
  br label %__internal_fmad.exit.i70, !dbg !39

__internal_fmad.exit.i70:                         ; preds = %278, %__nv_fabsf.exit1.i86
  %280 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i86 ], [ 0x3FC06EBA60000000, %278 ], !dbg !39
  %281 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i86 ], [ 0xBFD8127580000000, %278 ], !dbg !39
  %282 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i86 ], [ 0x3FBCE315E0000000, %278 ], !dbg !39
  %283 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i86 ], [ 0xBF9B837CE0000000, %278 ], !dbg !39
  %284 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i86 ], [ 0x3F755ABD40000000, %278 ], !dbg !39
  %285 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i86 ], [ 0xBF4AE9A400000000, %278 ], !dbg !39
  %286 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i86 ], [ 0x3F163D2D40000000, %278 ], !dbg !39
  %287 = phi float [ %.01.i88, %__nv_fabsf.exit1.i86 ], [ %279, %278 ], !dbg !39
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i71 = icmp eq i32 %288, 0, !dbg !39
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %286, float %287, float %285) #4, !dbg !39
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %286, float %287, float %285) #4, !dbg !39
  %.02.i72 = select i1 %.not2.i71, float %290, float %289, !dbg !39
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i73 = icmp eq i32 %291, 0, !dbg !39
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i72, float %287, float %284) #4, !dbg !39
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i72, float %287, float %284) #4, !dbg !39
  %.03.i74 = select i1 %.not3.i73, float %293, float %292, !dbg !39
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i75 = icmp eq i32 %294, 0, !dbg !39
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i74, float %287, float %283) #4, !dbg !39
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i74, float %287, float %283) #4, !dbg !39
  %.04.i76 = select i1 %.not4.i75, float %296, float %295, !dbg !39
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i77 = icmp eq i32 %297, 0, !dbg !39
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i76, float %287, float %282) #4, !dbg !39
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i76, float %287, float %282) #4, !dbg !39
  %.05.i78 = select i1 %.not5.i77, float %299, float %298, !dbg !39
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i79 = icmp eq i32 %300, 0, !dbg !39
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i78, float %287, float %281) #4, !dbg !39
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i78, float %287, float %281) #4, !dbg !39
  %.06.i80 = select i1 %.not6.i79, float %302, float %301, !dbg !39
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i81 = icmp eq i32 %303, 0, !dbg !39
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i80, float %287, float %280) #4, !dbg !39
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i80, float %287, float %280) #4, !dbg !39
  %.07.i82 = select i1 %.not7.i81, float %305, float %304, !dbg !39
  %306 = fneg float %287, !dbg !39
  %307 = select i1 %276, float %306, float %126, !dbg !39
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i83 = icmp eq i32 %308, 0, !dbg !39
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i82, float %307, float %307) #4, !dbg !39
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i82, float %307, float %307) #4, !dbg !39
  %.08.i84 = select i1 %.not8.i83, float %310, float %309, !dbg !39
  br i1 %276, label %311, label %__nv_erff.exit89, !dbg !39

311:                                              ; preds = %__internal_fmad.exit.i70
  %312 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i84) #4, !dbg !39
  %313 = fsub float 1.000000e+00, %312, !dbg !39
  %314 = bitcast float %313 to i32, !dbg !39
  %315 = bitcast float %126 to i32, !dbg !39
  %316 = and i32 %315, -2147483648, !dbg !39
  %317 = or i32 %316, %314, !dbg !39
  %318 = bitcast i32 %317 to float, !dbg !39
  br label %__nv_erff.exit89, !dbg !39

__nv_erff.exit89:                                 ; preds = %__internal_fmad.exit.i70, %311
  %r.0.i85 = phi float [ %318, %311 ], [ %.08.i84, %__internal_fmad.exit.i70 ], !dbg !39
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i90 = icmp eq i32 %319, 0, !dbg !39
  %320 = tail call float @llvm.nvvm.fabs.ftz.f(float %128) #4, !dbg !39
  %321 = tail call float @llvm.nvvm.fabs.f(float %128) #4, !dbg !39
  %.0.i91 = select i1 %.not.i90, float %321, float %320, !dbg !39
  %322 = fcmp oge float %.0.i91, 0x3FF00C1FC0000000, !dbg !39
  br i1 %322, label %__nv_fabsf.exit1.i108, label %324, !dbg !39

__nv_fabsf.exit1.i108:                            ; preds = %__nv_erff.exit89
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i109 = icmp eq i32 %323, 0, !dbg !39
  %.01.i110 = select i1 %.not1.i109, float %321, float %320, !dbg !39
  br label %__internal_fmad.exit.i92, !dbg !39

324:                                              ; preds = %__nv_erff.exit89
  %325 = fmul float %128, %128, !dbg !39
  br label %__internal_fmad.exit.i92, !dbg !39

__internal_fmad.exit.i92:                         ; preds = %324, %__nv_fabsf.exit1.i108
  %326 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i108 ], [ 0x3FC06EBA60000000, %324 ], !dbg !39
  %327 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i108 ], [ 0xBFD8127580000000, %324 ], !dbg !39
  %328 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i108 ], [ 0x3FBCE315E0000000, %324 ], !dbg !39
  %329 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i108 ], [ 0xBF9B837CE0000000, %324 ], !dbg !39
  %330 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i108 ], [ 0x3F755ABD40000000, %324 ], !dbg !39
  %331 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i108 ], [ 0xBF4AE9A400000000, %324 ], !dbg !39
  %332 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i108 ], [ 0x3F163D2D40000000, %324 ], !dbg !39
  %333 = phi float [ %.01.i110, %__nv_fabsf.exit1.i108 ], [ %325, %324 ], !dbg !39
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i93 = icmp eq i32 %334, 0, !dbg !39
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %332, float %333, float %331) #4, !dbg !39
  %336 = tail call float @llvm.nvvm.fma.rn.f(float %332, float %333, float %331) #4, !dbg !39
  %.02.i94 = select i1 %.not2.i93, float %336, float %335, !dbg !39
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i95 = icmp eq i32 %337, 0, !dbg !39
  %338 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i94, float %333, float %330) #4, !dbg !39
  %339 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i94, float %333, float %330) #4, !dbg !39
  %.03.i96 = select i1 %.not3.i95, float %339, float %338, !dbg !39
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i97 = icmp eq i32 %340, 0, !dbg !39
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i96, float %333, float %329) #4, !dbg !39
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i96, float %333, float %329) #4, !dbg !39
  %.04.i98 = select i1 %.not4.i97, float %342, float %341, !dbg !39
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i99 = icmp eq i32 %343, 0, !dbg !39
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i98, float %333, float %328) #4, !dbg !39
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i98, float %333, float %328) #4, !dbg !39
  %.05.i100 = select i1 %.not5.i99, float %345, float %344, !dbg !39
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i101 = icmp eq i32 %346, 0, !dbg !39
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i100, float %333, float %327) #4, !dbg !39
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i100, float %333, float %327) #4, !dbg !39
  %.06.i102 = select i1 %.not6.i101, float %348, float %347, !dbg !39
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i103 = icmp eq i32 %349, 0, !dbg !39
  %350 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i102, float %333, float %326) #4, !dbg !39
  %351 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i102, float %333, float %326) #4, !dbg !39
  %.07.i104 = select i1 %.not7.i103, float %351, float %350, !dbg !39
  %352 = fneg float %333, !dbg !39
  %353 = select i1 %322, float %352, float %128, !dbg !39
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i105 = icmp eq i32 %354, 0, !dbg !39
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i104, float %353, float %353) #4, !dbg !39
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i104, float %353, float %353) #4, !dbg !39
  %.08.i106 = select i1 %.not8.i105, float %356, float %355, !dbg !39
  br i1 %322, label %357, label %__nv_erff.exit111, !dbg !39

357:                                              ; preds = %__internal_fmad.exit.i92
  %358 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i106) #4, !dbg !39
  %359 = fsub float 1.000000e+00, %358, !dbg !39
  %360 = bitcast float %359 to i32, !dbg !39
  %361 = bitcast float %128 to i32, !dbg !39
  %362 = and i32 %361, -2147483648, !dbg !39
  %363 = or i32 %362, %360, !dbg !39
  %364 = bitcast i32 %363 to float, !dbg !39
  br label %__nv_erff.exit111, !dbg !39

__nv_erff.exit111:                                ; preds = %__internal_fmad.exit.i92, %357
  %r.0.i107 = phi float [ %364, %357 ], [ %.08.i106, %__internal_fmad.exit.i92 ], !dbg !39
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i112 = icmp eq i32 %365, 0, !dbg !39
  %366 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #4, !dbg !39
  %367 = tail call float @llvm.nvvm.fabs.f(float %130) #4, !dbg !39
  %.0.i113 = select i1 %.not.i112, float %367, float %366, !dbg !39
  %368 = fcmp oge float %.0.i113, 0x3FF00C1FC0000000, !dbg !39
  br i1 %368, label %__nv_fabsf.exit1.i130, label %370, !dbg !39

__nv_fabsf.exit1.i130:                            ; preds = %__nv_erff.exit111
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i131 = icmp eq i32 %369, 0, !dbg !39
  %.01.i132 = select i1 %.not1.i131, float %367, float %366, !dbg !39
  br label %__internal_fmad.exit.i114, !dbg !39

370:                                              ; preds = %__nv_erff.exit111
  %371 = fmul float %130, %130, !dbg !39
  br label %__internal_fmad.exit.i114, !dbg !39

__internal_fmad.exit.i114:                        ; preds = %370, %__nv_fabsf.exit1.i130
  %372 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i130 ], [ 0x3FC06EBA60000000, %370 ], !dbg !39
  %373 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i130 ], [ 0xBFD8127580000000, %370 ], !dbg !39
  %374 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i130 ], [ 0x3FBCE315E0000000, %370 ], !dbg !39
  %375 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i130 ], [ 0xBF9B837CE0000000, %370 ], !dbg !39
  %376 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i130 ], [ 0x3F755ABD40000000, %370 ], !dbg !39
  %377 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i130 ], [ 0xBF4AE9A400000000, %370 ], !dbg !39
  %378 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i130 ], [ 0x3F163D2D40000000, %370 ], !dbg !39
  %379 = phi float [ %.01.i132, %__nv_fabsf.exit1.i130 ], [ %371, %370 ], !dbg !39
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i115 = icmp eq i32 %380, 0, !dbg !39
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %378, float %379, float %377) #4, !dbg !39
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %378, float %379, float %377) #4, !dbg !39
  %.02.i116 = select i1 %.not2.i115, float %382, float %381, !dbg !39
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i117 = icmp eq i32 %383, 0, !dbg !39
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i116, float %379, float %376) #4, !dbg !39
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i116, float %379, float %376) #4, !dbg !39
  %.03.i118 = select i1 %.not3.i117, float %385, float %384, !dbg !39
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i119 = icmp eq i32 %386, 0, !dbg !39
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i118, float %379, float %375) #4, !dbg !39
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i118, float %379, float %375) #4, !dbg !39
  %.04.i120 = select i1 %.not4.i119, float %388, float %387, !dbg !39
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i121 = icmp eq i32 %389, 0, !dbg !39
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i120, float %379, float %374) #4, !dbg !39
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i120, float %379, float %374) #4, !dbg !39
  %.05.i122 = select i1 %.not5.i121, float %391, float %390, !dbg !39
  %392 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i123 = icmp eq i32 %392, 0, !dbg !39
  %393 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i122, float %379, float %373) #4, !dbg !39
  %394 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i122, float %379, float %373) #4, !dbg !39
  %.06.i124 = select i1 %.not6.i123, float %394, float %393, !dbg !39
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i125 = icmp eq i32 %395, 0, !dbg !39
  %396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %379, float %372) #4, !dbg !39
  %397 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %379, float %372) #4, !dbg !39
  %.07.i126 = select i1 %.not7.i125, float %397, float %396, !dbg !39
  %398 = fneg float %379, !dbg !39
  %399 = select i1 %368, float %398, float %130, !dbg !39
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i127 = icmp eq i32 %400, 0, !dbg !39
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i126, float %399, float %399) #4, !dbg !39
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i126, float %399, float %399) #4, !dbg !39
  %.08.i128 = select i1 %.not8.i127, float %402, float %401, !dbg !39
  br i1 %368, label %403, label %__nv_erff.exit133, !dbg !39

403:                                              ; preds = %__internal_fmad.exit.i114
  %404 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i128) #4, !dbg !39
  %405 = fsub float 1.000000e+00, %404, !dbg !39
  %406 = bitcast float %405 to i32, !dbg !39
  %407 = bitcast float %130 to i32, !dbg !39
  %408 = and i32 %407, -2147483648, !dbg !39
  %409 = or i32 %408, %406, !dbg !39
  %410 = bitcast i32 %409 to float, !dbg !39
  br label %__nv_erff.exit133, !dbg !39

__nv_erff.exit133:                                ; preds = %__internal_fmad.exit.i114, %403
  %r.0.i129 = phi float [ %410, %403 ], [ %.08.i128, %__internal_fmad.exit.i114 ], !dbg !39
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i134 = icmp eq i32 %411, 0, !dbg !39
  %412 = tail call float @llvm.nvvm.fabs.ftz.f(float %132) #4, !dbg !39
  %413 = tail call float @llvm.nvvm.fabs.f(float %132) #4, !dbg !39
  %.0.i135 = select i1 %.not.i134, float %413, float %412, !dbg !39
  %414 = fcmp oge float %.0.i135, 0x3FF00C1FC0000000, !dbg !39
  br i1 %414, label %__nv_fabsf.exit1.i152, label %416, !dbg !39

__nv_fabsf.exit1.i152:                            ; preds = %__nv_erff.exit133
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i153 = icmp eq i32 %415, 0, !dbg !39
  %.01.i154 = select i1 %.not1.i153, float %413, float %412, !dbg !39
  br label %__internal_fmad.exit.i136, !dbg !39

416:                                              ; preds = %__nv_erff.exit133
  %417 = fmul float %132, %132, !dbg !39
  br label %__internal_fmad.exit.i136, !dbg !39

__internal_fmad.exit.i136:                        ; preds = %416, %__nv_fabsf.exit1.i152
  %418 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i152 ], [ 0x3FC06EBA60000000, %416 ], !dbg !39
  %419 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i152 ], [ 0xBFD8127580000000, %416 ], !dbg !39
  %420 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i152 ], [ 0x3FBCE315E0000000, %416 ], !dbg !39
  %421 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i152 ], [ 0xBF9B837CE0000000, %416 ], !dbg !39
  %422 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i152 ], [ 0x3F755ABD40000000, %416 ], !dbg !39
  %423 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i152 ], [ 0xBF4AE9A400000000, %416 ], !dbg !39
  %424 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i152 ], [ 0x3F163D2D40000000, %416 ], !dbg !39
  %425 = phi float [ %.01.i154, %__nv_fabsf.exit1.i152 ], [ %417, %416 ], !dbg !39
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i137 = icmp eq i32 %426, 0, !dbg !39
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %424, float %425, float %423) #4, !dbg !39
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %424, float %425, float %423) #4, !dbg !39
  %.02.i138 = select i1 %.not2.i137, float %428, float %427, !dbg !39
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i139 = icmp eq i32 %429, 0, !dbg !39
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i138, float %425, float %422) #4, !dbg !39
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i138, float %425, float %422) #4, !dbg !39
  %.03.i140 = select i1 %.not3.i139, float %431, float %430, !dbg !39
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i141 = icmp eq i32 %432, 0, !dbg !39
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i140, float %425, float %421) #4, !dbg !39
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i140, float %425, float %421) #4, !dbg !39
  %.04.i142 = select i1 %.not4.i141, float %434, float %433, !dbg !39
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i143 = icmp eq i32 %435, 0, !dbg !39
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i142, float %425, float %420) #4, !dbg !39
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i142, float %425, float %420) #4, !dbg !39
  %.05.i144 = select i1 %.not5.i143, float %437, float %436, !dbg !39
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i145 = icmp eq i32 %438, 0, !dbg !39
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i144, float %425, float %419) #4, !dbg !39
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i144, float %425, float %419) #4, !dbg !39
  %.06.i146 = select i1 %.not6.i145, float %440, float %439, !dbg !39
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i147 = icmp eq i32 %441, 0, !dbg !39
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i146, float %425, float %418) #4, !dbg !39
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i146, float %425, float %418) #4, !dbg !39
  %.07.i148 = select i1 %.not7.i147, float %443, float %442, !dbg !39
  %444 = fneg float %425, !dbg !39
  %445 = select i1 %414, float %444, float %132, !dbg !39
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i149 = icmp eq i32 %446, 0, !dbg !39
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i148, float %445, float %445) #4, !dbg !39
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i148, float %445, float %445) #4, !dbg !39
  %.08.i150 = select i1 %.not8.i149, float %448, float %447, !dbg !39
  br i1 %414, label %449, label %__nv_erff.exit155, !dbg !39

449:                                              ; preds = %__internal_fmad.exit.i136
  %450 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i150) #4, !dbg !39
  %451 = fsub float 1.000000e+00, %450, !dbg !39
  %452 = bitcast float %451 to i32, !dbg !39
  %453 = bitcast float %132 to i32, !dbg !39
  %454 = and i32 %453, -2147483648, !dbg !39
  %455 = or i32 %454, %452, !dbg !39
  %456 = bitcast i32 %455 to float, !dbg !39
  br label %__nv_erff.exit155, !dbg !39

__nv_erff.exit155:                                ; preds = %__internal_fmad.exit.i136, %449
  %r.0.i151 = phi float [ %456, %449 ], [ %.08.i150, %__internal_fmad.exit.i136 ], !dbg !39
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i156 = icmp eq i32 %457, 0, !dbg !39
  %458 = tail call float @llvm.nvvm.fabs.ftz.f(float %134) #4, !dbg !39
  %459 = tail call float @llvm.nvvm.fabs.f(float %134) #4, !dbg !39
  %.0.i157 = select i1 %.not.i156, float %459, float %458, !dbg !39
  %460 = fcmp oge float %.0.i157, 0x3FF00C1FC0000000, !dbg !39
  br i1 %460, label %__nv_fabsf.exit1.i174, label %462, !dbg !39

__nv_fabsf.exit1.i174:                            ; preds = %__nv_erff.exit155
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not1.i175 = icmp eq i32 %461, 0, !dbg !39
  %.01.i176 = select i1 %.not1.i175, float %459, float %458, !dbg !39
  br label %__internal_fmad.exit.i158, !dbg !39

462:                                              ; preds = %__nv_erff.exit155
  %463 = fmul float %134, %134, !dbg !39
  br label %__internal_fmad.exit.i158, !dbg !39

__internal_fmad.exit.i158:                        ; preds = %462, %__nv_fabsf.exit1.i174
  %464 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i174 ], [ 0x3FC06EBA60000000, %462 ], !dbg !39
  %465 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i174 ], [ 0xBFD8127580000000, %462 ], !dbg !39
  %466 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i174 ], [ 0x3FBCE315E0000000, %462 ], !dbg !39
  %467 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i174 ], [ 0xBF9B837CE0000000, %462 ], !dbg !39
  %468 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i174 ], [ 0x3F755ABD40000000, %462 ], !dbg !39
  %469 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i174 ], [ 0xBF4AE9A400000000, %462 ], !dbg !39
  %470 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i174 ], [ 0x3F163D2D40000000, %462 ], !dbg !39
  %471 = phi float [ %.01.i176, %__nv_fabsf.exit1.i174 ], [ %463, %462 ], !dbg !39
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not2.i159 = icmp eq i32 %472, 0, !dbg !39
  %473 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %470, float %471, float %469) #4, !dbg !39
  %474 = tail call float @llvm.nvvm.fma.rn.f(float %470, float %471, float %469) #4, !dbg !39
  %.02.i160 = select i1 %.not2.i159, float %474, float %473, !dbg !39
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not3.i161 = icmp eq i32 %475, 0, !dbg !39
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i160, float %471, float %468) #4, !dbg !39
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i160, float %471, float %468) #4, !dbg !39
  %.03.i162 = select i1 %.not3.i161, float %477, float %476, !dbg !39
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not4.i163 = icmp eq i32 %478, 0, !dbg !39
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i162, float %471, float %467) #4, !dbg !39
  %480 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i162, float %471, float %467) #4, !dbg !39
  %.04.i164 = select i1 %.not4.i163, float %480, float %479, !dbg !39
  %481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not5.i165 = icmp eq i32 %481, 0, !dbg !39
  %482 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i164, float %471, float %466) #4, !dbg !39
  %483 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i164, float %471, float %466) #4, !dbg !39
  %.05.i166 = select i1 %.not5.i165, float %483, float %482, !dbg !39
  %484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not6.i167 = icmp eq i32 %484, 0, !dbg !39
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %471, float %465) #4, !dbg !39
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %471, float %465) #4, !dbg !39
  %.06.i168 = select i1 %.not6.i167, float %486, float %485, !dbg !39
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not7.i169 = icmp eq i32 %487, 0, !dbg !39
  %488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i168, float %471, float %464) #4, !dbg !39
  %489 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i168, float %471, float %464) #4, !dbg !39
  %.07.i170 = select i1 %.not7.i169, float %489, float %488, !dbg !39
  %490 = fneg float %471, !dbg !39
  %491 = select i1 %460, float %490, float %134, !dbg !39
  %492 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not8.i171 = icmp eq i32 %492, 0, !dbg !39
  %493 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i170, float %491, float %491) #4, !dbg !39
  %494 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i170, float %491, float %491) #4, !dbg !39
  %.08.i172 = select i1 %.not8.i171, float %494, float %493, !dbg !39
  br i1 %460, label %495, label %__nv_erff.exit177, !dbg !39

495:                                              ; preds = %__internal_fmad.exit.i158
  %496 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i172) #4, !dbg !39
  %497 = fsub float 1.000000e+00, %496, !dbg !39
  %498 = bitcast float %497 to i32, !dbg !39
  %499 = bitcast float %134 to i32, !dbg !39
  %500 = and i32 %499, -2147483648, !dbg !39
  %501 = or i32 %500, %498, !dbg !39
  %502 = bitcast i32 %501 to float, !dbg !39
  br label %__nv_erff.exit177, !dbg !39

__nv_erff.exit177:                                ; preds = %__internal_fmad.exit.i158, %495
  %r.0.i173 = phi float [ %502, %495 ], [ %.08.i172, %__internal_fmad.exit.i158 ], !dbg !39
  %503 = fmul <2 x float> %118, <float 5.000000e-01, float 5.000000e-01>, !dbg !40
  %504 = fmul <2 x float> %100, <float 5.000000e-01, float 5.000000e-01>, !dbg !40
  %505 = fmul <2 x float> %82, <float 5.000000e-01, float 5.000000e-01>, !dbg !40
  %506 = fmul <2 x float> %64, <float 5.000000e-01, float 5.000000e-01>, !dbg !40
  %507 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !19
  %extelt.offset3 = lshr i32 %507, 16, !dbg !19
  %508 = extractvalue { i32, i32, i32, i32 } %22, 3, !dbg !21
  %extelt.offset7 = lshr i32 %508, 16, !dbg !21
  %509 = extractvalue { i32, i32, i32, i32 } %24, 3, !dbg !23
  %extelt.offset11 = lshr i32 %509, 16, !dbg !23
  %510 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !19
  %extelt.offset2 = lshr i32 %510, 16, !dbg !19
  %511 = extractvalue { i32, i32, i32, i32 } %22, 2, !dbg !21
  %extelt.offset6 = lshr i32 %511, 16, !dbg !21
  %512 = extractvalue { i32, i32, i32, i32 } %24, 2, !dbg !23
  %extelt.offset10 = lshr i32 %512, 16, !dbg !23
  %513 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !19
  %extelt.offset1 = lshr i32 %513, 16, !dbg !19
  %514 = extractvalue { i32, i32, i32, i32 } %22, 1, !dbg !21
  %extelt.offset5 = lshr i32 %514, 16, !dbg !21
  %515 = extractvalue { i32, i32, i32, i32 } %24, 1, !dbg !23
  %extelt.offset9 = lshr i32 %515, 16, !dbg !23
  %516 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !19
  %extelt.offset = lshr i32 %516, 16, !dbg !19
  %517 = extractvalue { i32, i32, i32, i32 } %22, 0, !dbg !21
  %extelt.offset4 = lshr i32 %517, 16, !dbg !21
  %518 = extractvalue { i32, i32, i32, i32 } %24, 0, !dbg !23
  %extelt.offset8 = lshr i32 %518, 16, !dbg !23
  %519 = insertelement <2 x float> poison, float %r.0.i, i64 0, !dbg !41
  %520 = insertelement <2 x float> %519, float %r.0.i41, i64 1, !dbg !41
  %521 = fadd <2 x float> %520, <float 1.000000e+00, float 1.000000e+00>, !dbg !41
  %522 = insertelement <2 x float> poison, float %r.0.i63, i64 0, !dbg !41
  %523 = insertelement <2 x float> %522, float %r.0.i85, i64 1, !dbg !41
  %524 = fadd <2 x float> %523, <float 1.000000e+00, float 1.000000e+00>, !dbg !41
  %525 = insertelement <2 x float> poison, float %r.0.i107, i64 0, !dbg !41
  %526 = insertelement <2 x float> %525, float %r.0.i129, i64 1, !dbg !41
  %527 = fadd <2 x float> %526, <float 1.000000e+00, float 1.000000e+00>, !dbg !41
  %528 = insertelement <2 x float> poison, float %r.0.i151, i64 0, !dbg !41
  %529 = insertelement <2 x float> %528, float %r.0.i173, i64 1, !dbg !41
  %530 = fadd <2 x float> %529, <float 1.000000e+00, float 1.000000e+00>, !dbg !41
  %531 = sext i32 %11 to i64, !dbg !42
  %532 = getelementptr half, ptr addrspace(1) %3, i64 %531, !dbg !42
  %533 = insertelement <2 x i32> poison, i32 %516, i64 0, !dbg !19
  %534 = insertelement <2 x i32> %533, i32 %extelt.offset, i64 1, !dbg !19
  %535 = trunc <2 x i32> %534 to <2 x i16>, !dbg !19
  %536 = bitcast <2 x i16> %535 to <2 x half>, !dbg !19
  %537 = fpext <2 x half> %536 to <2 x float>, !dbg !43
  %538 = insertelement <2 x i32> poison, i32 %517, i64 0, !dbg !21
  %539 = insertelement <2 x i32> %538, i32 %extelt.offset4, i64 1, !dbg !21
  %540 = trunc <2 x i32> %539 to <2 x i16>, !dbg !21
  %541 = bitcast <2 x i16> %540 to <2 x half>, !dbg !21
  %542 = fpext <2 x half> %541 to <2 x float>, !dbg !44
  %543 = fadd <2 x float> %537, %542, !dbg !45
  %544 = insertelement <2 x i32> poison, i32 %518, i64 0, !dbg !23
  %545 = insertelement <2 x i32> %544, i32 %extelt.offset8, i64 1, !dbg !23
  %546 = trunc <2 x i32> %545 to <2 x i16>, !dbg !23
  %547 = bitcast <2 x i16> %546 to <2 x half>, !dbg !23
  %548 = fpext <2 x half> %547 to <2 x float>, !dbg !46
  %549 = fmul <2 x float> %548, <float 1.250000e-01, float 1.250000e-01>, !dbg !47
  %550 = fadd <2 x float> %543, %549, !dbg !48
  %551 = fmul <2 x float> %506, %521, !dbg !49
  %552 = fmul <2 x float> %550, %551, !dbg !50
  %553 = fptrunc <2 x float> %552 to <2 x half>, !dbg !51
  %554 = insertelement <2 x i32> poison, i32 %513, i64 0, !dbg !19
  %555 = insertelement <2 x i32> %554, i32 %extelt.offset1, i64 1, !dbg !19
  %556 = trunc <2 x i32> %555 to <2 x i16>, !dbg !19
  %557 = bitcast <2 x i16> %556 to <2 x half>, !dbg !19
  %558 = fpext <2 x half> %557 to <2 x float>, !dbg !43
  %559 = insertelement <2 x i32> poison, i32 %514, i64 0, !dbg !21
  %560 = insertelement <2 x i32> %559, i32 %extelt.offset5, i64 1, !dbg !21
  %561 = trunc <2 x i32> %560 to <2 x i16>, !dbg !21
  %562 = bitcast <2 x i16> %561 to <2 x half>, !dbg !21
  %563 = fpext <2 x half> %562 to <2 x float>, !dbg !44
  %564 = fadd <2 x float> %558, %563, !dbg !45
  %565 = insertelement <2 x i32> poison, i32 %515, i64 0, !dbg !23
  %566 = insertelement <2 x i32> %565, i32 %extelt.offset9, i64 1, !dbg !23
  %567 = trunc <2 x i32> %566 to <2 x i16>, !dbg !23
  %568 = bitcast <2 x i16> %567 to <2 x half>, !dbg !23
  %569 = fpext <2 x half> %568 to <2 x float>, !dbg !46
  %570 = fmul <2 x float> %569, <float 1.250000e-01, float 1.250000e-01>, !dbg !47
  %571 = fadd <2 x float> %564, %570, !dbg !48
  %572 = fmul <2 x float> %505, %524, !dbg !49
  %573 = fmul <2 x float> %571, %572, !dbg !50
  %574 = fptrunc <2 x float> %573 to <2 x half>, !dbg !51
  %575 = insertelement <2 x i32> poison, i32 %510, i64 0, !dbg !19
  %576 = insertelement <2 x i32> %575, i32 %extelt.offset2, i64 1, !dbg !19
  %577 = trunc <2 x i32> %576 to <2 x i16>, !dbg !19
  %578 = bitcast <2 x i16> %577 to <2 x half>, !dbg !19
  %579 = fpext <2 x half> %578 to <2 x float>, !dbg !43
  %580 = insertelement <2 x i32> poison, i32 %511, i64 0, !dbg !21
  %581 = insertelement <2 x i32> %580, i32 %extelt.offset6, i64 1, !dbg !21
  %582 = trunc <2 x i32> %581 to <2 x i16>, !dbg !21
  %583 = bitcast <2 x i16> %582 to <2 x half>, !dbg !21
  %584 = fpext <2 x half> %583 to <2 x float>, !dbg !44
  %585 = fadd <2 x float> %579, %584, !dbg !45
  %586 = insertelement <2 x i32> poison, i32 %512, i64 0, !dbg !23
  %587 = insertelement <2 x i32> %586, i32 %extelt.offset10, i64 1, !dbg !23
  %588 = trunc <2 x i32> %587 to <2 x i16>, !dbg !23
  %589 = bitcast <2 x i16> %588 to <2 x half>, !dbg !23
  %590 = fpext <2 x half> %589 to <2 x float>, !dbg !46
  %591 = fmul <2 x float> %590, <float 1.250000e-01, float 1.250000e-01>, !dbg !47
  %592 = fadd <2 x float> %585, %591, !dbg !48
  %593 = fmul <2 x float> %504, %527, !dbg !49
  %594 = fmul <2 x float> %592, %593, !dbg !50
  %595 = fptrunc <2 x float> %594 to <2 x half>, !dbg !51
  %596 = insertelement <2 x i32> poison, i32 %507, i64 0, !dbg !19
  %597 = insertelement <2 x i32> %596, i32 %extelt.offset3, i64 1, !dbg !19
  %598 = trunc <2 x i32> %597 to <2 x i16>, !dbg !19
  %599 = bitcast <2 x i16> %598 to <2 x half>, !dbg !19
  %600 = fpext <2 x half> %599 to <2 x float>, !dbg !43
  %601 = insertelement <2 x i32> poison, i32 %508, i64 0, !dbg !21
  %602 = insertelement <2 x i32> %601, i32 %extelt.offset7, i64 1, !dbg !21
  %603 = trunc <2 x i32> %602 to <2 x i16>, !dbg !21
  %604 = bitcast <2 x i16> %603 to <2 x half>, !dbg !21
  %605 = fpext <2 x half> %604 to <2 x float>, !dbg !44
  %606 = fadd <2 x float> %600, %605, !dbg !45
  %607 = insertelement <2 x i32> poison, i32 %509, i64 0, !dbg !23
  %608 = insertelement <2 x i32> %607, i32 %extelt.offset11, i64 1, !dbg !23
  %609 = trunc <2 x i32> %608 to <2 x i16>, !dbg !23
  %610 = bitcast <2 x i16> %609 to <2 x half>, !dbg !23
  %611 = fpext <2 x half> %610 to <2 x float>, !dbg !46
  %612 = fmul <2 x float> %611, <float 1.250000e-01, float 1.250000e-01>, !dbg !47
  %613 = fadd <2 x float> %606, %612, !dbg !48
  %614 = fmul <2 x float> %503, %530, !dbg !49
  %615 = fmul <2 x float> %613, %614, !dbg !50
  %616 = fptrunc <2 x float> %615 to <2 x half>, !dbg !51
  %617 = bitcast <2 x half> %553 to i32, !dbg !51
  %618 = bitcast <2 x half> %574 to i32, !dbg !51
  %619 = bitcast <2 x half> %595 to i32, !dbg !51
  %620 = bitcast <2 x half> %616 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %617, i32 %618, i32 %619, i32 %620, ptr addrspace(1) %532, i1 %12) #4, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_erff(float %a) local_unnamed_addr #1 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #4
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #4
  %.0 = select i1 %.not, float %2, float %1
  %3 = fcmp oge float %.0, 0x3FF00C1FC0000000
  br i1 %3, label %__nv_fabsf.exit1, label %5

__nv_fabsf.exit1:                                 ; preds = %__nv_fabsf.exit
  %4 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not1 = icmp eq i32 %4, 0
  %.01 = select i1 %.not1, float %2, float %1
  br label %__internal_fmad.exit

5:                                                ; preds = %__nv_fabsf.exit
  %6 = fmul float %a, %a
  br label %__internal_fmad.exit

__internal_fmad.exit:                             ; preds = %5, %__nv_fabsf.exit1
  %7 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1 ], [ 0x3FC06EBA60000000, %5 ]
  %8 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1 ], [ 0xBFD8127580000000, %5 ]
  %9 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1 ], [ 0x3FBCE315E0000000, %5 ]
  %10 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1 ], [ 0xBF9B837CE0000000, %5 ]
  %11 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1 ], [ 0x3F755ABD40000000, %5 ]
  %12 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1 ], [ 0xBF4AE9A400000000, %5 ]
  %13 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1 ], [ 0x3F163D2D40000000, %5 ]
  %14 = phi float [ %.01, %__nv_fabsf.exit1 ], [ %6, %5 ]
  %15 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not2 = icmp eq i32 %15, 0
  %16 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %13, float %14, float %12) #4
  %17 = tail call float @llvm.nvvm.fma.rn.f(float %13, float %14, float %12) #4
  %.02 = select i1 %.not2, float %17, float %16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not3 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02, float %14, float %11) #4
  %20 = tail call float @llvm.nvvm.fma.rn.f(float %.02, float %14, float %11) #4
  %.03 = select i1 %.not3, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not4 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03, float %14, float %10) #4
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.03, float %14, float %10) #4
  %.04 = select i1 %.not4, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not5 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %14, float %9) #4
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %14, float %9) #4
  %.05 = select i1 %.not5, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not6 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %14, float %8) #4
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %14, float %8) #4
  %.06 = select i1 %.not6, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not7 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %14, float %7) #4
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %14, float %7) #4
  %.07 = select i1 %.not7, float %32, float %31
  %33 = fneg float %14
  %34 = select i1 %3, float %33, float %a
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not8 = icmp eq i32 %35, 0
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07, float %34, float %34) #4
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %.07, float %34, float %34) #4
  %.08 = select i1 %.not8, float %37, float %36
  br i1 %3, label %38, label %46

38:                                               ; preds = %__internal_fmad.exit
  %39 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08) #4
  %40 = fsub float 1.000000e+00, %39
  %41 = bitcast float %40 to i32
  %42 = bitcast float %a to i32
  %43 = and i32 %42, -2147483648
  %44 = or i32 %43, %41
  %45 = bitcast i32 %44 to float
  br label %46

46:                                               ; preds = %38, %__internal_fmad.exit
  %r.0 = phi float [ %45, %38 ], [ %.08, %__internal_fmad.exit ]
  ret float %r.0
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cfr2obw4bsbmxazzh44edl2pawpvjhvgy2hmqbtitxrpethvbuix.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/fr")
!4 = !{ptr @triton__0d1d2d3d4de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4de", linkageName: "triton__0d1d2d3d4de", scope: !3, file: !3, line: 20, type: !8, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 36, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 21, column: 33, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 20, scope: !7)
!16 = !DILocation(line: 27, column: 41, scope: !7)
!17 = !DILocation(line: 27, column: 36, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 47, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 47, scope: !7)
!24 = !DILocation(line: 30, column: 37, scope: !7)
!25 = !DILocation(line: 30, column: 43, scope: !7)
!26 = !DILocation(line: 30, column: 30, scope: !7)
!27 = !DILocation(line: 30, column: 54, scope: !7)
!28 = !DILocation(line: 31, column: 30, scope: !7)
!29 = !DILocation(line: 31, column: 42, scope: !7)
!30 = !DILocation(line: 32, column: 31, scope: !7)
!31 = !DILocation(line: 32, column: 55, scope: !7)
!32 = !DILocation(line: 30, column: 64, scope: !7)
!33 = !DILocation(line: 31, column: 82, scope: !7)
!34 = !DILocation(line: 32, column: 65, scope: !7)
!35 = !DILocation(line: 37, column: 18, scope: !7)
!36 = !DILocation(line: 38, column: 20, scope: !7)
!37 = !DILocation(line: 39, column: 19, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 45, column: 26, scope: !7)
!40 = !DILocation(line: 42, column: 20, scope: !7)
!41 = !DILocation(line: 47, column: 20, scope: !7)
!42 = !DILocation(line: 51, column: 25, scope: !7)
!43 = !DILocation(line: 27, column: 57, scope: !7)
!44 = !DILocation(line: 28, column: 75, scope: !7)
!45 = !DILocation(line: 33, column: 18, scope: !7)
!46 = !DILocation(line: 29, column: 57, scope: !7)
!47 = !DILocation(line: 35, column: 18, scope: !7)
!48 = !DILocation(line: 36, column: 18, scope: !7)
!49 = !DILocation(line: 48, column: 20, scope: !7)
!50 = !DILocation(line: 50, column: 19, scope: !7)
!51 = !DILocation(line: 51, column: 37, scope: !7)
!52 = !DILocation(line: 51, column: 4, scope: !7)
