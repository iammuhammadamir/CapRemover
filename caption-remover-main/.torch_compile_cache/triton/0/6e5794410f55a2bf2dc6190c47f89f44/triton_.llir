; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton__0d1d2d3d4de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %7 = shl i32 %6, 3, !dbg !10
  %8 = and i32 %7, 1016, !dbg !10
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !11
  %10 = shl i32 %9, 10, !dbg !12
  %11 = or i32 %10, %8, !dbg !13
  %.frozen = freeze i32 %11
  %12 = sdiv i32 %.frozen, 5120, !dbg !14
  %13 = mul i32 %12, 5120
  %.decomposed = sub i32 %.frozen, %13
  %14 = mul i32 %12, 10240, !dbg !15
  %15 = add i32 %14, %.decomposed, !dbg !16
  %16 = sext i32 %15 to i64, !dbg !17
  %17 = getelementptr half, ptr addrspace(1) %0, i64 %16, !dbg !17
  %18 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #4, !dbg !18
  %19 = sext i32 %.decomposed to i64, !dbg !19
  %20 = getelementptr half, ptr addrspace(1) %1, i64 %19, !dbg !19
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %20, i1 true) #4, !dbg !20
  %22 = getelementptr half, ptr addrspace(1) %2, i64 %16, !dbg !21
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %22, i1 true) #4, !dbg !22
  %24 = add nsw i32 %.decomposed, 5120, !dbg !23
  %25 = add i32 %24, %14, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr half, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %27, i1 true) #4, !dbg !26
  %29 = extractvalue { i32, i32, i32, i32 } %28, 0, !dbg !26
  %30 = extractvalue { i32, i32, i32, i32 } %28, 1, !dbg !26
  %31 = extractvalue { i32, i32, i32, i32 } %28, 2, !dbg !26
  %32 = extractvalue { i32, i32, i32, i32 } %28, 3, !dbg !26
  %extelt.offset12 = lshr i32 %29, 16, !dbg !26
  %extelt.offset13 = lshr i32 %30, 16, !dbg !26
  %extelt.offset14 = lshr i32 %31, 16, !dbg !26
  %extelt.offset15 = lshr i32 %32, 16, !dbg !26
  %33 = zext nneg i32 %24 to i64, !dbg !27
  %34 = getelementptr half, ptr addrspace(1) %1, i64 %33, !dbg !27
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !28
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !28
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !28
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !28
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !28
  %extelt.offset16 = lshr i32 %36, 16, !dbg !28
  %extelt.offset17 = lshr i32 %37, 16, !dbg !28
  %extelt.offset18 = lshr i32 %38, 16, !dbg !28
  %extelt.offset19 = lshr i32 %39, 16, !dbg !28
  %40 = getelementptr half, ptr addrspace(1) %2, i64 %26, !dbg !29
  %41 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %40, i1 true) #4, !dbg !30
  %42 = extractvalue { i32, i32, i32, i32 } %41, 0, !dbg !30
  %43 = extractvalue { i32, i32, i32, i32 } %41, 1, !dbg !30
  %44 = extractvalue { i32, i32, i32, i32 } %41, 2, !dbg !30
  %45 = extractvalue { i32, i32, i32, i32 } %41, 3, !dbg !30
  %extelt.offset20 = lshr i32 %42, 16, !dbg !30
  %extelt.offset21 = lshr i32 %43, 16, !dbg !30
  %extelt.offset22 = lshr i32 %44, 16, !dbg !30
  %extelt.offset23 = lshr i32 %45, 16, !dbg !30
  %46 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !26
  %47 = insertelement <2 x i32> %46, i32 %extelt.offset12, i64 1, !dbg !26
  %48 = trunc <2 x i32> %47 to <2 x i16>, !dbg !26
  %49 = bitcast <2 x i16> %48 to <2 x half>, !dbg !26
  %50 = fpext <2 x half> %49 to <2 x float>, !dbg !31
  %51 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !28
  %52 = insertelement <2 x i32> %51, i32 %extelt.offset16, i64 1, !dbg !28
  %53 = trunc <2 x i32> %52 to <2 x i16>, !dbg !28
  %54 = bitcast <2 x i16> %53 to <2 x half>, !dbg !28
  %55 = fpext <2 x half> %54 to <2 x float>, !dbg !32
  %56 = insertelement <2 x i32> poison, i32 %42, i64 0, !dbg !30
  %57 = insertelement <2 x i32> %56, i32 %extelt.offset20, i64 1, !dbg !30
  %58 = trunc <2 x i32> %57 to <2 x i16>, !dbg !30
  %59 = bitcast <2 x i16> %58 to <2 x half>, !dbg !30
  %60 = fpext <2 x half> %59 to <2 x float>, !dbg !33
  %61 = fadd <2 x float> %50, %55, !dbg !34
  %62 = fmul <2 x float> %60, <float 1.250000e-01, float 1.250000e-01>, !dbg !35
  %63 = fadd <2 x float> %61, %62, !dbg !36
  %64 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !26
  %65 = insertelement <2 x i32> %64, i32 %extelt.offset13, i64 1, !dbg !26
  %66 = trunc <2 x i32> %65 to <2 x i16>, !dbg !26
  %67 = bitcast <2 x i16> %66 to <2 x half>, !dbg !26
  %68 = fpext <2 x half> %67 to <2 x float>, !dbg !31
  %69 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !28
  %70 = insertelement <2 x i32> %69, i32 %extelt.offset17, i64 1, !dbg !28
  %71 = trunc <2 x i32> %70 to <2 x i16>, !dbg !28
  %72 = bitcast <2 x i16> %71 to <2 x half>, !dbg !28
  %73 = fpext <2 x half> %72 to <2 x float>, !dbg !32
  %74 = insertelement <2 x i32> poison, i32 %43, i64 0, !dbg !30
  %75 = insertelement <2 x i32> %74, i32 %extelt.offset21, i64 1, !dbg !30
  %76 = trunc <2 x i32> %75 to <2 x i16>, !dbg !30
  %77 = bitcast <2 x i16> %76 to <2 x half>, !dbg !30
  %78 = fpext <2 x half> %77 to <2 x float>, !dbg !33
  %79 = fadd <2 x float> %68, %73, !dbg !34
  %80 = fmul <2 x float> %78, <float 1.250000e-01, float 1.250000e-01>, !dbg !35
  %81 = fadd <2 x float> %79, %80, !dbg !36
  %82 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !26
  %83 = insertelement <2 x i32> %82, i32 %extelt.offset14, i64 1, !dbg !26
  %84 = trunc <2 x i32> %83 to <2 x i16>, !dbg !26
  %85 = bitcast <2 x i16> %84 to <2 x half>, !dbg !26
  %86 = fpext <2 x half> %85 to <2 x float>, !dbg !31
  %87 = insertelement <2 x i32> poison, i32 %38, i64 0, !dbg !28
  %88 = insertelement <2 x i32> %87, i32 %extelt.offset18, i64 1, !dbg !28
  %89 = trunc <2 x i32> %88 to <2 x i16>, !dbg !28
  %90 = bitcast <2 x i16> %89 to <2 x half>, !dbg !28
  %91 = fpext <2 x half> %90 to <2 x float>, !dbg !32
  %92 = insertelement <2 x i32> poison, i32 %44, i64 0, !dbg !30
  %93 = insertelement <2 x i32> %92, i32 %extelt.offset22, i64 1, !dbg !30
  %94 = trunc <2 x i32> %93 to <2 x i16>, !dbg !30
  %95 = bitcast <2 x i16> %94 to <2 x half>, !dbg !30
  %96 = fpext <2 x half> %95 to <2 x float>, !dbg !33
  %97 = fadd <2 x float> %86, %91, !dbg !34
  %98 = fmul <2 x float> %96, <float 1.250000e-01, float 1.250000e-01>, !dbg !35
  %99 = fadd <2 x float> %97, %98, !dbg !36
  %100 = insertelement <2 x i32> poison, i32 %32, i64 0, !dbg !26
  %101 = insertelement <2 x i32> %100, i32 %extelt.offset15, i64 1, !dbg !26
  %102 = trunc <2 x i32> %101 to <2 x i16>, !dbg !26
  %103 = bitcast <2 x i16> %102 to <2 x half>, !dbg !26
  %104 = fpext <2 x half> %103 to <2 x float>, !dbg !31
  %105 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !28
  %106 = insertelement <2 x i32> %105, i32 %extelt.offset19, i64 1, !dbg !28
  %107 = trunc <2 x i32> %106 to <2 x i16>, !dbg !28
  %108 = bitcast <2 x i16> %107 to <2 x half>, !dbg !28
  %109 = fpext <2 x half> %108 to <2 x float>, !dbg !32
  %110 = insertelement <2 x i32> poison, i32 %45, i64 0, !dbg !30
  %111 = insertelement <2 x i32> %110, i32 %extelt.offset23, i64 1, !dbg !30
  %112 = trunc <2 x i32> %111 to <2 x i16>, !dbg !30
  %113 = bitcast <2 x i16> %112 to <2 x half>, !dbg !30
  %114 = fpext <2 x half> %113 to <2 x float>, !dbg !33
  %115 = fadd <2 x float> %104, %109, !dbg !34
  %116 = fmul <2 x float> %114, <float 1.250000e-01, float 1.250000e-01>, !dbg !35
  %117 = fadd <2 x float> %115, %116, !dbg !36
  %118 = extractelement <2 x float> %63, i64 0, !dbg !37
  %119 = fmul float %118, 0x3FE6A09E60000000, !dbg !37
  %120 = extractelement <2 x float> %63, i64 1, !dbg !37
  %121 = fmul float %120, 0x3FE6A09E60000000, !dbg !37
  %122 = extractelement <2 x float> %81, i64 0, !dbg !37
  %123 = fmul float %122, 0x3FE6A09E60000000, !dbg !37
  %124 = extractelement <2 x float> %81, i64 1, !dbg !37
  %125 = fmul float %124, 0x3FE6A09E60000000, !dbg !37
  %126 = extractelement <2 x float> %99, i64 0, !dbg !37
  %127 = fmul float %126, 0x3FE6A09E60000000, !dbg !37
  %128 = extractelement <2 x float> %99, i64 1, !dbg !37
  %129 = fmul float %128, 0x3FE6A09E60000000, !dbg !37
  %130 = extractelement <2 x float> %117, i64 0, !dbg !37
  %131 = fmul float %130, 0x3FE6A09E60000000, !dbg !37
  %132 = extractelement <2 x float> %117, i64 1, !dbg !37
  %133 = fmul float %132, 0x3FE6A09E60000000, !dbg !37
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i = icmp eq i32 %134, 0, !dbg !38
  %135 = tail call float @llvm.nvvm.fabs.ftz.f(float %119) #4, !dbg !38
  %136 = tail call float @llvm.nvvm.fabs.f(float %119) #4, !dbg !38
  %.0.i = select i1 %.not.i, float %136, float %135, !dbg !38
  %137 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !38
  br i1 %137, label %__nv_fabsf.exit1.i, label %139, !dbg !38

__nv_fabsf.exit1.i:                               ; preds = %5
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i = icmp eq i32 %138, 0, !dbg !38
  %.01.i = select i1 %.not1.i, float %136, float %135, !dbg !38
  br label %__internal_fmad.exit.i, !dbg !38

139:                                              ; preds = %5
  %140 = fmul float %119, %119, !dbg !38
  br label %__internal_fmad.exit.i, !dbg !38

__internal_fmad.exit.i:                           ; preds = %139, %__nv_fabsf.exit1.i
  %141 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %139 ], !dbg !38
  %142 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %139 ], !dbg !38
  %143 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %139 ], !dbg !38
  %144 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %139 ], !dbg !38
  %145 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %139 ], !dbg !38
  %146 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %139 ], !dbg !38
  %147 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %139 ], !dbg !38
  %148 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %140, %139 ], !dbg !38
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i = icmp eq i32 %149, 0, !dbg !38
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %147, float %148, float %146) #4, !dbg !38
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %147, float %148, float %146) #4, !dbg !38
  %.02.i = select i1 %.not2.i, float %151, float %150, !dbg !38
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i = icmp eq i32 %152, 0, !dbg !38
  %153 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %148, float %145) #4, !dbg !38
  %154 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %148, float %145) #4, !dbg !38
  %.03.i = select i1 %.not3.i, float %154, float %153, !dbg !38
  %155 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i = icmp eq i32 %155, 0, !dbg !38
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %148, float %144) #4, !dbg !38
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %148, float %144) #4, !dbg !38
  %.04.i = select i1 %.not4.i, float %157, float %156, !dbg !38
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i = icmp eq i32 %158, 0, !dbg !38
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %148, float %143) #4, !dbg !38
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %148, float %143) #4, !dbg !38
  %.05.i = select i1 %.not5.i, float %160, float %159, !dbg !38
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i = icmp eq i32 %161, 0, !dbg !38
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %148, float %142) #4, !dbg !38
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %148, float %142) #4, !dbg !38
  %.06.i = select i1 %.not6.i, float %163, float %162, !dbg !38
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i = icmp eq i32 %164, 0, !dbg !38
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %148, float %141) #4, !dbg !38
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %148, float %141) #4, !dbg !38
  %.07.i = select i1 %.not7.i, float %166, float %165, !dbg !38
  %167 = fneg float %148, !dbg !38
  %168 = select i1 %137, float %167, float %119, !dbg !38
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i = icmp eq i32 %169, 0, !dbg !38
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %168, float %168) #4, !dbg !38
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %168, float %168) #4, !dbg !38
  %.08.i = select i1 %.not8.i, float %171, float %170, !dbg !38
  br i1 %137, label %172, label %__nv_erff.exit, !dbg !38

172:                                              ; preds = %__internal_fmad.exit.i
  %173 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #4, !dbg !38
  %174 = fsub float 1.000000e+00, %173, !dbg !38
  %175 = bitcast float %174 to i32, !dbg !38
  %176 = bitcast float %119 to i32, !dbg !38
  %177 = and i32 %176, -2147483648, !dbg !38
  %178 = or i32 %177, %175, !dbg !38
  %179 = bitcast i32 %178 to float, !dbg !38
  br label %__nv_erff.exit, !dbg !38

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %172
  %r.0.i = phi float [ %179, %172 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !38
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i24 = icmp eq i32 %180, 0, !dbg !38
  %181 = tail call float @llvm.nvvm.fabs.ftz.f(float %121) #4, !dbg !38
  %182 = tail call float @llvm.nvvm.fabs.f(float %121) #4, !dbg !38
  %.0.i25 = select i1 %.not.i24, float %182, float %181, !dbg !38
  %183 = fcmp oge float %.0.i25, 0x3FF00C1FC0000000, !dbg !38
  br i1 %183, label %__nv_fabsf.exit1.i42, label %185, !dbg !38

__nv_fabsf.exit1.i42:                             ; preds = %__nv_erff.exit
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i43 = icmp eq i32 %184, 0, !dbg !38
  %.01.i44 = select i1 %.not1.i43, float %182, float %181, !dbg !38
  br label %__internal_fmad.exit.i26, !dbg !38

185:                                              ; preds = %__nv_erff.exit
  %186 = fmul float %121, %121, !dbg !38
  br label %__internal_fmad.exit.i26, !dbg !38

__internal_fmad.exit.i26:                         ; preds = %185, %__nv_fabsf.exit1.i42
  %187 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i42 ], [ 0x3FC06EBA60000000, %185 ], !dbg !38
  %188 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i42 ], [ 0xBFD8127580000000, %185 ], !dbg !38
  %189 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i42 ], [ 0x3FBCE315E0000000, %185 ], !dbg !38
  %190 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i42 ], [ 0xBF9B837CE0000000, %185 ], !dbg !38
  %191 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i42 ], [ 0x3F755ABD40000000, %185 ], !dbg !38
  %192 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i42 ], [ 0xBF4AE9A400000000, %185 ], !dbg !38
  %193 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i42 ], [ 0x3F163D2D40000000, %185 ], !dbg !38
  %194 = phi float [ %.01.i44, %__nv_fabsf.exit1.i42 ], [ %186, %185 ], !dbg !38
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i27 = icmp eq i32 %195, 0, !dbg !38
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %193, float %194, float %192) #4, !dbg !38
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %193, float %194, float %192) #4, !dbg !38
  %.02.i28 = select i1 %.not2.i27, float %197, float %196, !dbg !38
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i29 = icmp eq i32 %198, 0, !dbg !38
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i28, float %194, float %191) #4, !dbg !38
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i28, float %194, float %191) #4, !dbg !38
  %.03.i30 = select i1 %.not3.i29, float %200, float %199, !dbg !38
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i31 = icmp eq i32 %201, 0, !dbg !38
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i30, float %194, float %190) #4, !dbg !38
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i30, float %194, float %190) #4, !dbg !38
  %.04.i32 = select i1 %.not4.i31, float %203, float %202, !dbg !38
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i33 = icmp eq i32 %204, 0, !dbg !38
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i32, float %194, float %189) #4, !dbg !38
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i32, float %194, float %189) #4, !dbg !38
  %.05.i34 = select i1 %.not5.i33, float %206, float %205, !dbg !38
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i35 = icmp eq i32 %207, 0, !dbg !38
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i34, float %194, float %188) #4, !dbg !38
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i34, float %194, float %188) #4, !dbg !38
  %.06.i36 = select i1 %.not6.i35, float %209, float %208, !dbg !38
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i37 = icmp eq i32 %210, 0, !dbg !38
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i36, float %194, float %187) #4, !dbg !38
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i36, float %194, float %187) #4, !dbg !38
  %.07.i38 = select i1 %.not7.i37, float %212, float %211, !dbg !38
  %213 = fneg float %194, !dbg !38
  %214 = select i1 %183, float %213, float %121, !dbg !38
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i39 = icmp eq i32 %215, 0, !dbg !38
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i38, float %214, float %214) #4, !dbg !38
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i38, float %214, float %214) #4, !dbg !38
  %.08.i40 = select i1 %.not8.i39, float %217, float %216, !dbg !38
  br i1 %183, label %218, label %__nv_erff.exit45, !dbg !38

218:                                              ; preds = %__internal_fmad.exit.i26
  %219 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i40) #4, !dbg !38
  %220 = fsub float 1.000000e+00, %219, !dbg !38
  %221 = bitcast float %220 to i32, !dbg !38
  %222 = bitcast float %121 to i32, !dbg !38
  %223 = and i32 %222, -2147483648, !dbg !38
  %224 = or i32 %223, %221, !dbg !38
  %225 = bitcast i32 %224 to float, !dbg !38
  br label %__nv_erff.exit45, !dbg !38

__nv_erff.exit45:                                 ; preds = %__internal_fmad.exit.i26, %218
  %r.0.i41 = phi float [ %225, %218 ], [ %.08.i40, %__internal_fmad.exit.i26 ], !dbg !38
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i46 = icmp eq i32 %226, 0, !dbg !38
  %227 = tail call float @llvm.nvvm.fabs.ftz.f(float %123) #4, !dbg !38
  %228 = tail call float @llvm.nvvm.fabs.f(float %123) #4, !dbg !38
  %.0.i47 = select i1 %.not.i46, float %228, float %227, !dbg !38
  %229 = fcmp oge float %.0.i47, 0x3FF00C1FC0000000, !dbg !38
  br i1 %229, label %__nv_fabsf.exit1.i64, label %231, !dbg !38

__nv_fabsf.exit1.i64:                             ; preds = %__nv_erff.exit45
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i65 = icmp eq i32 %230, 0, !dbg !38
  %.01.i66 = select i1 %.not1.i65, float %228, float %227, !dbg !38
  br label %__internal_fmad.exit.i48, !dbg !38

231:                                              ; preds = %__nv_erff.exit45
  %232 = fmul float %123, %123, !dbg !38
  br label %__internal_fmad.exit.i48, !dbg !38

__internal_fmad.exit.i48:                         ; preds = %231, %__nv_fabsf.exit1.i64
  %233 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i64 ], [ 0x3FC06EBA60000000, %231 ], !dbg !38
  %234 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i64 ], [ 0xBFD8127580000000, %231 ], !dbg !38
  %235 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i64 ], [ 0x3FBCE315E0000000, %231 ], !dbg !38
  %236 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i64 ], [ 0xBF9B837CE0000000, %231 ], !dbg !38
  %237 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i64 ], [ 0x3F755ABD40000000, %231 ], !dbg !38
  %238 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i64 ], [ 0xBF4AE9A400000000, %231 ], !dbg !38
  %239 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i64 ], [ 0x3F163D2D40000000, %231 ], !dbg !38
  %240 = phi float [ %.01.i66, %__nv_fabsf.exit1.i64 ], [ %232, %231 ], !dbg !38
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i49 = icmp eq i32 %241, 0, !dbg !38
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %239, float %240, float %238) #4, !dbg !38
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %239, float %240, float %238) #4, !dbg !38
  %.02.i50 = select i1 %.not2.i49, float %243, float %242, !dbg !38
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i51 = icmp eq i32 %244, 0, !dbg !38
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i50, float %240, float %237) #4, !dbg !38
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i50, float %240, float %237) #4, !dbg !38
  %.03.i52 = select i1 %.not3.i51, float %246, float %245, !dbg !38
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i53 = icmp eq i32 %247, 0, !dbg !38
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i52, float %240, float %236) #4, !dbg !38
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i52, float %240, float %236) #4, !dbg !38
  %.04.i54 = select i1 %.not4.i53, float %249, float %248, !dbg !38
  %250 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i55 = icmp eq i32 %250, 0, !dbg !38
  %251 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %240, float %235) #4, !dbg !38
  %252 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %240, float %235) #4, !dbg !38
  %.05.i56 = select i1 %.not5.i55, float %252, float %251, !dbg !38
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i57 = icmp eq i32 %253, 0, !dbg !38
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i56, float %240, float %234) #4, !dbg !38
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i56, float %240, float %234) #4, !dbg !38
  %.06.i58 = select i1 %.not6.i57, float %255, float %254, !dbg !38
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i59 = icmp eq i32 %256, 0, !dbg !38
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i58, float %240, float %233) #4, !dbg !38
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i58, float %240, float %233) #4, !dbg !38
  %.07.i60 = select i1 %.not7.i59, float %258, float %257, !dbg !38
  %259 = fneg float %240, !dbg !38
  %260 = select i1 %229, float %259, float %123, !dbg !38
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i61 = icmp eq i32 %261, 0, !dbg !38
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i60, float %260, float %260) #4, !dbg !38
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i60, float %260, float %260) #4, !dbg !38
  %.08.i62 = select i1 %.not8.i61, float %263, float %262, !dbg !38
  br i1 %229, label %264, label %__nv_erff.exit67, !dbg !38

264:                                              ; preds = %__internal_fmad.exit.i48
  %265 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i62) #4, !dbg !38
  %266 = fsub float 1.000000e+00, %265, !dbg !38
  %267 = bitcast float %266 to i32, !dbg !38
  %268 = bitcast float %123 to i32, !dbg !38
  %269 = and i32 %268, -2147483648, !dbg !38
  %270 = or i32 %269, %267, !dbg !38
  %271 = bitcast i32 %270 to float, !dbg !38
  br label %__nv_erff.exit67, !dbg !38

__nv_erff.exit67:                                 ; preds = %__internal_fmad.exit.i48, %264
  %r.0.i63 = phi float [ %271, %264 ], [ %.08.i62, %__internal_fmad.exit.i48 ], !dbg !38
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i68 = icmp eq i32 %272, 0, !dbg !38
  %273 = tail call float @llvm.nvvm.fabs.ftz.f(float %125) #4, !dbg !38
  %274 = tail call float @llvm.nvvm.fabs.f(float %125) #4, !dbg !38
  %.0.i69 = select i1 %.not.i68, float %274, float %273, !dbg !38
  %275 = fcmp oge float %.0.i69, 0x3FF00C1FC0000000, !dbg !38
  br i1 %275, label %__nv_fabsf.exit1.i86, label %277, !dbg !38

__nv_fabsf.exit1.i86:                             ; preds = %__nv_erff.exit67
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i87 = icmp eq i32 %276, 0, !dbg !38
  %.01.i88 = select i1 %.not1.i87, float %274, float %273, !dbg !38
  br label %__internal_fmad.exit.i70, !dbg !38

277:                                              ; preds = %__nv_erff.exit67
  %278 = fmul float %125, %125, !dbg !38
  br label %__internal_fmad.exit.i70, !dbg !38

__internal_fmad.exit.i70:                         ; preds = %277, %__nv_fabsf.exit1.i86
  %279 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i86 ], [ 0x3FC06EBA60000000, %277 ], !dbg !38
  %280 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i86 ], [ 0xBFD8127580000000, %277 ], !dbg !38
  %281 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i86 ], [ 0x3FBCE315E0000000, %277 ], !dbg !38
  %282 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i86 ], [ 0xBF9B837CE0000000, %277 ], !dbg !38
  %283 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i86 ], [ 0x3F755ABD40000000, %277 ], !dbg !38
  %284 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i86 ], [ 0xBF4AE9A400000000, %277 ], !dbg !38
  %285 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i86 ], [ 0x3F163D2D40000000, %277 ], !dbg !38
  %286 = phi float [ %.01.i88, %__nv_fabsf.exit1.i86 ], [ %278, %277 ], !dbg !38
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i71 = icmp eq i32 %287, 0, !dbg !38
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %285, float %286, float %284) #4, !dbg !38
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %285, float %286, float %284) #4, !dbg !38
  %.02.i72 = select i1 %.not2.i71, float %289, float %288, !dbg !38
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i73 = icmp eq i32 %290, 0, !dbg !38
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i72, float %286, float %283) #4, !dbg !38
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i72, float %286, float %283) #4, !dbg !38
  %.03.i74 = select i1 %.not3.i73, float %292, float %291, !dbg !38
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i75 = icmp eq i32 %293, 0, !dbg !38
  %294 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i74, float %286, float %282) #4, !dbg !38
  %295 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i74, float %286, float %282) #4, !dbg !38
  %.04.i76 = select i1 %.not4.i75, float %295, float %294, !dbg !38
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i77 = icmp eq i32 %296, 0, !dbg !38
  %297 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i76, float %286, float %281) #4, !dbg !38
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i76, float %286, float %281) #4, !dbg !38
  %.05.i78 = select i1 %.not5.i77, float %298, float %297, !dbg !38
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i79 = icmp eq i32 %299, 0, !dbg !38
  %300 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i78, float %286, float %280) #4, !dbg !38
  %301 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i78, float %286, float %280) #4, !dbg !38
  %.06.i80 = select i1 %.not6.i79, float %301, float %300, !dbg !38
  %302 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i81 = icmp eq i32 %302, 0, !dbg !38
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i80, float %286, float %279) #4, !dbg !38
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i80, float %286, float %279) #4, !dbg !38
  %.07.i82 = select i1 %.not7.i81, float %304, float %303, !dbg !38
  %305 = fneg float %286, !dbg !38
  %306 = select i1 %275, float %305, float %125, !dbg !38
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i83 = icmp eq i32 %307, 0, !dbg !38
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i82, float %306, float %306) #4, !dbg !38
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i82, float %306, float %306) #4, !dbg !38
  %.08.i84 = select i1 %.not8.i83, float %309, float %308, !dbg !38
  br i1 %275, label %310, label %__nv_erff.exit89, !dbg !38

310:                                              ; preds = %__internal_fmad.exit.i70
  %311 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i84) #4, !dbg !38
  %312 = fsub float 1.000000e+00, %311, !dbg !38
  %313 = bitcast float %312 to i32, !dbg !38
  %314 = bitcast float %125 to i32, !dbg !38
  %315 = and i32 %314, -2147483648, !dbg !38
  %316 = or i32 %315, %313, !dbg !38
  %317 = bitcast i32 %316 to float, !dbg !38
  br label %__nv_erff.exit89, !dbg !38

__nv_erff.exit89:                                 ; preds = %__internal_fmad.exit.i70, %310
  %r.0.i85 = phi float [ %317, %310 ], [ %.08.i84, %__internal_fmad.exit.i70 ], !dbg !38
  %318 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i90 = icmp eq i32 %318, 0, !dbg !38
  %319 = tail call float @llvm.nvvm.fabs.ftz.f(float %127) #4, !dbg !38
  %320 = tail call float @llvm.nvvm.fabs.f(float %127) #4, !dbg !38
  %.0.i91 = select i1 %.not.i90, float %320, float %319, !dbg !38
  %321 = fcmp oge float %.0.i91, 0x3FF00C1FC0000000, !dbg !38
  br i1 %321, label %__nv_fabsf.exit1.i108, label %323, !dbg !38

__nv_fabsf.exit1.i108:                            ; preds = %__nv_erff.exit89
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i109 = icmp eq i32 %322, 0, !dbg !38
  %.01.i110 = select i1 %.not1.i109, float %320, float %319, !dbg !38
  br label %__internal_fmad.exit.i92, !dbg !38

323:                                              ; preds = %__nv_erff.exit89
  %324 = fmul float %127, %127, !dbg !38
  br label %__internal_fmad.exit.i92, !dbg !38

__internal_fmad.exit.i92:                         ; preds = %323, %__nv_fabsf.exit1.i108
  %325 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i108 ], [ 0x3FC06EBA60000000, %323 ], !dbg !38
  %326 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i108 ], [ 0xBFD8127580000000, %323 ], !dbg !38
  %327 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i108 ], [ 0x3FBCE315E0000000, %323 ], !dbg !38
  %328 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i108 ], [ 0xBF9B837CE0000000, %323 ], !dbg !38
  %329 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i108 ], [ 0x3F755ABD40000000, %323 ], !dbg !38
  %330 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i108 ], [ 0xBF4AE9A400000000, %323 ], !dbg !38
  %331 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i108 ], [ 0x3F163D2D40000000, %323 ], !dbg !38
  %332 = phi float [ %.01.i110, %__nv_fabsf.exit1.i108 ], [ %324, %323 ], !dbg !38
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i93 = icmp eq i32 %333, 0, !dbg !38
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float %332, float %330) #4, !dbg !38
  %335 = tail call float @llvm.nvvm.fma.rn.f(float %331, float %332, float %330) #4, !dbg !38
  %.02.i94 = select i1 %.not2.i93, float %335, float %334, !dbg !38
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i95 = icmp eq i32 %336, 0, !dbg !38
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i94, float %332, float %329) #4, !dbg !38
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i94, float %332, float %329) #4, !dbg !38
  %.03.i96 = select i1 %.not3.i95, float %338, float %337, !dbg !38
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i97 = icmp eq i32 %339, 0, !dbg !38
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i96, float %332, float %328) #4, !dbg !38
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i96, float %332, float %328) #4, !dbg !38
  %.04.i98 = select i1 %.not4.i97, float %341, float %340, !dbg !38
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i99 = icmp eq i32 %342, 0, !dbg !38
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i98, float %332, float %327) #4, !dbg !38
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i98, float %332, float %327) #4, !dbg !38
  %.05.i100 = select i1 %.not5.i99, float %344, float %343, !dbg !38
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i101 = icmp eq i32 %345, 0, !dbg !38
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i100, float %332, float %326) #4, !dbg !38
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i100, float %332, float %326) #4, !dbg !38
  %.06.i102 = select i1 %.not6.i101, float %347, float %346, !dbg !38
  %348 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i103 = icmp eq i32 %348, 0, !dbg !38
  %349 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i102, float %332, float %325) #4, !dbg !38
  %350 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i102, float %332, float %325) #4, !dbg !38
  %.07.i104 = select i1 %.not7.i103, float %350, float %349, !dbg !38
  %351 = fneg float %332, !dbg !38
  %352 = select i1 %321, float %351, float %127, !dbg !38
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i105 = icmp eq i32 %353, 0, !dbg !38
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i104, float %352, float %352) #4, !dbg !38
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i104, float %352, float %352) #4, !dbg !38
  %.08.i106 = select i1 %.not8.i105, float %355, float %354, !dbg !38
  br i1 %321, label %356, label %__nv_erff.exit111, !dbg !38

356:                                              ; preds = %__internal_fmad.exit.i92
  %357 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i106) #4, !dbg !38
  %358 = fsub float 1.000000e+00, %357, !dbg !38
  %359 = bitcast float %358 to i32, !dbg !38
  %360 = bitcast float %127 to i32, !dbg !38
  %361 = and i32 %360, -2147483648, !dbg !38
  %362 = or i32 %361, %359, !dbg !38
  %363 = bitcast i32 %362 to float, !dbg !38
  br label %__nv_erff.exit111, !dbg !38

__nv_erff.exit111:                                ; preds = %__internal_fmad.exit.i92, %356
  %r.0.i107 = phi float [ %363, %356 ], [ %.08.i106, %__internal_fmad.exit.i92 ], !dbg !38
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i112 = icmp eq i32 %364, 0, !dbg !38
  %365 = tail call float @llvm.nvvm.fabs.ftz.f(float %129) #4, !dbg !38
  %366 = tail call float @llvm.nvvm.fabs.f(float %129) #4, !dbg !38
  %.0.i113 = select i1 %.not.i112, float %366, float %365, !dbg !38
  %367 = fcmp oge float %.0.i113, 0x3FF00C1FC0000000, !dbg !38
  br i1 %367, label %__nv_fabsf.exit1.i130, label %369, !dbg !38

__nv_fabsf.exit1.i130:                            ; preds = %__nv_erff.exit111
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i131 = icmp eq i32 %368, 0, !dbg !38
  %.01.i132 = select i1 %.not1.i131, float %366, float %365, !dbg !38
  br label %__internal_fmad.exit.i114, !dbg !38

369:                                              ; preds = %__nv_erff.exit111
  %370 = fmul float %129, %129, !dbg !38
  br label %__internal_fmad.exit.i114, !dbg !38

__internal_fmad.exit.i114:                        ; preds = %369, %__nv_fabsf.exit1.i130
  %371 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i130 ], [ 0x3FC06EBA60000000, %369 ], !dbg !38
  %372 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i130 ], [ 0xBFD8127580000000, %369 ], !dbg !38
  %373 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i130 ], [ 0x3FBCE315E0000000, %369 ], !dbg !38
  %374 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i130 ], [ 0xBF9B837CE0000000, %369 ], !dbg !38
  %375 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i130 ], [ 0x3F755ABD40000000, %369 ], !dbg !38
  %376 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i130 ], [ 0xBF4AE9A400000000, %369 ], !dbg !38
  %377 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i130 ], [ 0x3F163D2D40000000, %369 ], !dbg !38
  %378 = phi float [ %.01.i132, %__nv_fabsf.exit1.i130 ], [ %370, %369 ], !dbg !38
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i115 = icmp eq i32 %379, 0, !dbg !38
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %377, float %378, float %376) #4, !dbg !38
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %377, float %378, float %376) #4, !dbg !38
  %.02.i116 = select i1 %.not2.i115, float %381, float %380, !dbg !38
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i117 = icmp eq i32 %382, 0, !dbg !38
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i116, float %378, float %375) #4, !dbg !38
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i116, float %378, float %375) #4, !dbg !38
  %.03.i118 = select i1 %.not3.i117, float %384, float %383, !dbg !38
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i119 = icmp eq i32 %385, 0, !dbg !38
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i118, float %378, float %374) #4, !dbg !38
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i118, float %378, float %374) #4, !dbg !38
  %.04.i120 = select i1 %.not4.i119, float %387, float %386, !dbg !38
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i121 = icmp eq i32 %388, 0, !dbg !38
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i120, float %378, float %373) #4, !dbg !38
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i120, float %378, float %373) #4, !dbg !38
  %.05.i122 = select i1 %.not5.i121, float %390, float %389, !dbg !38
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i123 = icmp eq i32 %391, 0, !dbg !38
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i122, float %378, float %372) #4, !dbg !38
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i122, float %378, float %372) #4, !dbg !38
  %.06.i124 = select i1 %.not6.i123, float %393, float %392, !dbg !38
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i125 = icmp eq i32 %394, 0, !dbg !38
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %378, float %371) #4, !dbg !38
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %378, float %371) #4, !dbg !38
  %.07.i126 = select i1 %.not7.i125, float %396, float %395, !dbg !38
  %397 = fneg float %378, !dbg !38
  %398 = select i1 %367, float %397, float %129, !dbg !38
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i127 = icmp eq i32 %399, 0, !dbg !38
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i126, float %398, float %398) #4, !dbg !38
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i126, float %398, float %398) #4, !dbg !38
  %.08.i128 = select i1 %.not8.i127, float %401, float %400, !dbg !38
  br i1 %367, label %402, label %__nv_erff.exit133, !dbg !38

402:                                              ; preds = %__internal_fmad.exit.i114
  %403 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i128) #4, !dbg !38
  %404 = fsub float 1.000000e+00, %403, !dbg !38
  %405 = bitcast float %404 to i32, !dbg !38
  %406 = bitcast float %129 to i32, !dbg !38
  %407 = and i32 %406, -2147483648, !dbg !38
  %408 = or i32 %407, %405, !dbg !38
  %409 = bitcast i32 %408 to float, !dbg !38
  br label %__nv_erff.exit133, !dbg !38

__nv_erff.exit133:                                ; preds = %__internal_fmad.exit.i114, %402
  %r.0.i129 = phi float [ %409, %402 ], [ %.08.i128, %__internal_fmad.exit.i114 ], !dbg !38
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i134 = icmp eq i32 %410, 0, !dbg !38
  %411 = tail call float @llvm.nvvm.fabs.ftz.f(float %131) #4, !dbg !38
  %412 = tail call float @llvm.nvvm.fabs.f(float %131) #4, !dbg !38
  %.0.i135 = select i1 %.not.i134, float %412, float %411, !dbg !38
  %413 = fcmp oge float %.0.i135, 0x3FF00C1FC0000000, !dbg !38
  br i1 %413, label %__nv_fabsf.exit1.i152, label %415, !dbg !38

__nv_fabsf.exit1.i152:                            ; preds = %__nv_erff.exit133
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i153 = icmp eq i32 %414, 0, !dbg !38
  %.01.i154 = select i1 %.not1.i153, float %412, float %411, !dbg !38
  br label %__internal_fmad.exit.i136, !dbg !38

415:                                              ; preds = %__nv_erff.exit133
  %416 = fmul float %131, %131, !dbg !38
  br label %__internal_fmad.exit.i136, !dbg !38

__internal_fmad.exit.i136:                        ; preds = %415, %__nv_fabsf.exit1.i152
  %417 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i152 ], [ 0x3FC06EBA60000000, %415 ], !dbg !38
  %418 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i152 ], [ 0xBFD8127580000000, %415 ], !dbg !38
  %419 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i152 ], [ 0x3FBCE315E0000000, %415 ], !dbg !38
  %420 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i152 ], [ 0xBF9B837CE0000000, %415 ], !dbg !38
  %421 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i152 ], [ 0x3F755ABD40000000, %415 ], !dbg !38
  %422 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i152 ], [ 0xBF4AE9A400000000, %415 ], !dbg !38
  %423 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i152 ], [ 0x3F163D2D40000000, %415 ], !dbg !38
  %424 = phi float [ %.01.i154, %__nv_fabsf.exit1.i152 ], [ %416, %415 ], !dbg !38
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i137 = icmp eq i32 %425, 0, !dbg !38
  %426 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %423, float %424, float %422) #4, !dbg !38
  %427 = tail call float @llvm.nvvm.fma.rn.f(float %423, float %424, float %422) #4, !dbg !38
  %.02.i138 = select i1 %.not2.i137, float %427, float %426, !dbg !38
  %428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i139 = icmp eq i32 %428, 0, !dbg !38
  %429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i138, float %424, float %421) #4, !dbg !38
  %430 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i138, float %424, float %421) #4, !dbg !38
  %.03.i140 = select i1 %.not3.i139, float %430, float %429, !dbg !38
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i141 = icmp eq i32 %431, 0, !dbg !38
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i140, float %424, float %420) #4, !dbg !38
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i140, float %424, float %420) #4, !dbg !38
  %.04.i142 = select i1 %.not4.i141, float %433, float %432, !dbg !38
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i143 = icmp eq i32 %434, 0, !dbg !38
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i142, float %424, float %419) #4, !dbg !38
  %436 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i142, float %424, float %419) #4, !dbg !38
  %.05.i144 = select i1 %.not5.i143, float %436, float %435, !dbg !38
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i145 = icmp eq i32 %437, 0, !dbg !38
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i144, float %424, float %418) #4, !dbg !38
  %439 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i144, float %424, float %418) #4, !dbg !38
  %.06.i146 = select i1 %.not6.i145, float %439, float %438, !dbg !38
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i147 = icmp eq i32 %440, 0, !dbg !38
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i146, float %424, float %417) #4, !dbg !38
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i146, float %424, float %417) #4, !dbg !38
  %.07.i148 = select i1 %.not7.i147, float %442, float %441, !dbg !38
  %443 = fneg float %424, !dbg !38
  %444 = select i1 %413, float %443, float %131, !dbg !38
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i149 = icmp eq i32 %445, 0, !dbg !38
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i148, float %444, float %444) #4, !dbg !38
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i148, float %444, float %444) #4, !dbg !38
  %.08.i150 = select i1 %.not8.i149, float %447, float %446, !dbg !38
  br i1 %413, label %448, label %__nv_erff.exit155, !dbg !38

448:                                              ; preds = %__internal_fmad.exit.i136
  %449 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i150) #4, !dbg !38
  %450 = fsub float 1.000000e+00, %449, !dbg !38
  %451 = bitcast float %450 to i32, !dbg !38
  %452 = bitcast float %131 to i32, !dbg !38
  %453 = and i32 %452, -2147483648, !dbg !38
  %454 = or i32 %453, %451, !dbg !38
  %455 = bitcast i32 %454 to float, !dbg !38
  br label %__nv_erff.exit155, !dbg !38

__nv_erff.exit155:                                ; preds = %__internal_fmad.exit.i136, %448
  %r.0.i151 = phi float [ %455, %448 ], [ %.08.i150, %__internal_fmad.exit.i136 ], !dbg !38
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i156 = icmp eq i32 %456, 0, !dbg !38
  %457 = tail call float @llvm.nvvm.fabs.ftz.f(float %133) #4, !dbg !38
  %458 = tail call float @llvm.nvvm.fabs.f(float %133) #4, !dbg !38
  %.0.i157 = select i1 %.not.i156, float %458, float %457, !dbg !38
  %459 = fcmp oge float %.0.i157, 0x3FF00C1FC0000000, !dbg !38
  br i1 %459, label %__nv_fabsf.exit1.i174, label %461, !dbg !38

__nv_fabsf.exit1.i174:                            ; preds = %__nv_erff.exit155
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not1.i175 = icmp eq i32 %460, 0, !dbg !38
  %.01.i176 = select i1 %.not1.i175, float %458, float %457, !dbg !38
  br label %__internal_fmad.exit.i158, !dbg !38

461:                                              ; preds = %__nv_erff.exit155
  %462 = fmul float %133, %133, !dbg !38
  br label %__internal_fmad.exit.i158, !dbg !38

__internal_fmad.exit.i158:                        ; preds = %461, %__nv_fabsf.exit1.i174
  %463 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i174 ], [ 0x3FC06EBA60000000, %461 ], !dbg !38
  %464 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i174 ], [ 0xBFD8127580000000, %461 ], !dbg !38
  %465 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i174 ], [ 0x3FBCE315E0000000, %461 ], !dbg !38
  %466 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i174 ], [ 0xBF9B837CE0000000, %461 ], !dbg !38
  %467 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i174 ], [ 0x3F755ABD40000000, %461 ], !dbg !38
  %468 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i174 ], [ 0xBF4AE9A400000000, %461 ], !dbg !38
  %469 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i174 ], [ 0x3F163D2D40000000, %461 ], !dbg !38
  %470 = phi float [ %.01.i176, %__nv_fabsf.exit1.i174 ], [ %462, %461 ], !dbg !38
  %471 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not2.i159 = icmp eq i32 %471, 0, !dbg !38
  %472 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %469, float %470, float %468) #4, !dbg !38
  %473 = tail call float @llvm.nvvm.fma.rn.f(float %469, float %470, float %468) #4, !dbg !38
  %.02.i160 = select i1 %.not2.i159, float %473, float %472, !dbg !38
  %474 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not3.i161 = icmp eq i32 %474, 0, !dbg !38
  %475 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i160, float %470, float %467) #4, !dbg !38
  %476 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i160, float %470, float %467) #4, !dbg !38
  %.03.i162 = select i1 %.not3.i161, float %476, float %475, !dbg !38
  %477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not4.i163 = icmp eq i32 %477, 0, !dbg !38
  %478 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i162, float %470, float %466) #4, !dbg !38
  %479 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i162, float %470, float %466) #4, !dbg !38
  %.04.i164 = select i1 %.not4.i163, float %479, float %478, !dbg !38
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not5.i165 = icmp eq i32 %480, 0, !dbg !38
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i164, float %470, float %465) #4, !dbg !38
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i164, float %470, float %465) #4, !dbg !38
  %.05.i166 = select i1 %.not5.i165, float %482, float %481, !dbg !38
  %483 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not6.i167 = icmp eq i32 %483, 0, !dbg !38
  %484 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i166, float %470, float %464) #4, !dbg !38
  %485 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i166, float %470, float %464) #4, !dbg !38
  %.06.i168 = select i1 %.not6.i167, float %485, float %484, !dbg !38
  %486 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not7.i169 = icmp eq i32 %486, 0, !dbg !38
  %487 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i168, float %470, float %463) #4, !dbg !38
  %488 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i168, float %470, float %463) #4, !dbg !38
  %.07.i170 = select i1 %.not7.i169, float %488, float %487, !dbg !38
  %489 = fneg float %470, !dbg !38
  %490 = select i1 %459, float %489, float %133, !dbg !38
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not8.i171 = icmp eq i32 %491, 0, !dbg !38
  %492 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i170, float %490, float %490) #4, !dbg !38
  %493 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i170, float %490, float %490) #4, !dbg !38
  %.08.i172 = select i1 %.not8.i171, float %493, float %492, !dbg !38
  br i1 %459, label %494, label %__nv_erff.exit177, !dbg !38

494:                                              ; preds = %__internal_fmad.exit.i158
  %495 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i172) #4, !dbg !38
  %496 = fsub float 1.000000e+00, %495, !dbg !38
  %497 = bitcast float %496 to i32, !dbg !38
  %498 = bitcast float %133 to i32, !dbg !38
  %499 = and i32 %498, -2147483648, !dbg !38
  %500 = or i32 %499, %497, !dbg !38
  %501 = bitcast i32 %500 to float, !dbg !38
  br label %__nv_erff.exit177, !dbg !38

__nv_erff.exit177:                                ; preds = %__internal_fmad.exit.i158, %494
  %r.0.i173 = phi float [ %501, %494 ], [ %.08.i172, %__internal_fmad.exit.i158 ], !dbg !38
  %502 = fmul <2 x float> %117, <float 5.000000e-01, float 5.000000e-01>, !dbg !39
  %503 = fmul <2 x float> %99, <float 5.000000e-01, float 5.000000e-01>, !dbg !39
  %504 = fmul <2 x float> %81, <float 5.000000e-01, float 5.000000e-01>, !dbg !39
  %505 = fmul <2 x float> %63, <float 5.000000e-01, float 5.000000e-01>, !dbg !39
  %506 = extractvalue { i32, i32, i32, i32 } %18, 3, !dbg !18
  %extelt.offset3 = lshr i32 %506, 16, !dbg !18
  %507 = extractvalue { i32, i32, i32, i32 } %21, 3, !dbg !20
  %extelt.offset7 = lshr i32 %507, 16, !dbg !20
  %508 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !22
  %extelt.offset11 = lshr i32 %508, 16, !dbg !22
  %509 = extractvalue { i32, i32, i32, i32 } %18, 2, !dbg !18
  %extelt.offset2 = lshr i32 %509, 16, !dbg !18
  %510 = extractvalue { i32, i32, i32, i32 } %21, 2, !dbg !20
  %extelt.offset6 = lshr i32 %510, 16, !dbg !20
  %511 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !22
  %extelt.offset10 = lshr i32 %511, 16, !dbg !22
  %512 = extractvalue { i32, i32, i32, i32 } %18, 1, !dbg !18
  %extelt.offset1 = lshr i32 %512, 16, !dbg !18
  %513 = extractvalue { i32, i32, i32, i32 } %21, 1, !dbg !20
  %extelt.offset5 = lshr i32 %513, 16, !dbg !20
  %514 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !22
  %extelt.offset9 = lshr i32 %514, 16, !dbg !22
  %515 = extractvalue { i32, i32, i32, i32 } %18, 0, !dbg !18
  %extelt.offset = lshr i32 %515, 16, !dbg !18
  %516 = extractvalue { i32, i32, i32, i32 } %21, 0, !dbg !20
  %extelt.offset4 = lshr i32 %516, 16, !dbg !20
  %517 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !22
  %extelt.offset8 = lshr i32 %517, 16, !dbg !22
  %518 = insertelement <2 x float> poison, float %r.0.i, i64 0, !dbg !40
  %519 = insertelement <2 x float> %518, float %r.0.i41, i64 1, !dbg !40
  %520 = fadd <2 x float> %519, <float 1.000000e+00, float 1.000000e+00>, !dbg !40
  %521 = insertelement <2 x float> poison, float %r.0.i63, i64 0, !dbg !40
  %522 = insertelement <2 x float> %521, float %r.0.i85, i64 1, !dbg !40
  %523 = fadd <2 x float> %522, <float 1.000000e+00, float 1.000000e+00>, !dbg !40
  %524 = insertelement <2 x float> poison, float %r.0.i107, i64 0, !dbg !40
  %525 = insertelement <2 x float> %524, float %r.0.i129, i64 1, !dbg !40
  %526 = fadd <2 x float> %525, <float 1.000000e+00, float 1.000000e+00>, !dbg !40
  %527 = insertelement <2 x float> poison, float %r.0.i151, i64 0, !dbg !40
  %528 = insertelement <2 x float> %527, float %r.0.i173, i64 1, !dbg !40
  %529 = fadd <2 x float> %528, <float 1.000000e+00, float 1.000000e+00>, !dbg !40
  %530 = sext i32 %11 to i64, !dbg !41
  %531 = getelementptr half, ptr addrspace(1) %3, i64 %530, !dbg !41
  %532 = insertelement <2 x i32> poison, i32 %515, i64 0, !dbg !18
  %533 = insertelement <2 x i32> %532, i32 %extelt.offset, i64 1, !dbg !18
  %534 = trunc <2 x i32> %533 to <2 x i16>, !dbg !18
  %535 = bitcast <2 x i16> %534 to <2 x half>, !dbg !18
  %536 = fpext <2 x half> %535 to <2 x float>, !dbg !42
  %537 = insertelement <2 x i32> poison, i32 %516, i64 0, !dbg !20
  %538 = insertelement <2 x i32> %537, i32 %extelt.offset4, i64 1, !dbg !20
  %539 = trunc <2 x i32> %538 to <2 x i16>, !dbg !20
  %540 = bitcast <2 x i16> %539 to <2 x half>, !dbg !20
  %541 = fpext <2 x half> %540 to <2 x float>, !dbg !43
  %542 = fadd <2 x float> %536, %541, !dbg !44
  %543 = insertelement <2 x i32> poison, i32 %517, i64 0, !dbg !22
  %544 = insertelement <2 x i32> %543, i32 %extelt.offset8, i64 1, !dbg !22
  %545 = trunc <2 x i32> %544 to <2 x i16>, !dbg !22
  %546 = bitcast <2 x i16> %545 to <2 x half>, !dbg !22
  %547 = fpext <2 x half> %546 to <2 x float>, !dbg !45
  %548 = fmul <2 x float> %547, <float 1.250000e-01, float 1.250000e-01>, !dbg !46
  %549 = fadd <2 x float> %542, %548, !dbg !47
  %550 = fmul <2 x float> %505, %520, !dbg !48
  %551 = fmul <2 x float> %549, %550, !dbg !49
  %552 = fptrunc <2 x float> %551 to <2 x half>, !dbg !50
  %553 = insertelement <2 x i32> poison, i32 %512, i64 0, !dbg !18
  %554 = insertelement <2 x i32> %553, i32 %extelt.offset1, i64 1, !dbg !18
  %555 = trunc <2 x i32> %554 to <2 x i16>, !dbg !18
  %556 = bitcast <2 x i16> %555 to <2 x half>, !dbg !18
  %557 = fpext <2 x half> %556 to <2 x float>, !dbg !42
  %558 = insertelement <2 x i32> poison, i32 %513, i64 0, !dbg !20
  %559 = insertelement <2 x i32> %558, i32 %extelt.offset5, i64 1, !dbg !20
  %560 = trunc <2 x i32> %559 to <2 x i16>, !dbg !20
  %561 = bitcast <2 x i16> %560 to <2 x half>, !dbg !20
  %562 = fpext <2 x half> %561 to <2 x float>, !dbg !43
  %563 = fadd <2 x float> %557, %562, !dbg !44
  %564 = insertelement <2 x i32> poison, i32 %514, i64 0, !dbg !22
  %565 = insertelement <2 x i32> %564, i32 %extelt.offset9, i64 1, !dbg !22
  %566 = trunc <2 x i32> %565 to <2 x i16>, !dbg !22
  %567 = bitcast <2 x i16> %566 to <2 x half>, !dbg !22
  %568 = fpext <2 x half> %567 to <2 x float>, !dbg !45
  %569 = fmul <2 x float> %568, <float 1.250000e-01, float 1.250000e-01>, !dbg !46
  %570 = fadd <2 x float> %563, %569, !dbg !47
  %571 = fmul <2 x float> %504, %523, !dbg !48
  %572 = fmul <2 x float> %570, %571, !dbg !49
  %573 = fptrunc <2 x float> %572 to <2 x half>, !dbg !50
  %574 = insertelement <2 x i32> poison, i32 %509, i64 0, !dbg !18
  %575 = insertelement <2 x i32> %574, i32 %extelt.offset2, i64 1, !dbg !18
  %576 = trunc <2 x i32> %575 to <2 x i16>, !dbg !18
  %577 = bitcast <2 x i16> %576 to <2 x half>, !dbg !18
  %578 = fpext <2 x half> %577 to <2 x float>, !dbg !42
  %579 = insertelement <2 x i32> poison, i32 %510, i64 0, !dbg !20
  %580 = insertelement <2 x i32> %579, i32 %extelt.offset6, i64 1, !dbg !20
  %581 = trunc <2 x i32> %580 to <2 x i16>, !dbg !20
  %582 = bitcast <2 x i16> %581 to <2 x half>, !dbg !20
  %583 = fpext <2 x half> %582 to <2 x float>, !dbg !43
  %584 = fadd <2 x float> %578, %583, !dbg !44
  %585 = insertelement <2 x i32> poison, i32 %511, i64 0, !dbg !22
  %586 = insertelement <2 x i32> %585, i32 %extelt.offset10, i64 1, !dbg !22
  %587 = trunc <2 x i32> %586 to <2 x i16>, !dbg !22
  %588 = bitcast <2 x i16> %587 to <2 x half>, !dbg !22
  %589 = fpext <2 x half> %588 to <2 x float>, !dbg !45
  %590 = fmul <2 x float> %589, <float 1.250000e-01, float 1.250000e-01>, !dbg !46
  %591 = fadd <2 x float> %584, %590, !dbg !47
  %592 = fmul <2 x float> %503, %526, !dbg !48
  %593 = fmul <2 x float> %591, %592, !dbg !49
  %594 = fptrunc <2 x float> %593 to <2 x half>, !dbg !50
  %595 = insertelement <2 x i32> poison, i32 %506, i64 0, !dbg !18
  %596 = insertelement <2 x i32> %595, i32 %extelt.offset3, i64 1, !dbg !18
  %597 = trunc <2 x i32> %596 to <2 x i16>, !dbg !18
  %598 = bitcast <2 x i16> %597 to <2 x half>, !dbg !18
  %599 = fpext <2 x half> %598 to <2 x float>, !dbg !42
  %600 = insertelement <2 x i32> poison, i32 %507, i64 0, !dbg !20
  %601 = insertelement <2 x i32> %600, i32 %extelt.offset7, i64 1, !dbg !20
  %602 = trunc <2 x i32> %601 to <2 x i16>, !dbg !20
  %603 = bitcast <2 x i16> %602 to <2 x half>, !dbg !20
  %604 = fpext <2 x half> %603 to <2 x float>, !dbg !43
  %605 = fadd <2 x float> %599, %604, !dbg !44
  %606 = insertelement <2 x i32> poison, i32 %508, i64 0, !dbg !22
  %607 = insertelement <2 x i32> %606, i32 %extelt.offset11, i64 1, !dbg !22
  %608 = trunc <2 x i32> %607 to <2 x i16>, !dbg !22
  %609 = bitcast <2 x i16> %608 to <2 x half>, !dbg !22
  %610 = fpext <2 x half> %609 to <2 x float>, !dbg !45
  %611 = fmul <2 x float> %610, <float 1.250000e-01, float 1.250000e-01>, !dbg !46
  %612 = fadd <2 x float> %605, %611, !dbg !47
  %613 = fmul <2 x float> %502, %529, !dbg !48
  %614 = fmul <2 x float> %612, %613, !dbg !49
  %615 = fptrunc <2 x float> %614 to <2 x half>, !dbg !50
  %616 = bitcast <2 x half> %552 to i32, !dbg !50
  %617 = bitcast <2 x half> %573 to i32, !dbg !50
  %618 = bitcast <2 x half> %594 to i32, !dbg !50
  %619 = bitcast <2 x half> %615 to i32, !dbg !50
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %616, i32 %617, i32 %618, i32 %619, ptr addrspace(1) %531, i1 true) #4, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: alwaysinline nounwind
define float @__nv_erff(float %a) local_unnamed_addr #1 {
__nv_fabsf.exit:
  %0 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not = icmp eq i32 %0, 0
  %1 = tail call float @llvm.nvvm.fabs.ftz.f(float %a) #4
  %2 = tail call float @llvm.nvvm.fabs.f(float %a) #4
  %.0 = select i1 %.not, float %2, float %1
  %3 = fcmp oge float %.0, 0x3FF00C1FC0000000
  br i1 %3, label %__nv_fabsf.exit1, label %5

__nv_fabsf.exit1:                                 ; preds = %__nv_fabsf.exit
  %4 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not1 = icmp eq i32 %4, 0
  %.01 = select i1 %.not1, float %2, float %1
  br label %__internal_fmad.exit

5:                                                ; preds = %__nv_fabsf.exit
  %6 = fmul float %a, %a
  br label %__internal_fmad.exit

__internal_fmad.exit:                             ; preds = %5, %__nv_fabsf.exit1
  %7 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1 ], [ 0x3FC06EBA60000000, %5 ]
  %8 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1 ], [ 0xBFD8127580000000, %5 ]
  %9 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1 ], [ 0x3FBCE315E0000000, %5 ]
  %10 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1 ], [ 0xBF9B837CE0000000, %5 ]
  %11 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1 ], [ 0x3F755ABD40000000, %5 ]
  %12 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1 ], [ 0xBF4AE9A400000000, %5 ]
  %13 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1 ], [ 0x3F163D2D40000000, %5 ]
  %14 = phi float [ %.01, %__nv_fabsf.exit1 ], [ %6, %5 ]
  %15 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not2 = icmp eq i32 %15, 0
  %16 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %13, float %14, float %12) #4
  %17 = tail call float @llvm.nvvm.fma.rn.f(float %13, float %14, float %12) #4
  %.02 = select i1 %.not2, float %17, float %16
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not3 = icmp eq i32 %18, 0
  %19 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02, float %14, float %11) #4
  %20 = tail call float @llvm.nvvm.fma.rn.f(float %.02, float %14, float %11) #4
  %.03 = select i1 %.not3, float %20, float %19
  %21 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not4 = icmp eq i32 %21, 0
  %22 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03, float %14, float %10) #4
  %23 = tail call float @llvm.nvvm.fma.rn.f(float %.03, float %14, float %10) #4
  %.04 = select i1 %.not4, float %23, float %22
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not5 = icmp eq i32 %24, 0
  %25 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04, float %14, float %9) #4
  %26 = tail call float @llvm.nvvm.fma.rn.f(float %.04, float %14, float %9) #4
  %.05 = select i1 %.not5, float %26, float %25
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not6 = icmp eq i32 %27, 0
  %28 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05, float %14, float %8) #4
  %29 = tail call float @llvm.nvvm.fma.rn.f(float %.05, float %14, float %8) #4
  %.06 = select i1 %.not6, float %29, float %28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not7 = icmp eq i32 %30, 0
  %31 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06, float %14, float %7) #4
  %32 = tail call float @llvm.nvvm.fma.rn.f(float %.06, float %14, float %7) #4
  %.07 = select i1 %.not7, float %32, float %31
  %33 = fneg float %14
  %34 = select i1 %3, float %33, float %a
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4
  %.not8 = icmp eq i32 %35, 0
  %36 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07, float %34, float %34) #4
  %37 = tail call float @llvm.nvvm.fma.rn.f(float %.07, float %34, float %34) #4
  %.08 = select i1 %.not8, float %37, float %36
  br i1 %3, label %38, label %46

38:                                               ; preds = %__internal_fmad.exit
  %39 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08) #4
  %40 = fsub float 1.000000e+00, %39
  %41 = bitcast float %40 to i32
  %42 = bitcast float %a to i32
  %43 = and i32 %42, -2147483648
  %44 = or i32 %43, %41
  %45 = bitcast i32 %44 to float
  br label %46

46:                                               ; preds = %38, %__internal_fmad.exit
  %r.0 = phi float [ %45, %38 ], [ %.08, %__internal_fmad.exit ]
  ret float %r.0
}

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { alwaysinline nounwind "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5, !5, !4}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!3 = !DIFile(filename: "cgqt4jmbiqbrcciuhtan2x3ky6m5gm7sks4kqd7soy3432iuol7q.py", directory: "/workspace/caption-remover-main/src/stages/inpaint/../../../.torch_compile_cache/gq")
!4 = !{ptr @triton__0d1d2d3d4de, !"kernel", i32 1}
!5 = !{ptr @triton__0d1d2d3d4de, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton__0d1d2d3d4de", linkageName: "triton__0d1d2d3d4de", scope: !3, file: !3, line: 20, type: !8, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 36, scope: !7)
!11 = !DILocation(line: 21, column: 28, scope: !7)
!12 = !DILocation(line: 21, column: 33, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 20, scope: !7)
!15 = !DILocation(line: 27, column: 42, scope: !7)
!16 = !DILocation(line: 27, column: 36, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 48, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 48, scope: !7)
!23 = !DILocation(line: 30, column: 37, scope: !7)
!24 = !DILocation(line: 30, column: 43, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 55, scope: !7)
!27 = !DILocation(line: 31, column: 30, scope: !7)
!28 = !DILocation(line: 31, column: 42, scope: !7)
!29 = !DILocation(line: 32, column: 31, scope: !7)
!30 = !DILocation(line: 32, column: 56, scope: !7)
!31 = !DILocation(line: 30, column: 64, scope: !7)
!32 = !DILocation(line: 31, column: 81, scope: !7)
!33 = !DILocation(line: 32, column: 65, scope: !7)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 20, scope: !7)
!36 = !DILocation(line: 39, column: 19, scope: !7)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 45, column: 26, scope: !7)
!39 = !DILocation(line: 42, column: 20, scope: !7)
!40 = !DILocation(line: 47, column: 20, scope: !7)
!41 = !DILocation(line: 51, column: 25, scope: !7)
!42 = !DILocation(line: 27, column: 57, scope: !7)
!43 = !DILocation(line: 28, column: 74, scope: !7)
!44 = !DILocation(line: 33, column: 18, scope: !7)
!45 = !DILocation(line: 29, column: 57, scope: !7)
!46 = !DILocation(line: 35, column: 18, scope: !7)
!47 = !DILocation(line: 36, column: 18, scope: !7)
!48 = !DILocation(line: 48, column: 20, scope: !7)
!49 = !DILocation(line: 50, column: 19, scope: !7)
!50 = !DILocation(line: 51, column: 37, scope: !7)
!51 = !DILocation(line: 51, column: 4, scope: !7)
